(undo-tree-save-format-version . 1)
"030dbe9f5522aaa6f4a2f2254f004595ad4936e1"
[nil nil nil nil (25665 24708 6116 858000) 0 nil]
([nil nil ((#("#include \"mlir/IR/Block.h\"
#include \"mlir/IR/Builders.h\"
#include \"mlir/IR/MLIRContext.h\"
#include \"mlir/IR/Operation.h\"
#include \"mlir/IR/PatternMatch.h\"

using namespace mlir;

struct InputAnalysisPass {
  void runOnModule(ModuleOp module) {
    module.walk([&](Operation *op) {
      // Check if the operation is a function.
      auto func = dyn_cast<FuncOp>(op);
      if (!func)
        return;

      auto &entryBlock = func.getBlocks().front();

      // Iterate through the arguments of the function.
      for (auto arg : entryBlock.getArguments()) {
        bool inputInfluencesLoop = false;

        // Iterate through the uses of the input.
        for (auto &use : arg.getUses()) {
          auto user = use.getOwner();
          // Check if the user is an operation with a known loop structure.
          if (auto forOp = dyn_cast<mlir::scf::ForOp>(user)) {
            // Check if the input influences the loop's bounds or step.
            if (arg == forOp.lowerBound() || arg == forOp.upperBound() || arg == forOp.step()) {
              inputInfluencesLoop = true;
              break;
            }
          }
        }

        if (inputInfluencesLoop) {
          llvm::errs() << \"Input \" << arg << \" is associated with the number of iterations of a loop.\\n\";
        } else {
          llvm::errs() << \"Input \" << arg << \" is NOT associated with the number of iterations of a loop.\\n\";
        }
      }
    });
  }
};

namespace mlir {
void registerInputAnalysisPass() {
  PassRegistration<InputAnalysisPass>(
      \"input-analysis\",
      \"Analyze input values to determine if they influence the number of iterations of any loops\");
}
}  // namespace mlir

#include \"mlir/InitAllDialects.h\"
#include \"mlir/Pass/PassManager.h\"

int main() {
  mlir::registerAllDialects();
  mlir::PassManager pm;
  pm.addPass(std::make_unique<InputAnalysisPass>());
  return pm.run(mlir::parseSourceString(R\"mlir(
      func @test(%a: i32) {
        %0 = scf.for %arg0 = %a to 10 : (i32) {
          %1 = addi %arg0, 1 : i32
        }
        return
      }
    )mlir\", mlir::MLIRContext()));
}
" 0 1 (fontified t face font-lock-preprocessor-face c-is-sws t) 1 8 (fontified t face font-lock-preprocessor-face) 8 9 (fontified t) 9 26 (fontified t face font-lock-string-face) 26 27 (fontified t) 27 28 (fontified t face font-lock-preprocessor-face c-is-sws t) 28 35 (fontified t face font-lock-preprocessor-face) 35 36 (fontified t) 36 56 (fontified t face font-lock-string-face) 56 57 (fontified t) 57 58 (fontified t face font-lock-preprocessor-face c-is-sws t) 58 65 (fontified t face font-lock-preprocessor-face) 65 66 (fontified t) 66 89 (fontified t face font-lock-string-face) 89 90 (fontified t) 90 91 (fontified t face font-lock-preprocessor-face c-is-sws t) 91 98 (fontified t face font-lock-preprocessor-face) 98 99 (fontified t) 99 120 (fontified t face font-lock-string-face) 120 121 (fontified t) 121 122 (fontified t face font-lock-preprocessor-face c-is-sws t) 122 129 (fontified t face font-lock-preprocessor-face) 129 130 (fontified t) 130 154 (fontified t face font-lock-string-face) 154 155 (fontified t) 155 156 (fontified t c-is-sws t) 156 157 (fontified t face font-lock-keyword-face c-is-sws t) 157 161 (fontified t face font-lock-keyword-face) 161 162 (fontified t) 162 171 (fontified t face font-lock-keyword-face) 171 172 (fontified t) 172 176 (fontified t face font-lock-constant-face) 176 179 (fontified t) 179 184 (fontified t face font-lock-keyword-face) 184 185 (fontified t face font-lock-keyword-face c-type c-decl-type-start) 185 186 (fontified t) 186 203 (fontified t face font-lock-type-face) 203 204 (fontified t) 204 205 (fontified t face (rainbow-delimiters-depth-1-face)) 205 208 (fontified t) 208 211 (fontified t face font-lock-type-face) 211 212 (fontified t c-type c-decl-id-start face font-lock-type-face) 212 213 (fontified t) 213 224 (fontified t face font-lock-function-name-face) 224 225 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-2-face)) 225 233 (fontified t face font-lock-type-face) 233 234 (fontified t) 234 240 (fontified t face font-lock-variable-name-face) 240 241 (fontified t face (rainbow-delimiters-depth-2-face)) 241 242 (fontified t) 242 243 (fontified t face (rainbow-delimiters-depth-2-face)) 243 259 (fontified t) 259 260 (fontified t face (rainbow-delimiters-depth-3-face)) 260 261 (fontified t face (rainbow-delimiters-depth-4-face)) 261 262 (fontified t) 262 263 (fontified t face (rainbow-delimiters-depth-4-face)) 263 264 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-4-face)) 264 273 (fontified t face font-lock-type-face) 273 275 (fontified t) 275 277 (fontified t face font-lock-variable-name-face) 277 278 (fontified t face (rainbow-delimiters-depth-4-face)) 278 279 (fontified t) 279 280 (fontified t face (rainbow-delimiters-depth-4-face)) 280 281 (fontified t) 281 287 (fontified t c-in-sws t c-is-sws t) 287 288 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 288 290 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 290 328 (fontified t face font-lock-comment-face c-in-sws t) 328 334 (fontified t c-is-sws t c-in-sws t) 334 335 (fontified t face font-lock-keyword-face c-is-sws t) 335 337 (fontified t face font-lock-keyword-face) 337 338 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 338 339 (fontified t) 339 343 (fontified t face font-lock-variable-name-face) 343 354 (fontified t) 354 355 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-5-face)) 355 361 (fontified t) 361 362 (syntax-table (5 . 60) fontified t face (rainbow-delimiters-depth-5-face)) 362 363 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-5-face)) 363 365 (fontified t) 365 366 (fontified t face (rainbow-delimiters-depth-5-face)) 366 374 (fontified t) 374 376 (fontified t face font-lock-keyword-face) 376 377 (fontified t) 377 378 (fontified t face (rainbow-delimiters-depth-5-face)) 378 379 (fontified t face font-lock-negation-char-face) 379 383 (fontified t) 383 384 (fontified t face (rainbow-delimiters-depth-5-face)) 384 393 (fontified t) 393 399 (fontified t face font-lock-keyword-face) 399 408 (fontified t) 408 411 (fontified t face font-lock-keyword-face) 411 412 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 412 414 (fontified t) 414 424 (fontified t face font-lock-variable-name-face) 424 441 (fontified t) 441 442 (fontified t face (rainbow-delimiters-depth-5-face)) 442 443 (fontified t face (rainbow-delimiters-depth-5-face)) 443 449 (fontified t) 449 450 (fontified t face (rainbow-delimiters-depth-5-face)) 450 451 (fontified t face (rainbow-delimiters-depth-5-face)) 451 454 (fontified t) 454 460 (fontified t c-in-sws t c-is-sws t) 460 461 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 461 463 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 463 510 (fontified t face font-lock-comment-face c-in-sws t) 510 516 (fontified t c-is-sws t c-in-sws t) 516 517 (fontified t face font-lock-keyword-face c-is-sws t) 517 519 (fontified t face font-lock-keyword-face) 519 520 (fontified t) 520 521 (fontified t face (rainbow-delimiters-depth-5-face)) 521 524 (fontified t face font-lock-keyword-face) 524 525 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 525 526 (fontified t) 526 529 (fontified t face font-lock-variable-name-face) 529 555 (fontified t) 555 556 (fontified t face (rainbow-delimiters-depth-6-face)) 556 557 (fontified t face (rainbow-delimiters-depth-6-face)) 557 558 (fontified t face (rainbow-delimiters-depth-5-face)) 558 559 (fontified t) 559 560 (fontified t face (rainbow-delimiters-depth-5-face)) 560 569 (fontified t) 569 572 (fontified t face font-lock-type-face) 572 573 (fontified t c-type c-decl-id-start face font-lock-type-face) 573 574 (fontified t) 574 593 (fontified t face font-lock-variable-name-face) 593 596 (fontified t) 596 601 (fontified t face font-lock-constant-face) 601 604 (fontified t) 604 612 (fontified t c-in-sws t c-is-sws t) 612 613 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 613 615 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 615 654 (fontified t face font-lock-comment-face c-in-sws t) 654 662 (fontified t c-is-sws t c-in-sws t) 662 663 (fontified t face font-lock-keyword-face c-is-sws t) 663 665 (fontified t face font-lock-keyword-face) 665 666 (fontified t) 666 667 (fontified t face (rainbow-delimiters-depth-6-face)) 667 670 (fontified t face font-lock-keyword-face) 670 671 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 671 673 (fontified t) 673 676 (fontified t face font-lock-variable-name-face) 676 690 (fontified t) 690 691 (fontified t face (rainbow-delimiters-depth-7-face)) 691 692 (fontified t face (rainbow-delimiters-depth-7-face)) 692 693 (fontified t face (rainbow-delimiters-depth-6-face)) 693 694 (fontified t) 694 695 (fontified t face (rainbow-delimiters-depth-6-face)) 695 706 (fontified t) 706 709 (fontified t face font-lock-keyword-face) 709 710 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 710 711 (fontified t) 711 715 (fontified t face font-lock-variable-name-face) 715 730 (fontified t) 730 731 (fontified t face (rainbow-delimiters-depth-7-face)) 731 732 (fontified t face (rainbow-delimiters-depth-7-face)) 732 734 (fontified t) 734 744 (fontified t c-in-sws t c-is-sws t) 744 745 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 745 747 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 747 810 (fontified t face font-lock-comment-face c-in-sws t) 810 820 (fontified t c-is-sws t c-in-sws t) 820 821 (fontified t face font-lock-keyword-face c-is-sws t) 821 822 (fontified t face font-lock-keyword-face) 822 823 (fontified t) 823 824 (fontified t face (rainbow-delimiters-depth-7-face)) 824 827 (fontified t face font-lock-keyword-face) 827 828 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 828 829 (fontified t) 829 834 (fontified t face font-lock-variable-name-face) 834 845 (fontified t) 845 846 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-8-face)) 846 850 (fontified t face font-lock-constant-face) 850 852 (fontified t) 852 855 (fontified t face font-lock-constant-face) 855 862 (fontified t) 862 863 (syntax-table (5 . 60) fontified t face (rainbow-delimiters-depth-8-face)) 863 864 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-8-face)) 864 868 (fontified t) 868 869 (fontified t face (rainbow-delimiters-depth-8-face)) 869 870 (fontified t face (rainbow-delimiters-depth-7-face)) 870 871 (fontified t) 871 872 (fontified t face (rainbow-delimiters-depth-7-face)) 872 873 (fontified t) 873 885 (fontified t c-in-sws t c-is-sws t) 885 886 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 886 888 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 888 926 (fontified t face font-lock-comment-face c-in-sws t) 926 927 (fontified t face font-lock-comment-face c-in-sws t) 927 945 (fontified t face font-lock-comment-face c-in-sws t) 945 957 (fontified t c-is-sws t c-in-sws t) 957 958 (fontified t face font-lock-keyword-face c-is-sws t) 958 959 (fontified t face font-lock-keyword-face) 959 960 (fontified t) 960 961 (fontified t face (rainbow-delimiters-depth-8-face)) 961 984 (fontified t) 984 985 (fontified t face (rainbow-delimiters-depth-9-face)) 985 986 (fontified t face (rainbow-delimiters-depth-9-face)) 986 1013 (fontified t) 1013 1014 (fontified t face (rainbow-delimiters-depth-9-face)) 1014 1015 (fontified t face (rainbow-delimiters-depth-9-face)) 1015 1036 (fontified t) 1036 1037 (fontified t face (rainbow-delimiters-depth-9-face)) 1037 1038 (fontified t face (rainbow-delimiters-depth-9-face)) 1038 1039 (fontified t face (rainbow-delimiters-depth-8-face)) 1039 1040 (fontified t) 1040 1041 (fontified t face (rainbow-delimiters-depth-8-face)) 1041 1078 (fontified t) 1078 1082 (fontified t face font-lock-constant-face) 1082 1098 (fontified t) 1098 1103 (fontified t face font-lock-keyword-face) 1103 1117 (fontified t) 1117 1118 (fontified t face (rainbow-delimiters-depth-8-face)) 1118 1129 (fontified t) 1129 1130 (fontified t face (rainbow-delimiters-depth-7-face)) 1130 1139 (fontified t) 1139 1140 (fontified t face (rainbow-delimiters-depth-6-face)) 1140 1150 (fontified t) 1150 1152 (fontified t face font-lock-keyword-face) 1152 1153 (fontified t) 1153 1154 (fontified t face (rainbow-delimiters-depth-6-face)) 1154 1173 (fontified t) 1173 1174 (fontified t face (rainbow-delimiters-depth-6-face)) 1174 1175 (fontified t) 1175 1176 (fontified t face (rainbow-delimiters-depth-6-face)) 1176 1187 (fontified t) 1187 1191 (fontified t face font-lock-constant-face) 1191 1197 (fontified t) 1197 1198 (fontified t face (rainbow-delimiters-depth-7-face)) 1198 1199 (fontified t face (rainbow-delimiters-depth-7-face)) 1199 1203 (fontified t) 1203 1211 (fontified t face font-lock-string-face) 1211 1222 (fontified t) 1222 1281 (fontified t face font-lock-string-face) 1281 1291 (fontified t) 1291 1292 (fontified t face (rainbow-delimiters-depth-6-face)) 1292 1293 (fontified t) 1293 1297 (fontified t face font-lock-keyword-face) 1297 1298 (fontified t) 1298 1299 (fontified t face (rainbow-delimiters-depth-6-face)) 1299 1310 (fontified t) 1310 1314 (fontified t face font-lock-constant-face) 1314 1320 (fontified t) 1320 1321 (fontified t face (rainbow-delimiters-depth-7-face)) 1321 1322 (fontified t face (rainbow-delimiters-depth-7-face)) 1322 1326 (fontified t) 1326 1334 (fontified t face font-lock-string-face) 1334 1345 (fontified t) 1345 1408 (fontified t face font-lock-string-face) 1408 1418 (fontified t) 1418 1419 (fontified t face (rainbow-delimiters-depth-6-face)) 1419 1426 (fontified t) 1426 1427 (fontified t face (rainbow-delimiters-depth-5-face)) 1427 1432 (fontified t) 1432 1433 (fontified t face (rainbow-delimiters-depth-4-face)) 1433 1434 (fontified t face (rainbow-delimiters-depth-3-face)) 1434 1438 (fontified t) 1438 1439 (fontified t face (rainbow-delimiters-depth-2-face)) 1439 1440 (fontified t) 1440 1441 (fontified t face (rainbow-delimiters-depth-1-face)) 1441 1444 (fontified t) 1444 1453 (fontified t face font-lock-keyword-face) 1453 1454 (fontified t) 1454 1457 (fontified t face font-lock-constant-face) 1457 1458 (fontified t c-type c-decl-id-start face font-lock-constant-face) 1458 1459 (fontified t) 1459 1460 (fontified t face (rainbow-delimiters-depth-1-face)) 1460 1461 (fontified t) 1461 1464 (fontified t face font-lock-type-face) 1464 1465 (fontified t c-type c-decl-id-start face font-lock-type-face) 1465 1466 (fontified t) 1466 1491 (fontified t face font-lock-function-name-face) 1491 1492 (fontified t face (rainbow-delimiters-depth-2-face)) 1492 1493 (fontified t face (rainbow-delimiters-depth-2-face)) 1493 1494 (fontified t) 1494 1495 (fontified t face (rainbow-delimiters-depth-2-face)) 1495 1500 (fontified t) 1500 1514 (fontified t) 1514 1515 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-3-face)) 1515 1532 (fontified t face font-lock-type-face) 1532 1533 (syntax-table (5 . 60) fontified t face (rainbow-delimiters-depth-3-face)) 1533 1534 (fontified t face (rainbow-delimiters-depth-3-face)) 1534 1541 (fontified t) 1541 1557 (fontified t face font-lock-string-face) 1557 1565 (fontified t) 1565 1656 (fontified t face font-lock-string-face) 1656 1657 (fontified t face (rainbow-delimiters-depth-3-face)) 1657 1850 (fontified nil) 1850 1851 (syntax-table (4 . 62) fontified nil) 1851 1868 (fontified nil) 1868 1869 (syntax-table (5 . 60) fontified nil) 1869 2103 (fontified nil)) . 1) (undo-tree-id0 . -2070) (undo-tree-id1 . -2076) (undo-tree-id2 . -2070) (undo-tree-id3 . -2076) (undo-tree-id4 . -2075) (undo-tree-id5 . -2076) (undo-tree-id6 . -2070) (undo-tree-id7 . -2076) (undo-tree-id8 . -2070) (undo-tree-id9 . -2076) (undo-tree-id10 . -2075) (undo-tree-id11 . -2076) (undo-tree-id12 . -26) (undo-tree-id13 . -2103) (undo-tree-id14 . -2103) (undo-tree-id15 . -2103) (undo-tree-id16 . -2103) (undo-tree-id17 . -2070) (undo-tree-id18 . -2076) (undo-tree-id19 . -2070) (undo-tree-id20 . -2076) (undo-tree-id21 . -2075) (undo-tree-id22 . -2076) (undo-tree-id23 . -2070) (undo-tree-id24 . -2076) (undo-tree-id25 . -2070) (undo-tree-id26 . -2076) (undo-tree-id27 . -2075) (undo-tree-id28 . -2076) (t 25665 24178 992909 372000)) nil (25665 24708 6115 117000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2129 . 2130) (nil fontified nil 1939 . 2130) (nil fontified nil 1938 . 1939) (nil fontified nil 1921 . 1938) (nil fontified nil 1920 . 1921) (nil fontified nil 1101 . 1920) (nil fontified nil 1100 . 1101) (nil fontified nil 1090 . 1100) (nil fontified nil 1089 . 1090) (nil fontified nil 769 . 1089) (nil fontified nil 768 . 769) (nil fontified nil 767 . 768) (nil fontified nil 759 . 767) (nil fontified nil 758 . 759) (nil fontified nil 744 . 758) (nil fontified nil 743 . 744) (nil fontified nil 726 . 743) (nil fontified nil 725 . 726) (nil fontified nil 1 . 725) (1 . 2130)) nil (25665 24708 6024 70000) 0 nil])
([nil nil ((#("for (auto &operand : upperBound.getOperands()) {
            if (operand.getKind() == Value::Kind::BlockArgument) {
              llvm::outs() << \"User input \" << operand << \" affects loop upper bound in function \"
                           << func.getName() << \".\\n\";
            }
          }" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-7-face)) 5 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 9 11 (fontified t) 11 18 (fontified t face font-lock-variable-name-face) 18 43 (fontified t) 43 44 (fontified t face (rainbow-delimiters-depth-8-face)) 44 45 (fontified t face (rainbow-delimiters-depth-8-face)) 45 46 (fontified t face (rainbow-delimiters-depth-7-face)) 46 47 (fontified t) 47 48 (fontified t face (rainbow-delimiters-depth-7-face)) 48 61 (fontified t) 61 63 (fontified t face font-lock-keyword-face) 63 64 (fontified t) 64 65 (fontified t face (rainbow-delimiters-depth-8-face)) 65 80 (fontified t) 80 81 (fontified t face (rainbow-delimiters-depth-9-face)) 81 82 (fontified t face (rainbow-delimiters-depth-9-face)) 82 86 (fontified t) 86 91 (fontified t face font-lock-constant-face) 91 93 (fontified t) 93 97 (fontified t face font-lock-constant-face) 97 112 (fontified t) 112 113 (fontified t face (rainbow-delimiters-depth-8-face)) 113 114 (fontified t) 114 115 (fontified t face (rainbow-delimiters-depth-8-face)) 115 130 (fontified t) 130 134 (fontified t face font-lock-constant-face) 134 140 (fontified t) 140 141 (fontified t face (rainbow-delimiters-depth-9-face)) 141 142 (fontified t face (rainbow-delimiters-depth-9-face)) 142 146 (fontified t) 146 159 (fontified t face font-lock-string-face) 159 174 (fontified t) 174 214 (fontified t face font-lock-string-face) 214 257 (fontified t) 257 258 (fontified t face (rainbow-delimiters-depth-9-face)) 258 259 (fontified t face (rainbow-delimiters-depth-9-face)) 259 263 (fontified t) 263 268 (fontified t face font-lock-string-face) 268 282 (fontified t) 282 283 (fontified t face (rainbow-delimiters-depth-8-face)) 283 294 (fontified t) 294 295 (fontified t face (rainbow-delimiters-depth-7-face))) . -1521) (undo-tree-id40 . -295) (undo-tree-id41 . -295) (undo-tree-id42 . 1) (undo-tree-id43 . -295) (undo-tree-id44 . 248) (undo-tree-id45 . -48) (undo-tree-id46 . -284) (undo-tree-id47 . -1) 1816 (t 25665 24708 18739 307000)) nil (25665 24780 865409 167000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1509) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("
" 0 1 (fontified t)) . -1510) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("          " 0 10 (fontified t)) . 1511) (undo-tree-id38 . -10) (undo-tree-id39 . -10) 1521) nil (25665 24780 865404 822000) 0 nil])
([nil nil ((1509 . 1520)) nil (25665 24780 865400 705000) 0 nil])
([nil nil ((#("          " 0 10 (fontified t)) . 1510) (undo-tree-id29 . -10) (undo-tree-id30 . -10) (undo-tree-id31 . -10) 1520) nil (25665 25097 917153 869000) 0 nil])
([nil nil ((apply -3 86 119 undo--wrap-and-run-primitive-undo 86 119 ((86 . 89))) (t 25665 25099 649943 847000)) nil (25665 25185 203910 401000) 0 nil] [nil nil ((#("auto" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face c-type c-decl-id-start)) . 871) (undo-tree-id49 . -4) (undo-tree-id50 . -4) (undo-tree-id51 . -4) 875 (t 25665 24780 874802 261000)) ((871 . 875)) (25665 25097 488385 426000) 0 nil])
([nil nil ((apply -3 152 183 undo--wrap-and-run-primitive-undo 152 183 ((152 . 155))) (t 25665 25185 216332 841000)) nil (25665 25192 978340 497000) 0 nil])
([nil nil ((871 . 878)) ((#("Operatu" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t face font-lock-type-face) 5 6 (fontified t face font-lock-type-face) 6 7 (fontified t c-type c-decl-id-start face font-lock-type-face)) . 871) (undo-tree-id58 . -7)) (25665 25096 906382 809000) 0 nil])
([nil nil ((apply -3 214 252 undo--wrap-and-run-primitive-undo 214 252 ((214 . 217) 235)) (t 25665 25192 986419 117000)) nil (25665 25199 72139 515000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -877) (undo-tree-id48 . -1) 878) ((877 . 878)) (25665 25096 114302 709000) 0 nil])
([nil nil ((apply -3 252 280 undo--wrap-and-run-primitive-undo 252 280 ((252 . 255) 276)) (t 25665 25199 86504 976000)) nil (25665 25205 181374 352000) 0 nil])
([nil nil ((877 . 880)) ((#("ion" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t c-type c-decl-id-start face font-lock-type-face)) . 877) (t 25665 25067 958335 696000)) (25665 25095 562317 495000) 0 nil])
([nil nil ((182 . 183) (t 25665 25205 188107 703000)) nil (25665 25409 649604 474000) 0 nil])
([nil nil ((#("#include \"mlir/Pass/Pass.h\"
#include \"mlir/IR/Block.h\"
#include \"mlir/IR/Builders.h\"
#include \"mlir/IR/Function.h\"
#include \"mlir/IR/MLIRContext.h\"
#include \"mlir/IR/Module.h\"
#include \"mlir/IR/Operation.h\"
#include \"mlir/IR/StandardTypes.h\"
#include \"mlir/Parser.h\"
#include \"mlir/Support/FileUtilities.h\"
#include \"mlir/Support/LogicalResult.h\"
#include \"mlir/Support/ToolUtilities.h\"
#include \"llvm/ADT/STLExtras.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/ErrorOr.h\"
#include \"llvm/Support/FileUtilities.h\"
#include \"llvm/Support/InitLLVM.h\"
#include \"llvm/Support/SourceMgr.h\"
#include \"llvm/Support/ToolOutputFile.h\"
" 0 1 (fontified t face font-lock-preprocessor-face c-is-sws t) 1 8 (fontified t face font-lock-preprocessor-face) 8 9 (fontified t) 9 27 (fontified t face font-lock-string-face) 27 28 (fontified t) 28 29 (fontified t face font-lock-preprocessor-face c-is-sws t) 29 36 (fontified t face font-lock-preprocessor-face) 36 37 (fontified t) 37 54 (fontified t face font-lock-string-face) 54 55 (fontified t) 55 56 (fontified t face font-lock-preprocessor-face c-is-sws t) 56 63 (fontified t face font-lock-preprocessor-face) 63 64 (fontified t) 64 84 (fontified t face font-lock-string-face) 84 85 (fontified t) 85 86 (fontified t face font-lock-preprocessor-face c-is-sws t) 86 93 (fontified t face font-lock-preprocessor-face) 93 94 (fontified t) 94 114 (fontified t face font-lock-string-face) 114 115 (fontified t) 115 116 (fontified t face font-lock-preprocessor-face c-is-sws t) 116 123 (fontified t face font-lock-preprocessor-face) 123 124 (fontified t) 124 147 (fontified t face font-lock-string-face) 147 148 (fontified t) 148 149 (fontified t face font-lock-preprocessor-face c-is-sws t) 149 156 (fontified t face font-lock-preprocessor-face) 156 157 (fontified t) 157 175 (fontified t face font-lock-string-face) 175 176 (fontified t) 176 177 (fontified t face font-lock-preprocessor-face c-is-sws t) 177 184 (fontified t face font-lock-preprocessor-face) 184 185 (fontified t) 185 206 (fontified t face font-lock-string-face) 206 207 (fontified t) 207 208 (fontified t face font-lock-preprocessor-face c-is-sws t) 208 215 (fontified t face font-lock-preprocessor-face) 215 216 (fontified t) 216 241 (fontified t face font-lock-string-face) 241 242 (fontified t) 242 243 (fontified t face font-lock-preprocessor-face c-is-sws t) 243 250 (fontified t face font-lock-preprocessor-face) 250 251 (fontified t) 251 266 (fontified t face font-lock-string-face) 266 267 (fontified t) 267 268 (fontified t face font-lock-preprocessor-face c-is-sws t) 268 275 (fontified t face font-lock-preprocessor-face) 275 276 (fontified t) 276 306 (fontified t face font-lock-string-face) 306 307 (fontified t) 307 308 (fontified t face font-lock-preprocessor-face c-is-sws t) 308 315 (fontified t face font-lock-preprocessor-face) 315 316 (fontified t) 316 346 (fontified t face font-lock-string-face) 346 347 (fontified t) 347 348 (fontified t face font-lock-preprocessor-face c-is-sws t) 348 355 (fontified t face font-lock-preprocessor-face) 355 356 (fontified t) 356 386 (fontified t face font-lock-string-face) 386 387 (fontified t) 387 388 (fontified t face font-lock-preprocessor-face c-is-sws t) 388 395 (fontified t face font-lock-preprocessor-face) 395 396 (fontified t) 396 418 (fontified t face font-lock-string-face) 418 419 (fontified t) 419 420 (fontified t face font-lock-preprocessor-face c-is-sws t) 420 427 (fontified t face font-lock-preprocessor-face) 427 428 (fontified t) 428 456 (fontified t face font-lock-string-face) 456 457 (fontified t) 457 458 (fontified t face font-lock-preprocessor-face c-is-sws t) 458 465 (fontified t face font-lock-preprocessor-face) 465 466 (fontified t) 466 490 (fontified t face font-lock-string-face) 490 491 (fontified t) 491 492 (fontified t face font-lock-preprocessor-face c-is-sws t) 492 499 (fontified t face font-lock-preprocessor-face) 499 500 (fontified t) 500 530 (fontified t face font-lock-string-face) 530 531 (fontified t) 531 532 (fontified t face font-lock-preprocessor-face c-is-sws t) 532 539 (fontified t face font-lock-preprocessor-face) 539 540 (fontified t) 540 565 (fontified t face font-lock-string-face) 565 566 (fontified t) 566 567 (fontified t face font-lock-preprocessor-face c-is-sws t) 567 574 (fontified t face font-lock-preprocessor-face) 574 575 (fontified t) 575 601 (fontified t face font-lock-string-face) 601 602 (fontified t) 602 603 (fontified t face font-lock-preprocessor-face c-is-sws t) 603 610 (fontified t face font-lock-preprocessor-face) 610 611 (fontified t) 611 642 (fontified t face font-lock-string-face) 642 643 (fontified t)) . -1) (undo-tree-id53 . -643) (undo-tree-id54 . -27) (undo-tree-id55 . -643) (undo-tree-id56 . -1) (undo-tree-id57 . -643) 644 (t 25665 25067 958335 696000)) ((1 . 644)) (25665 25095 153823 696000) 0 nil])
([nil nil ((151 . 152)) nil (25665 25409 649603 770000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id52 . -1)) ((1 . 2)) (25665 25095 153323 457000) 0 nil])
([nil nil ((183 . 214) 153) nil (25665 25409 649602 897000) 0 nil])
nil
([nil nil ((apply 3 184 211 undo--wrap-and-run-primitive-undo 184 211 ((#("// " 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -184)))) nil (25665 25409 649601 966000) 0 nil])
([nil nil ((#("Module" 0 6 (fontified t face font-lock-string-face c-in-sws t)) . 202) (undo-tree-id59 . -6) (undo-tree-id60 . -6) (undo-tree-id61 . -6)) nil (25665 25409 649601 7000) 0 nil])
([nil nil ((202 . 210)) nil (25665 25409 649587 122000) 0 nil])
([nil nil ((210 . 212)) nil (25665 25409 649582 94000) 0 nil])
([nil nil ((85 . 86) (t 25665 25409 657617 657000)) nil (25665 25784 55108 923000) 0 nil])
([nil nil ((119 . 121)) nil (25665 25784 55108 214000) 0 nil])
([nil nil ((121 . 122)) nil (25665 25784 55107 479000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t c-is-sws t)) . -121) (undo-tree-id63 . -1) 122) nil (25665 25784 55106 655000) 0 nil])
([nil nil ((nil rear-nonsticky nil 212 . 213) (nil fontified nil 121 . 213) (nil fontified nil 120 . 121) (120 . 213)) nil (25665 25784 55105 90000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 164)) nil (25665 25784 55103 580000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-preprocessor-face c-is-sws t c-in-sws t)) . 121)) nil (25665 25784 55102 737000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-is-sws t c-in-sws t)) . 120) (undo-tree-id62 . -1)) nil (25665 25784 55098 222000) 0 nil])
([nil nil ((#("mlir" 0 4 (fontified t face font-lock-constant-face)) . 1058) (undo-tree-id64 . -4) (undo-tree-id65 . -4) (undo-tree-id66 . -4) (t 25665 25784 65307 801000)) nil (25665 25794 950631 542000) 0 nil])
([nil nil ((1058 . 1062)) nil (25665 25794 950616 249000) 0 nil])
([nil nil ((782 . 785) (t 25665 25794 956253 629000)) nil (25665 25967 712880 445000) 0 nil])
([nil nil ((nil rear-nonsticky nil 861 . 862) (nil fontified nil 826 . 862) (nil fontified nil 825 . 826) (nil fontified nil 785 . 825) (nil fontified nil 784 . 785) (784 . 862)) nil (25665 25967 712879 531000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t fontified t rear-nonsticky t)) . -861) (undo-tree-id67 . -1) (undo-tree-id68 . -1) 862) nil (25665 25967 712878 9000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-in-sws t)) . 861)) nil (25665 25967 712857 459000) 0 nil])
([nil nil ((782 . 784) (t 25665 25967 714434 365000)) nil (25665 26075 880630 613000) 0 nil])
([nil nil ((nil rear-nonsticky nil 923 . 924) (nil fontified nil 923 . 924) (nil fontified nil 892 . 923) (nil fontified nil 891 . 892) (nil fontified nil 884 . 891) (nil fontified nil 883 . 884) (nil fontified nil 882 . 883) (nil fontified nil 852 . 882) (nil fontified nil 851 . 852) (nil fontified nil 844 . 851) (nil fontified nil 843 . 844) (nil fontified nil 842 . 843) (nil fontified nil 821 . 842) (nil fontified nil 820 . 821) (nil fontified nil 813 . 820) (nil fontified nil 812 . 813) (nil fontified nil 811 . 812) (nil fontified nil 794 . 811) (nil fontified nil 793 . 794) (nil fontified nil 786 . 793) (nil fontified nil 785 . 786) (nil fontified nil 784 . 785) (784 . 924)) nil (25665 26075 880629 342000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-is-sws t c-in-sws t)) . -783) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . 1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) 784) nil (25665 26075 880626 261000) 0 nil])
([nil nil ((783 . 784)) nil (25665 26075 880622 667000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t c-is-sws t)) . -783) (undo-tree-id127 . -1) (undo-tree-id128 . -1) 784) nil (25665 26075 880621 960000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-is-sws t)) . -783) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . 1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (#("#include \"mlir/IR/Block.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 26 (c-in-sws t fontified t face font-lock-string-face)) . 784) (undo-tree-id126 . -26)) nil (25665 26075 880605 823000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t fontified t)) . -896) (undo-tree-id118 . -1) (undo-tree-id119 . -1) 897) nil (25665 26075 880599 328000) 0 nil])
([nil nil ((apply -6 897 981 undo--wrap-and-run-primitive-undo 897 981 ((941 . 944) (897 . 900) 974))) nil (25665 26075 880597 840000) 0 nil])
([nil nil ((855 . 939) (#("
" 0 1 (fontified t c-in-sws t)) . -896) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#("// #include \"mlir/Dialect/SCF/SCFDialect.h\"
// #include \"mlir/Dialect/SCF/SCFOps.h\"" 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 4 (fontified t c-in-sws t face font-lock-comment-face) 4 11 (fontified t c-in-sws t face font-lock-comment-face) 11 12 (fontified t c-in-sws t face font-lock-comment-face) 12 43 (fontified t c-in-sws t face font-lock-comment-face) 43 44 (fontified t c-in-sws t face font-lock-comment-face) 44 47 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 47 48 (fontified t c-in-sws t face font-lock-comment-face) 48 55 (fontified t c-in-sws t face font-lock-comment-face) 55 56 (fontified t c-in-sws t face font-lock-comment-face) 56 83 (fontified t c-in-sws t face font-lock-comment-face)) . -897) (undo-tree-id104 . -43) (undo-tree-id105 . -39) (undo-tree-id106 . -83) (undo-tree-id107 . -83) (undo-tree-id108 . -83) (undo-tree-id109 . -39) (undo-tree-id110 . -43) (undo-tree-id111 . -83) (undo-tree-id112 . -43) (undo-tree-id113 . -44) (undo-tree-id114 . 53) (undo-tree-id115 . -40) (undo-tree-id116 . -39) (undo-tree-id117 . -83) 936) nil (25665 26075 880596 231000) 0 nil])
([nil nil ((815 . 899) (#("
" 0 1 (fontified t c-in-sws t)) . -854) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("// #include \"mlir/Dialect/SCF/SCFDialect.h\"
// #include \"mlir/Dialect/SCF/SCFOps.h\"" 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 3 44 (fontified t c-in-sws t face font-lock-comment-face) 44 47 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 47 83 (fontified t c-in-sws t face font-lock-comment-face)) . -855) (undo-tree-id86 . -39) (undo-tree-id87 . -39) (undo-tree-id88 . -39) (undo-tree-id89 . -83) (undo-tree-id90 . -83) 894) nil (25665 26075 880577 359000) 0 nil])
([nil nil ((784 . 868) (#("
" 0 1 (fontified t c-in-sws t)) . -814) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("// #include \"mlir/Dialect/SCF/SCFDialect.h\"
// #include \"mlir/Dialect/SCF/SCFOps.h\"" 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 44 (c-in-sws t fontified t face font-lock-comment-face) 44 47 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 47 83 (c-in-sws t fontified t face font-lock-comment-face)) . -815) (undo-tree-id75 . -39) (undo-tree-id76 . -39) (undo-tree-id77 . -39) (undo-tree-id78 . -83) (undo-tree-id79 . -83) 854) nil (25665 26075 880524 701000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-in-sws t)) . -898) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (#("#include \"mlir/Support/LogicalResult.h\"" 0 1 (fontified t c-in-sws t c-is-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 39 (fontified t c-in-sws t face font-lock-string-face)) . 899) (undo-tree-id136 . -39) (undo-tree-id137 . -39) 938 (t 25665 26075 894590 940000)) nil (25665 26085 983740 696000) 0 nil])
([nil nil ((#(" " 0 1 (rear-nonsticky t c-in-sws t fontified nil)) . 939) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (940 . 941) (t 25665 26085 994516 622000)) nil (25665 26143 273067 266000) 0 nil])
([nil nil ((nil rear-nonsticky nil 976 . 977) (nil fontified nil 950 . 977) (nil fontified nil 949 . 950) (nil fontified nil 942 . 949) (nil fontified nil 941 . 942) (nil fontified nil 940 . 941) (940 . 977)) nil (25665 26143 273048 314000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-in-sws t)) . -939) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) 940 (t 25665 26143 277971 418000)) nil (25665 26144 967038 988000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1439) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#("          auto lowerBound = forOp.lowerBound();" 0 10 (fontified t) 10 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 14 15 (fontified t) 15 25 (fontified t face font-lock-variable-name-face) 25 44 (fontified t) 44 45 (fontified t face (rainbow-delimiters-depth-7-face)) 45 46 (fontified t face (rainbow-delimiters-depth-7-face)) 46 47 (fontified t)) . 1440) (undo-tree-id150 . -20) 1460 (t 25665 26144 967998 192000)) nil (25665 26171 942524 466000) 0 nil])
([nil nil ((1474 . 1475)) nil (25665 26171 942522 302000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -1474) (undo-tree-id147 . -1) 1475) nil (25665 26171 942521 532000) 0 nil])
([nil nil ((1474 . 1477)) nil (25665 26171 942508 349000) 0 nil])
([nil nil ((1477 . 1487) (#("upperBound" 0 10 (fontified t)) . 1477)) nil (25665 26171 942502 317000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 1482) (t 25665 26171 949608 27000)) nil (25665 26175 173351 747000) 0 nil])
([nil nil ((1482 . 1483)) nil (25665 26204 486918 417000) 0 nil])
([nil nil ((#("lower" 0 5 (fontified t)) . -1523) (undo-tree-id156 . -5) (undo-tree-id157 . -5) (undo-tree-id158 . -1) 1528 (t 25665 26175 179653 402000)) nil (25665 26214 22664 115000) 0 nil] [nil nil ((#("lower" 0 5 (fontified t)) . -1523) (undo-tree-id151 . -5) (undo-tree-id152 . -5) (undo-tree-id153 . -1) 1517 (t 25665 26175 179653 402000)) ((1523 . 1528)) (25665 26204 57582 775000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 1) (1695 . 1696) (apply deactivate-cursor-after-undo 1) (1527 . 1528) (apply activate-cursor-for-undo 1) (1693 . 1694) (apply deactivate-cursor-after-undo 1) (1526 . 1527) (apply activate-cursor-for-undo 1) (1691 . 1692) (apply deactivate-cursor-after-undo 1) (1525 . 1526) (apply activate-cursor-for-undo 1) (1689 . 1690) (apply deactivate-cursor-after-undo 1) (1524 . 1525) (apply activate-cursor-for-undo 1) (1687 . 1688) (#("lower" 0 5 (fontified t face font-lock-string-face)) . -1687) (apply deactivate-cursor-after-undo 1) (1523 . 1524)) nil (25665 26214 22648 78000) 0 nil])
([nil nil ((1523 . 1524)) ((#("k" 0 1 (fontified t)) . 1523) (undo-tree-id154 . -1) (undo-tree-id155 . -1)) (25665 26204 56475 186000) 0 nil])
([nil nil ((apply -18 1492 1816 undo--wrap-and-run-primitive-undo 1492 1816 ((1811 . 1814) (1794 . 1797) (1736 . 1739) (1634 . 1637) (1564 . 1567) (1502 . 1505) 1797)) (t 25665 26214 31430 172000)) nil (25665 26370 190873 522000) 0 nil])
nil
([nil nil ((1815 . 2140) 1491) nil (25665 26370 190872 749000) 0 nil])
([nil nil ((apply 18 1816 2123 undo--wrap-and-run-primitive-undo 1816 2123 ((#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -2121) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -2107) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -2052) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -1953) (#("// " 0 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -1886) (#("// " 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -1827) 2141))) nil (25665 26370 190867 106000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2110) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#("          }" 0 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-7-face))) . 2111) (undo-tree-id168 . -11) (undo-tree-id169 . 1) (undo-tree-id170 . -11) 2122 (t 25665 26370 192808 300000)) nil (25665 26406 958720 882000) 0 nil])
([nil nil ((2110 . 2112)) nil (25665 26406 958718 380000) 0 nil])
([nil nil ((#("{" 0 1 (fontified nil face (rainbow-delimiters-depth-8-face))) . -2110) (undo-tree-id165 . -1) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-8-face))) . 2111)) nil (25665 26406 958717 378000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-is-sws t)) . -1816) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (#("          for (auto &operand : upperBound.getOperands()) {" 0 10 (fontified t c-in-sws t c-is-sws t) 10 11 (fontified t c-is-sws t face font-lock-keyword-face) 11 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 15 (fontified t face (rainbow-delimiters-depth-7-face)) 15 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 19 21 (fontified t) 21 28 (fontified t face font-lock-variable-name-face) 28 53 (fontified t) 53 54 (fontified t face (rainbow-delimiters-depth-8-face)) 54 55 (fontified t face (rainbow-delimiters-depth-8-face)) 55 56 (fontified t face (rainbow-delimiters-depth-7-face)) 56 57 (fontified t) 57 58 (fontified t face (rainbow-delimiters-depth-7-face))) . 1817) (undo-tree-id162 . -57) (undo-tree-id163 . 1) (undo-tree-id164 . -58) 1874) nil (25665 26406 958715 740000) 0 nil])
([nil nil ((#("            " 0 10 (fontified nil) 10 12 (fontified nil)) . -2034) (2026 . 2034) (#("                           " 0 10 (fontified nil) 10 27 (fontified nil)) . -1998) (1975 . 1998) (#("              " 0 10 (fontified nil) 10 14 (fontified nil)) . -1890) (1880 . 1890) (#("            " 0 10 (c-is-sws t fontified nil) 10 12 (c-is-sws t fontified nil)) . -1825) (1817 . 1825) 2052) nil (25665 26406 958695 576000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -2050) (2038 . 2050) (#("                       " 0 23 (fontified nil)) . -2010) (1983 . 2010) (#("          " 0 10 (fontified nil)) . -1898) (1884 . 1898) (#("        " 0 8 (fontified nil c-is-sws t c-in-sws t)) . -1829) (1817 . 1829) 1816) nil (25665 26406 958693 690000) 0 nil])
([nil nil ((#("            " 0 12 (fontified nil)) . -2034) (2026 . 2034) (#("                           " 0 27 (fontified nil)) . -1998) (1975 . 1998) (#("              " 0 14 (fontified nil)) . -1890) (1880 . 1890) (#("            " 0 1 (fontified nil c-is-sws t c-in-sws t) 1 12 (fontified nil c-is-sws t c-in-sws t)) . -1825) (1817 . 1825) 1816) nil (25665 26406 958691 14000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -2050) (2038 . 2050) (#("                       " 0 23 (fontified nil)) . -2010) (1983 . 2010) (#("          " 0 10 (fontified nil)) . -1898) (1884 . 1898) (#("        " 0 1 (fontified nil c-is-sws t c-in-sws t) 1 8 (fontified nil c-is-sws t c-in-sws t)) . -1829) (1817 . 1829) 1816) nil (25665 26406 958688 862000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t c-is-sws t c-in-sws t)) . 1817) (#(" " 0 1 (fontified t c-is-sws t c-in-sws t)) . 1817)) nil (25665 26406 958687 711000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1882) (#(" " 0 1 (fontified t)) . 1882)) nil (25665 26406 958687 11000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1979)) nil (25665 26406 958686 360000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1979)) nil (25665 26406 958685 599000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2032) (#(" " 0 1 (fontified t)) . 2032)) nil (25665 26406 958679 216000) 0 nil])
([nil nil ((1555 . 1881) (#("
" 0 1 (fontified nil)) . 1491) (undo-tree-id185 . -1) (#("
          // for (auto &operand : upperBound.getOperands()) {
          //   if (operand.getKind() == Value::Kind::BlockArgument) {
          //     llvm::outs() << \"User input \" << operand << \" affects loop upper bound in function \"
          //                  << func.getName() << \".\\n\";
          //   }
          // }
" 0 1 (fontified t) 1 11 (fontified t c-in-sws t c-is-sws t) 11 12 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 12 14 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 14 17 (fontified t c-in-sws t face font-lock-comment-face) 17 18 (fontified t c-in-sws t face font-lock-comment-face) 18 19 (fontified t c-in-sws t face font-lock-comment-face) 19 22 (fontified t c-in-sws t face font-lock-comment-face) 22 23 (fontified t c-in-sws t face font-lock-comment-face) 23 25 (fontified t c-in-sws t face font-lock-comment-face) 25 32 (fontified t c-in-sws t face font-lock-comment-face) 32 36 (fontified t c-in-sws t face font-lock-comment-face) 36 37 (fontified t c-in-sws t face font-lock-comment-face) 37 38 (fontified t c-in-sws t face font-lock-comment-face) 38 39 (fontified t c-in-sws t face font-lock-comment-face) 39 40 (fontified t c-in-sws t face font-lock-comment-face) 40 57 (fontified t c-in-sws t face font-lock-comment-face) 57 58 (fontified t c-in-sws t face font-lock-comment-face) 58 59 (fontified t c-in-sws t face font-lock-comment-face) 59 60 (fontified t c-in-sws t face font-lock-comment-face) 60 61 (fontified t c-in-sws t face font-lock-comment-face) 61 62 (fontified t c-in-sws t face font-lock-comment-face) 62 63 (fontified t c-in-sws t face font-lock-comment-face) 63 73 (fontified t c-in-sws t) 73 76 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 76 78 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 78 80 (fontified t c-in-sws t face font-lock-comment-face) 80 81 (fontified t c-in-sws t face font-lock-comment-face) 81 82 (fontified t c-in-sws t face font-lock-comment-face) 82 97 (fontified t c-in-sws t face font-lock-comment-face) 97 98 (fontified t c-in-sws t face font-lock-comment-face) 98 99 (fontified t c-in-sws t face font-lock-comment-face) 99 103 (fontified t c-in-sws t face font-lock-comment-face) 103 108 (fontified t c-in-sws t face font-lock-comment-face) 108 110 (fontified t c-in-sws t face font-lock-comment-face) 110 114 (fontified t c-in-sws t face font-lock-comment-face) 114 129 (fontified t c-in-sws t face font-lock-comment-face) 129 130 (fontified t c-in-sws t face font-lock-comment-face) 130 131 (fontified t c-in-sws t face font-lock-comment-face) 131 132 (fontified t c-in-sws t face font-lock-comment-face) 132 133 (fontified t c-in-sws t face font-lock-comment-face) 133 143 (fontified t c-in-sws t) 143 146 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 146 150 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 150 154 (fontified t c-in-sws t face font-lock-comment-face) 154 160 (fontified t c-in-sws t face font-lock-comment-face) 160 161 (fontified t c-in-sws t face font-lock-comment-face) 161 162 (fontified t c-in-sws t face font-lock-comment-face) 162 166 (fontified t c-in-sws t face font-lock-comment-face) 166 179 (fontified t c-in-sws t face font-lock-comment-face) 179 194 (fontified t c-in-sws t face font-lock-comment-face) 194 210 (fontified t c-in-sws t face font-lock-comment-face) 210 211 (fontified t c-in-sws t face font-lock-comment-face) 211 212 (fontified t c-in-sws t face font-lock-comment-face) 212 213 (fontified t c-in-sws t face font-lock-comment-face) 213 214 (fontified t c-in-sws t face font-lock-comment-face) 214 234 (fontified t c-in-sws t face font-lock-comment-face) 234 235 (fontified t c-in-sws t face font-lock-comment-face) 235 245 (fontified t c-in-sws t) 245 248 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 248 265 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 265 280 (fontified t c-in-sws t face font-lock-comment-face) 280 281 (fontified t c-in-sws t face font-lock-comment-face) 281 282 (fontified t c-in-sws t face font-lock-comment-face) 282 286 (fontified t c-in-sws t face font-lock-comment-face) 286 291 (fontified t c-in-sws t face font-lock-comment-face) 291 293 (fontified t c-in-sws t face font-lock-comment-face) 293 303 (fontified t c-in-sws t) 303 306 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 306 308 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 308 309 (fontified t c-in-sws t face font-lock-comment-face) 309 310 (fontified t face font-lock-comment-face c-in-sws t) 310 311 (fontified t c-in-sws t) 311 313 (fontified t c-in-sws t) 313 320 (fontified t c-in-sws t) 320 321 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 321 323 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 323 324 (fontified t c-in-sws t face font-lock-comment-face) 324 325 (fontified t face font-lock-comment-face c-in-sws t)) . -1491) (undo-tree-id186 . -40) (undo-tree-id187 . -35) (undo-tree-id188 . -40) (undo-tree-id189 . -40) (undo-tree-id190 . -11) (undo-tree-id191 . -325) (undo-tree-id192 . -325) (undo-tree-id193 . -325) (t 25665 26406 966761 879000)) nil (25665 26429 230388 244000) 0 nil])
([nil nil ((1652 . 1978) (#("
" 0 1 (fontified nil)) . 1556) (undo-tree-id182 . -1) (#("
          // for (auto &operand : upperBound.getOperands()) {
          //   if (operand.getKind() == Value::Kind::BlockArgument) {
          //     llvm::outs() << \"User input \" << operand << \" affects loop upper bound in function \"
          //                  << func.getName() << \".\\n\";
          //   }
          // }
" 0 1 (fontified t) 1 11 (c-in-sws t c-is-sws t fontified t) 11 12 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 12 14 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 14 63 (c-in-sws t fontified t face font-lock-comment-face) 63 73 (c-in-sws t fontified t) 73 78 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 78 133 (c-in-sws t fontified t face font-lock-comment-face) 133 143 (c-in-sws t fontified t) 143 150 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 150 235 (c-in-sws t fontified t face font-lock-comment-face) 235 245 (c-in-sws t fontified t) 245 265 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 265 293 (c-in-sws t fontified t face font-lock-comment-face) 293 303 (c-in-sws t fontified t) 303 308 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 308 310 (c-in-sws t fontified t face font-lock-comment-face) 310 320 (c-in-sws t fontified t) 320 323 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 323 325 (c-in-sws t fontified t face font-lock-comment-face)) . -1556) (undo-tree-id183 . -325) (undo-tree-id184 . -325)) nil (25665 26429 230133 12000) 0 nil])
([nil nil ((1705 . 2031) (#("
" 0 1 (fontified nil)) . 1653) (undo-tree-id179 . -1) (#("
          // for (auto &operand : upperBound.getOperands()) {
          //   if (operand.getKind() == Value::Kind::BlockArgument) {
          //     llvm::outs() << \"User input \" << operand << \" affects loop upper bound in function \"
          //                  << func.getName() << \".\\n\";
          //   }
          // }
" 0 1 (fontified t) 1 11 (c-in-sws t c-is-sws t fontified t) 11 12 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 12 14 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 14 63 (c-in-sws t fontified t face font-lock-comment-face) 63 73 (c-in-sws t fontified t) 73 78 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 78 133 (c-in-sws t fontified t face font-lock-comment-face) 133 143 (c-in-sws t fontified t) 143 150 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 150 235 (c-in-sws t fontified t face font-lock-comment-face) 235 245 (c-in-sws t fontified t) 245 265 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 265 293 (c-in-sws t fontified t face font-lock-comment-face) 293 303 (c-in-sws t fontified t) 303 308 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 308 310 (c-in-sws t fontified t face font-lock-comment-face) 310 320 (c-in-sws t fontified t) 320 323 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 323 325 (c-in-sws t fontified t face font-lock-comment-face)) . -1653) (undo-tree-id180 . -325) (undo-tree-id181 . -325)) nil (25665 26429 230131 79000) 0 nil])
([nil nil ((1717 . 2043) (#("
" 0 1 (fontified nil)) . 1706) (undo-tree-id176 . -1) (#("
          // for (auto &operand : upperBound.getOperands()) {
          //   if (operand.getKind() == Value::Kind::BlockArgument) {
          //     llvm::outs() << \"User input \" << operand << \" affects loop upper bound in function \"
          //                  << func.getName() << \".\\n\";
          //   }
          // }
" 0 1 (fontified t) 1 11 (c-in-sws t c-is-sws t fontified t) 11 12 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 12 14 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 14 63 (c-in-sws t fontified t face font-lock-comment-face) 63 73 (c-in-sws t fontified t) 73 78 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 78 133 (c-in-sws t fontified t face font-lock-comment-face) 133 143 (c-in-sws t fontified t) 143 150 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 150 235 (c-in-sws t fontified t face font-lock-comment-face) 235 245 (c-in-sws t fontified t) 245 265 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 265 293 (c-in-sws t fontified t face font-lock-comment-face) 293 303 (c-in-sws t fontified t) 303 308 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 308 310 (c-in-sws t fontified t face font-lock-comment-face) 310 320 (c-in-sws t fontified t) 320 323 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 323 325 (c-in-sws t fontified t face font-lock-comment-face)) . -1706) (undo-tree-id177 . -325) (undo-tree-id178 . -325)) nil (25665 26429 230129 399000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-is-sws t)) . 2043) (undo-tree-id174 . -1) (undo-tree-id175 . -1)) nil (25665 26429 230125 402000) 0 nil])
([nil nil ((1490 . 1501)) nil (25665 26429 230123 538000) 0 nil])
([nil nil ((#("          " 0 10 (fontified t)) . 1491) (undo-tree-id171 . -10) (undo-tree-id172 . -10) (undo-tree-id173 . -10)) nil (25665 26429 230119 207000) 0 nil])
([nil nil ((#("operand" 0 7 (fontified t)) . 1506) (undo-tree-id196 . -7) (undo-tree-id197 . -7) (undo-tree-id198 . -7) 1510 (t 25665 26429 237581 481000)) nil (25665 26443 980488 469000) 0 nil])
([nil nil ((1506 . 1511)) nil (25665 26443 980484 880000) 0 nil])
([nil nil ((1506 . 1516) (#("upper" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -1506) (undo-tree-id194 . -5) (undo-tree-id195 . -1) 1511) nil (25665 26443 980481 53000) 0 nil])
([nil nil ((#("upperBound.getKind() == Value::Kind::BlockArgument" 0 10 (fontified t) 10 18 (fontified t) 18 19 (fontified t face (rainbow-delimiters-depth-8-face)) 19 20 (fontified t face (rainbow-delimiters-depth-8-face)) 20 24 (fontified t) 24 29 (fontified t face font-lock-constant-face) 29 31 (fontified t) 31 35 (fontified t face font-lock-constant-face) 35 50 (fontified t)) . 1506) (undo-tree-id199 . -50) (undo-tree-id200 . -50) (undo-tree-id201 . -50) (undo-tree-id202 . -50) (t 25665 26443 978810 389000)) nil (25665 26580 465830 93000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1547 . 1548) (nil fontified nil 1536 . 1548) (nil fontified nil 1535 . 1536) (nil fontified nil 1516 . 1535) (nil fontified nil 1515 . 1516) (nil fontified nil 1506 . 1515) (1506 . 1548)) nil (25665 26580 465810 936000) 0 nil])
([nil nil ((#("operand" 0 7 (fontified t)) . 1597) (undo-tree-id203 . -7) (undo-tree-id204 . -7) (undo-tree-id205 . -7) (t 25665 26580 470057 854000)) nil (25665 26607 519723 417000) 0 nil])
([nil nil ((1597 . 1607)) nil (25665 26607 519693 666000) 0 nil])
([nil nil ((#("                         " 0 25 (fontified t)) . 1652) (undo-tree-id210 . -25) (undo-tree-id211 . -25) (undo-tree-id212 . -25) (undo-tree-id213 . -25) 1677 (t 25665 26607 514013 832000)) nil (25665 26635 872945 865000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1651) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) 1652) nil (25665 26635 872942 78000) 0 nil])
([nil nil ((1651 . 1652)) nil (25665 26635 872917 955000) 0 nil])
([nil nil ((#("
          // for (auto &operand : upperBound.getOperands()) {
          //   if (operand.getKind() == Value::Kind::BlockArgument) {
          //     llvm::outs() << \"User input \" << operand << \" affects loop upper bound in function \"
          //                  << func.getName() << \".\\n\";
          //   }
          // }
" 0 1 (fontified t) 1 11 (c-in-sws t c-is-sws t fontified t) 11 12 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 12 14 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 14 63 (c-in-sws t fontified t face font-lock-comment-face) 63 73 (c-in-sws t fontified t) 73 78 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 78 133 (c-in-sws t fontified t face font-lock-comment-face) 133 143 (c-in-sws t fontified t) 143 150 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 150 235 (c-in-sws t fontified t face font-lock-comment-face) 235 245 (c-in-sws t fontified t) 245 265 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 265 293 (c-in-sws t fontified t face font-lock-comment-face) 293 303 (c-in-sws t fontified t) 303 308 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 308 310 (c-in-sws t fontified t face font-lock-comment-face) 310 320 (c-in-sws t fontified t) 320 323 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 323 324 (c-in-sws t fontified t face font-lock-comment-face) 324 325 (c-in-sws t fontified t face font-lock-comment-face)) . -1692) (undo-tree-id222 . -325) (undo-tree-id223 . -325) (undo-tree-id224 . -325) (undo-tree-id225 . -325) (undo-tree-id226 . -1) (undo-tree-id227 . -325) 2017 (t 25665 26635 875043 402000)) nil (25665 26664 522210 987000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1691) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) 1692) nil (25665 26802 378807 96000) 0 nil])
([nil nil ((28 . 30) (t 25665 26803 632751 792000)) nil (25665 27167 278720 126000) 0 nil] [nil nil ((1878 . 1980) 1876 (t 25665 26664 527276 496000)) ((#("
  PassRegistration<InputAnalysisPass>(\"input-analysis\", \"Analyze user inputs affecting loop bounds\");" 0 1 (fontified t) 1 3 (fontified t) 3 19 (fontified t) 19 20 (fontified t syntax-table (4 . 62) face (rainbow-delimiters-depth-3-face)) 20 37 (fontified t face font-lock-type-face) 37 38 (fontified t syntax-table (5 . 60) face (rainbow-delimiters-depth-3-face)) 38 39 (fontified t face (rainbow-delimiters-depth-3-face)) 39 55 (fontified t face font-lock-string-face) 55 57 (fontified t) 57 100 (fontified t face font-lock-string-face) 100 101 (fontified t face (rainbow-delimiters-depth-3-face)) 101 102 (fontified t)) . 1878) (undo-tree-id242 . -100) (undo-tree-id243 . 99) (undo-tree-id244 . -19) (undo-tree-id245 . -1)) (25665 26801 875758 864000) 0 nil] [nil nil ((#(", \"Analyze user inputs affecting loop bounds\"" 0 2 (fontified t) 2 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 27 (fontified t face font-lock-string-face) 27 45 (fontified t face font-lock-string-face)) . -1831) (undo-tree-id228 . -45) (undo-tree-id229 . -45) (undo-tree-id230 . -1) 1876 (t 25665 26664 527276 496000)) ((1831 . 1876)) (25665 26772 790141 342000) 0 nil])
([nil nil ((29 . 30)) nil (25665 27167 278719 701000) 0 nil])
([nil nil ((apply -3 1879 1984 undo--wrap-and-run-primitive-undo 1879 1984 ((1881 . 1884) 1978))) ((apply 3 1879 1981 undo--wrap-and-run-primitive-undo 1879 1981 ((#("// " 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 1881) 1833))) (25665 26801 353847 434000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t c-in-sws t)) . -28) (undo-tree-id246 . -1) (undo-tree-id247 . 1) (undo-tree-id248 . -1) (#("#" 0 1 (fontified t c-is-sws t)) . -29) (undo-tree-id249 . -1) 30) nil (25665 27167 278718 517000) 0 nil])
([nil nil ((#("\"Analyze user inputs affecting loop bounds\"" 0 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 25 (fontified t face font-lock-string-face) 25 43 (fontified t face font-lock-string-face)) . 1833) (undo-tree-id238 . -43) (undo-tree-id239 . -43) (undo-tree-id240 . -43) (undo-tree-id241 . -43)) ((1833 . 1876)) (25665 26800 818343 692000) 0 nil])
([nil nil ((28 . 56)) nil (25665 27167 278705 258000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1831) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (#(" " 0 1 (fontified t)) . -1832) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) 1833) ((1831 . 1833) (t 25665 26779 831507 589000)) (25665 26779 834842 110000) 0 nil])
([nil nil ((53 . 61)) nil (25665 27167 278700 505000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t c-in-sws t)) . -28) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (#("#include \"mlir/Pass/PassRegistry.h\"" 0 1 (c-is-sws t fontified t c-in-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 24 (fontified t c-in-sws t face font-lock-string-face) 24 25 (fontified t c-in-sws t face font-lock-string-face) 25 26 (fontified t c-in-sws t face font-lock-string-face) 26 27 (fontified t c-in-sws t face font-lock-string-face) 27 28 (fontified t c-in-sws t face font-lock-string-face) 28 29 (fontified t c-in-sws t face font-lock-string-face) 29 30 (fontified t c-in-sws t face font-lock-string-face) 30 31 (fontified t c-in-sws t face font-lock-string-face) 31 32 (fontified t c-in-sws t face font-lock-string-face) 32 35 (fontified t c-in-sws t face font-lock-string-face)) . 29) (undo-tree-id256 . -35) (undo-tree-id257 . 15) (undo-tree-id258 . -32) (undo-tree-id259 . -32) (undo-tree-id260 . -32) (undo-tree-id261 . -32) (undo-tree-id262 . -33) (t 25665 27167 281060 947000)) nil (25665 27370 126211 146000) 0 nil])
([nil nil ((1742 . 1747) (t 25665 27370 133644 742000)) nil (25665 27712 885086 20000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1746) (undo-tree-id277 . -1) 1747) nil (25665 27716 492812 787000) 0 nil] [nil nil ((nil rear-nonsticky nil 1858 . 1859) (nil fontified nil 1782 . 1859) (nil fontified nil 1781 . 1782) (nil fontified nil 1764 . 1781) (nil fontified nil 1763 . 1764) (nil fontified nil 1747 . 1763) (1747 . 1859)) ((#("PassRegistration<InputAnalysisPass> registration(\"input-analysis\", \"Analyze user inputs affecting loop bounds\");" 0 16 (fontified nil face font-lock-type-face) 16 17 (syntax-table (4 . 62) fontified nil face (rainbow-delimiters-depth-2-face)) 17 34 (fontified nil face font-lock-type-face) 34 35 (syntax-table (5 . 60) fontified nil c-type c-decl-id-start face (rainbow-delimiters-depth-2-face)) 35 36 (fontified nil) 36 48 (fontified nil face font-lock-variable-name-face) 48 49 (fontified nil face (rainbow-delimiters-depth-2-face)) 49 65 (fontified nil face font-lock-string-face) 65 67 (fontified nil) 67 110 (fontified nil face font-lock-string-face) 110 111 (fontified nil face (rainbow-delimiters-depth-2-face)) 111 112 (fontified nil rear-nonsticky nil)) . 1747) (nil rear-nonsticky t 1858 . 1859)) (25665 27712 443453 139000) 0 nil])
([nil nil ((1746 . 1747)) nil (25665 27716 492811 639000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1745) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (#(" " 0 1 (fontified t)) . -1746) (undo-tree-id265 . -1) (undo-tree-id266 . -1) 1747) ((1745 . 1747)) (25665 27711 964811 413000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 1743) (undo-tree-id272 . -4) (undo-tree-id273 . -2) (undo-tree-id274 . -4) (undo-tree-id275 . -4) (undo-tree-id276 . -4) 1747) nil (25665 27716 492811 3000) 0 nil])
([nil nil ((apply -9 1858 2006 undo--wrap-and-run-primitive-undo 1858 2006 ((2001 . 2004) (1896 . 1899) (1858 . 1861) 1996))) ((apply 9 1858 1997 undo--wrap-and-run-primitive-undo 1858 1997 ((#("// " 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 1858) (#<marker at 1741 in old.cpp> . -1) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 1896) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 2001) 1743)) (t 25665 27600 279016 126000)) (25665 27600 266040 536000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1742) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) 1743) nil (25665 27716 492806 548000) 0 nil])
nil
([nil nil ((1742 . 1747) (t 25665 27716 507321 903000)) nil (25665 27880 840704 153000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1793 . 1794) (nil fontified nil 1789 . 1794) (nil fontified nil 1788 . 1789) (nil fontified nil 1771 . 1788) (nil fontified nil 1770 . 1771) (nil fontified nil 1747 . 1770) (1747 . 1794)) nil (25665 27880 840703 605000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1745) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (#(" " 0 1 (fontified t)) . -1746) (undo-tree-id280 . -1) (undo-tree-id281 . -1) 1747) nil (25665 27880 840702 177000) 0 nil])
([nil nil ((apply -9 1793 1941 undo--wrap-and-run-primitive-undo 1793 1941 ((1936 . 1939) (1831 . 1834) (1793 . 1796) 1931))) nil (25665 27880 840684 830000) 0 nil])
([nil nil ((1724 . 1726) (t 25665 27880 846740 896000)) nil (25665 27996 621482 39000) 0 nil])
([nil nil ((1726 . 1727)) nil (25665 27999 12998 502000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . -1726) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) 1727) nil (25665 28001 895057 618000) 0 nil] [nil nil ((#("

namespace" 0 1 (fontified t) 1 2 (fontified t) 2 11 (fontified t face font-lock-keyword-face)) . 1727) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1)) ((1727 . 1738)) (25665 27998 147099 874000) 0 nil])
([nil nil ((1726 . 1727)) nil (25665 28001 896202 899000) 0 nil])
([nil nil ((1727 . 1728)) ((#("~" 0 1 (fontified t)) . 1727) (undo-tree-id286 . -1) (undo-tree-id287 . -1)) (25665 27996 621465 57000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . -1726) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) 1727) nil (25665 28007 818016 433000) 0 nil] [nil nil ((nil rear-nonsticky nil 1866 . 1867) (nil fontified nil 1801 . 1867) (nil fontified nil 1800 . 1801) (nil fontified nil 1783 . 1800) (nil fontified nil 1782 . 1783) (nil fontified nil 1727 . 1782) (1727 . 1867)) ((#("

void registerInputAnalysisPass() {
  PassRegistration<InputAnalysisPass>(\"input-analysis\", \"Analyze user inputs affecting loop bounds\");
}" 0 2 (fontified nil) 2 6 (fontified nil face font-lock-type-face) 6 32 (fontified nil) 32 33 (fontified nil face (rainbow-delimiters-depth-1-face)) 33 34 (fontified nil face (rainbow-delimiters-depth-1-face)) 34 35 (fontified nil) 35 36 (fontified nil face (rainbow-delimiters-depth-1-face)) 36 55 (fontified nil) 55 56 (syntax-table (4 . 62) fontified nil face (rainbow-delimiters-depth-2-face)) 56 73 (fontified nil face font-lock-type-face) 73 74 (syntax-table (5 . 60) fontified nil face (rainbow-delimiters-depth-2-face)) 74 75 (fontified nil face (rainbow-delimiters-depth-2-face)) 75 91 (fontified nil face font-lock-string-face) 91 93 (fontified nil) 93 136 (fontified nil face font-lock-string-face) 136 137 (fontified nil face (rainbow-delimiters-depth-2-face)) 137 139 (fontified nil) 139 140 (fontified nil rear-nonsticky nil face (rainbow-delimiters-depth-1-face))) . 1727) (undo-tree-id295 . -140) (undo-tree-id296 . -139) (undo-tree-id297 . -1) (undo-tree-id298 . 1) (undo-tree-id299 . -140) (undo-tree-id300 . 105) (undo-tree-id301 . -36) (nil rear-nonsticky t 1866 . 1867)) (25665 28001 895041 106000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1865 . 1866) (nil fontified nil 1800 . 1866) (nil fontified nil 1799 . 1800) (nil fontified nil 1782 . 1799) (nil fontified nil 1781 . 1782) (nil fontified nil 1726 . 1781) (1726 . 1866)) nil (25665 28007 818014 526000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -1725) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (#("
" 0 1 (fontified t)) . -1726) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) 1727) nil (25665 28007 818009 982000) 0 nil])
([nil nil ((#("
void registerInputAnalysisPass() {
  PassRegistration<InputAnalysisPass>(\"input-analysis\", \"Analyze user inputs affecting loop bounds\");
}
" 0 1 (fontified t) 1 4 (fontified t face font-lock-type-face) 4 5 (fontified t c-type c-decl-id-start face font-lock-type-face) 5 6 (fontified t) 6 31 (fontified t face font-lock-function-name-face) 31 32 (fontified t face (rainbow-delimiters-depth-1-face)) 32 33 (fontified t face (rainbow-delimiters-depth-1-face)) 33 34 (fontified t) 34 35 (fontified t face (rainbow-delimiters-depth-1-face)) 35 54 (fontified t) 54 55 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-2-face)) 55 72 (fontified t face font-lock-type-face) 72 73 (syntax-table (5 . 60) fontified t face (rainbow-delimiters-depth-2-face)) 73 74 (fontified t face (rainbow-delimiters-depth-2-face)) 74 90 (fontified t face font-lock-string-face) 90 92 (fontified t) 92 135 (fontified t face font-lock-string-face) 135 136 (fontified t face (rainbow-delimiters-depth-2-face)) 136 138 (fontified t) 138 139 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face)) 139 140 (fontified t)) . -1725) (undo-tree-id316 . -140) (undo-tree-id317 . -140) (undo-tree-id318 . -1) (undo-tree-id319 . -140) (t 25665 28007 824020 218000)) nil (25665 28380 38977 225000) 0 nil])
([nil nil ((apply -3 1997 2031 undo--wrap-and-run-primitive-undo 1997 2031 ((1999 . 2002) 2003)) (t 25665 28380 47401 700000)) nil (25665 28456 528111 621000) 0 nil])
([nil nil ((apply 9 1793 1931 undo--wrap-and-run-primitive-undo 1793 1931 ((#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1930) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1828) (#("// " 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1793) 1802)) (t 25665 28456 535901 188000)) nil (25665 28556 509261 955000) 0 nil])
([nil nil ((apply -3 1828 1933 undo--wrap-and-run-primitive-undo 1828 1933 ((1830 . 1833) 1834))) nil (25665 28556 509261 107000) 0 nil])
([nil nil ((1777 . 1827) (#("
" 0 1 (fontified nil)) . 1743) (undo-tree-id320 . -1) (#("  static PassRegistration<InputAnalysisPass> reg;" 0 2 (fontified t) 2 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 25 (fontified t face font-lock-type-face) 25 26 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-2-face)) 26 43 (fontified t face font-lock-type-face) 43 44 (syntax-table (5 . 60) fontified t c-type c-decl-id-start face (rainbow-delimiters-depth-2-face)) 44 45 (fontified t) 45 48 (fontified t face font-lock-variable-name-face) 48 49 (rear-nonsticky t fontified t)) . 1743) (undo-tree-id321 . -9) (undo-tree-id322 . -2) 1752) nil (25665 28556 509256 444000) 0 nil])
([nil nil ((#("
  // registerInputAnalysisPass();" 0 1 (fontified t) 1 3 (c-in-sws t c-is-sws t fontified t) 3 4 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 4 6 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 6 31 (c-in-sws t fontified t face font-lock-comment-face) 31 32 (c-in-sws t fontified t face font-lock-comment-face) 32 33 (c-in-sws t fontified t face font-lock-comment-face) 33 34 (c-in-sws t fontified t face font-lock-comment-face)) . 1990) (undo-tree-id323 . -34) (undo-tree-id324 . -10) (undo-tree-id325 . 28) (undo-tree-id326 . -31) (undo-tree-id327 . -34) (undo-tree-id328 . -34) (t 25665 28556 501980 887000)) nil (25665 28564 733606 660000) 0 nil])
([nil nil ((527 . 529) (t 25665 28564 733600 428000)) nil (25665 28583 544913 916000) 0 nil])
([nil nil ((528 . 529)) nil (25665 28583 544899 539000) 0 nil])
([nil nil ((nil rear-nonsticky nil 566 . 567) (nil fontified nil 530 . 567) (nil fontified nil 529 . 530) (529 . 567)) nil (25665 28583 544898 711000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t fontified t rear-nonsticky t)) . -566) (undo-tree-id329 . -1) (undo-tree-id330 . -1) 567) nil (25665 28583 544894 623000) 0 nil])
([nil nil ((#("Support" 0 7 (c-in-sws t fontified t face font-lock-string-face)) . 544) (undo-tree-id331 . -7) (undo-tree-id332 . -7) (undo-tree-id333 . -7) (t 25665 28583 553740 343000)) nil (25665 28658 332784 262000) 0 nil])
([nil nil ((544 . 549)) nil (25665 28658 332772 931000) 0 nil])
([nil nil ((550 . 558)) nil (25665 28658 332772 211000) 0 nil])
([nil nil ((558 . 559)) nil (25665 28658 332768 448000) 0 nil])
([nil nil ((2037 . 2042) (t 25665 28658 348825 285000)) nil (25665 28671 557981 447000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2136 . 2137) (nil fontified nil 2042 . 2137) (2042 . 2137)) nil (25665 28671 557980 709000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2040) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (#(" " 0 1 (fontified t)) . -2041) (undo-tree-id336 . -1) (undo-tree-id337 . -1) 2042) nil (25665 28671 557978 498000) 0 nil])
([nil nil ((apply -3 2136 2174 undo--wrap-and-run-primitive-undo 2136 2174 ((2138 . 2141)))) nil (25665 28959 510145 925000) 0 nil])
([nil nil ((1876 . 1878) (#("  " 0 2 (fontified nil)) . 1875) (undo-tree-id359 . -2) (1874 . 1878) (t 25665 28960 648959 582000)) nil (25665 28990 880186 765000) 0 nil] [nil nil ((nil rear-nonsticky nil 1935 . 1936) (nil fontified nil 1873 . 1936) (1873 . 1936) (t 25665 28671 568872 40000)) ((#("(\"input-analysis\", \"Analyze user inputs affecting loop bounds\")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face)) 1 17 (fontified nil face font-lock-string-face) 17 19 (fontified nil) 19 62 (fontified nil face font-lock-string-face) 62 63 (fontified nil rear-nonsticky nil face (rainbow-delimiters-depth-3-face))) . 1873) (undo-tree-id338 . -63) (undo-tree-id339 . -63) (undo-tree-id340 . -1) (undo-tree-id341 . 1) (undo-tree-id342 . -63) (undo-tree-id343 . 63) (undo-tree-id344 . -1) (nil rear-nonsticky t 1935 . 1936) (t 25665 28943 517183 562000)) (25665 28943 512830 143000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1877) (undo-tree-id358 . -1) 1878) nil (25665 28990 880185 495000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . 1876) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) 1877) nil (25665 28990 880182 383000) 0 nil])
([nil nil ((1826 . 1830) (#("    " 0 4 (fontified nil)) . 1825) (undo-tree-id353 . -4) (1824 . 1830)) nil (25665 28990 880179 981000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1824) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (#("
" 0 1 (fontified t)) . -1825) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (#(" " 0 1 (fontified t)) . -1826) (undo-tree-id349 . -1) (#(" " 0 1 (fontified t)) . -1827) (undo-tree-id350 . -1) (#(" " 0 1 (fontified t)) . -1828) (undo-tree-id351 . -1) (#(" " 0 1 (fontified t)) . -1829) (undo-tree-id352 . -1) 1830) nil (25665 28990 880177 564000) 0 nil])
([nil nil ((apply -12 1790 1996 undo--wrap-and-run-primitive-undo 1790 1996 ((1991 . 1994) (1883 . 1886) (1828 . 1831) (1790 . 1793) 1983))) nil (25665 28990 880154 375000) 0 nil])
([nil nil ((1792 . 1796) (#("    " 0 4 (fontified nil)) . 1791) (undo-tree-id362 . -4) (1791 . 1796) (#("    " 0 4 (fontified nil)) . 1790) (undo-tree-id363 . -4) (1789 . 1795) (t 25665 28990 880048 912000)) nil (25665 29006 914295 806000) 0 nil])
([nil nil ((1791 . 1792)) nil (25665 29006 914293 363000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1977 . 1978) (nil fontified nil 1884 . 1978) (nil fontified nil 1883 . 1884) (nil fontified nil 1866 . 1883) (nil fontified nil 1865 . 1866) (nil fontified nil 1792 . 1865) (1792 . 1978)) nil (25665 29006 914292 805000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . -1791) (undo-tree-id360 . -1) (undo-tree-id361 . -1) 1792) nil (25665 29006 914288 707000) 0 nil])
([nil nil ((#("(\"input-analysis\", \"Analyze user inputs affecting loop bounds\")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 17 (fontified t face font-lock-string-face) 17 19 (fontified t) 19 62 (fontified t face font-lock-string-face) 62 63 (fontified t face (rainbow-delimiters-depth-3-face))) . -1887) (undo-tree-id364 . -63) (undo-tree-id365 . 1) (undo-tree-id366 . -63) (undo-tree-id367 . 63) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -63) 1950 (t 25665 29006 921247 607000)) nil (25665 29016 749125 852000) 0 nil])
([nil nil ((apply 12 1920 2113 undo--wrap-and-run-primitive-undo 1920 2113 ((#("// " 0 1 (fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -2112) (#("// " 0 1 (c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -2007) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1955) (#("// " 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1920))) (t 25665 29016 751061 215000)) nil (25665 29104 343672 937000) 0 nil])
([nil nil ((#("
  LogicalResult registerInputAnalysisPass() {
    static PassRegistration<InputAnalysisPass> reg;
    return success();
  }
" 0 1 (fontified t) 1 3 (fontified t) 3 15 (fontified t face font-lock-type-face) 15 16 (fontified t c-type c-decl-id-start face font-lock-type-face) 16 17 (fontified t) 17 42 (fontified t face font-lock-function-name-face) 42 43 (fontified t face (rainbow-delimiters-depth-2-face)) 43 44 (fontified t face (rainbow-delimiters-depth-2-face)) 44 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-2-face)) 46 47 (fontified t) 47 51 (fontified t) 51 57 (fontified t face font-lock-keyword-face) 57 58 (fontified t) 58 74 (fontified t face font-lock-type-face) 74 75 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-3-face)) 75 92 (fontified t face font-lock-type-face) 92 93 (syntax-table (5 . 60) fontified t c-type c-decl-id-start face (rainbow-delimiters-depth-3-face)) 93 94 (fontified t) 94 97 (fontified t face font-lock-variable-name-face) 97 99 (fontified t) 99 103 (fontified t) 103 109 (fontified t face font-lock-keyword-face) 109 117 (fontified t) 117 118 (fontified t face (rainbow-delimiters-depth-3-face)) 118 119 (fontified t face (rainbow-delimiters-depth-3-face)) 119 123 (fontified t) 123 124 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face)) 124 125 (fontified t)) . 1790) (undo-tree-id391 . -125) (undo-tree-id392 . -1) (undo-tree-id393 . -97) (undo-tree-id394 . -97) (undo-tree-id395 . -97) (undo-tree-id396 . -125) (undo-tree-id397 . -125)) nil (25665 29104 343672 462000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1789) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) 1790) nil (25665 29104 343670 63000) 0 nil])
([nil nil ((#("

  // PassRegistration<InputAnalysisPass>(\"input-analysis\", \"Analyze user inputs affecting loop bounds\");" 0 1 (fontified t) 1 2 (fontified t) 2 4 (fontified t) 4 5 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 5 7 (fontified t face font-lock-comment-delimiter-face) 7 23 (fontified t face font-lock-comment-face) 23 24 (fontified t face font-lock-comment-face) 24 41 (fontified t face font-lock-comment-face) 41 42 (fontified t face font-lock-comment-face) 42 43 (fontified t face font-lock-comment-face) 43 59 (fontified t face font-lock-comment-face) 59 60 (fontified t face font-lock-comment-face) 60 61 (fontified t face font-lock-comment-face) 61 79 (fontified t face font-lock-comment-face) 79 80 (fontified t face font-lock-comment-face) 80 86 (fontified t face font-lock-comment-face) 86 104 (fontified t face font-lock-comment-face) 104 105 (fontified t face font-lock-comment-face) 105 106 (fontified t face font-lock-comment-face)) . -1879) (undo-tree-id376 . 99) (undo-tree-id377 . -23) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -106) (undo-tree-id381 . -106) (undo-tree-id382 . -2) (undo-tree-id383 . -1) 1985) nil (25665 29104 343521 367000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1878) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) 1879) nil (25665 29104 343510 952000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -2033) (undo-tree-id407 . -1) (undo-tree-id408 . -1) 2034 (t 25665 29104 353653 44000)) nil (25665 29110 368165 626000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2033) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (#("  // return mlir::asMain(argc, argv);" 0 1 (c-in-sws t c-is-sws t fontified t) 1 2 (c-in-sws t c-is-sws t fontified t) 2 3 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 5 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 5 6 (c-in-sws t fontified t face font-lock-comment-face) 6 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 16 (c-in-sws t fontified t face font-lock-comment-face) 16 24 (c-in-sws t fontified t face font-lock-comment-face) 24 25 (c-in-sws t fontified t face font-lock-comment-face) 25 35 (c-in-sws t fontified t face font-lock-comment-face) 35 36 (c-in-sws t fontified t face font-lock-comment-face) 36 37 (c-in-sws t fontified t face font-lock-comment-face)) . 2034) (undo-tree-id402 . -2) (undo-tree-id403 . -2) (undo-tree-id404 . 6) (undo-tree-id405 . -35) (undo-tree-id406 . -11) 2045) nil (25665 29110 368159 120000) 0 nil])
([nil nil ((#("
  return mlir::MlirOptMain(argc, argv, \"InputAnalysisPass driver\\n\", registerInputAnalysisPass);" 0 1 (fontified t) 1 3 (fontified t) 3 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 14 (fontified t face font-lock-constant-face) 14 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-2-face)) 28 40 (fontified t) 40 68 (fontified t face font-lock-string-face) 68 95 (fontified t) 95 96 (fontified t face (rainbow-delimiters-depth-2-face)) 96 97 (fontified t)) . 1936) (undo-tree-id410 . -97) (undo-tree-id411 . -3) (undo-tree-id412 . -97) (undo-tree-id413 . -97) (undo-tree-id414 . -97) (undo-tree-id415 . -97) (t 25665 29110 373706 375000)) nil (25665 29129 121043 95000) 0 nil])
([nil nil ((1936 . 1941)) nil (25665 29129 121039 997000) 0 nil])
([nil nil ((1941 . 1943)) nil (25665 29129 121039 855000) 0 nil])
([nil nil ((1943 . 1945)) nil (25665 29129 121039 573000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t face font-lock-comment-face)) . -1944) (undo-tree-id409 . -1) 1945) nil (25665 29129 121038 803000) 0 nil])
([nil nil ((1944 . 1947)) nil (25665 29129 121028 570000) 0 nil])
([nil nil ((1947 . 1951)) nil (25665 29211 945745 156000) 0 nil])
([nil nil ((1952 . 1953) (t 25665 29129 133989 971000)) nil (25665 29221 606083 650000) 0 nil] [nil nil ((1 . 2) (t 25665 29129 133989 971000)) ((#("k" 0 1 (fontified t)) . 1) (undo-tree-id416 . -1) (undo-tree-id417 . -1)) (25665 29211 945041 68000) 0 nil])
([nil nil ((#("
    // CHATGPT" 0 1 (fontified t) 1 5 (c-in-sws t c-is-sws t fontified t) 5 6 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 6 7 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7 8 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 8 9 (c-in-sws t fontified t face font-lock-comment-face) 9 10 (c-in-sws t fontified t face font-lock-comment-face) 10 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 13 (c-in-sws t fontified t face font-lock-comment-face) 13 14 (c-in-sws t fontified t face font-lock-comment-face) 14 15 (c-in-sws t fontified t face font-lock-comment-face)) . 1936) (undo-tree-id420 . -15) (undo-tree-id421 . -15) (undo-tree-id422 . 7) (undo-tree-id423 . -15) (undo-tree-id424 . -15) (undo-tree-id425 . -15)) nil (25665 29221 606083 100000) 0 nil])
nil
([nil nil ((1936 . 1941)) nil (25665 29221 606078 934000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2251 . 2252) (nil fontified nil 1966 . 2252) (nil fontified nil 1965 . 1966) (nil fontified nil 1945 . 1965) (nil fontified nil 1944 . 1945) (nil fontified nil 1941 . 1944) (1941 . 2252)) nil (25665 29221 606078 73000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2252) (undo-tree-id418 . -1) (undo-tree-id419 . -1) 2253) nil (25665 29221 606075 91000) 0 nil])
([nil nil ((#("{
    
  // Initialize LLVM
  llvm::InitLLVM y(argc, argv);

  // Register the InputAnalysisPass
  mlir::registerInputAnalysisPass();

  // Run the pass on the command-line argument
  mlir::LogicalResult result =
      mlir::MlirOptMain(argc, argv, \"Input Analysis Pass driver\\n\", nullptr);

  return result.failed();
}" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 2 (fontified t) 2 6 (fontified t) 6 7 (fontified t) 7 9 (fontified t c-in-sws t c-is-sws t) 9 10 (c-is-sws t fontified t face font-lock-comment-delimiter-face c-in-sws t) 10 12 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 12 28 (fontified t face font-lock-comment-face c-in-sws t) 28 30 (fontified t c-is-sws t c-in-sws t) 30 31 (c-is-sws t fontified t face font-lock-constant-face) 31 34 (fontified t face font-lock-constant-face) 34 36 (fontified t) 36 43 (fontified t face font-lock-type-face) 43 44 (fontified t c-type c-decl-id-start face font-lock-type-face) 44 45 (fontified t) 45 46 (fontified t face font-lock-variable-name-face) 46 47 (fontified t face (rainbow-delimiters-depth-2-face)) 47 51 (fontified t) 51 52 (fontified t c-type c-not-decl) 52 57 (fontified t) 57 58 (fontified t face (rainbow-delimiters-depth-2-face)) 58 61 (fontified t) 61 63 (fontified t c-in-sws t c-is-sws t) 63 64 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 64 66 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 66 97 (fontified t face font-lock-comment-face c-in-sws t) 97 99 (fontified t c-is-sws t c-in-sws t) 99 100 (fontified t face font-lock-constant-face c-is-sws t) 100 103 (fontified t face font-lock-constant-face) 103 130 (fontified t) 130 131 (fontified t face (rainbow-delimiters-depth-2-face)) 131 132 (fontified t face (rainbow-delimiters-depth-2-face)) 132 135 (fontified t) 135 137 (fontified t c-in-sws t c-is-sws t) 137 138 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 138 140 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 140 182 (fontified t face font-lock-comment-face c-in-sws t) 182 184 (fontified t c-is-sws t c-in-sws t) 184 185 (fontified t face font-lock-constant-face c-is-sws t) 185 188 (fontified t face font-lock-constant-face) 188 190 (fontified t) 190 202 (fontified t face font-lock-type-face) 202 203 (fontified t c-type c-decl-id-start face font-lock-type-face) 203 204 (fontified t) 204 210 (fontified t face font-lock-variable-name-face) 210 219 (fontified t) 219 223 (fontified t face font-lock-constant-face) 223 236 (fontified t) 236 237 (fontified t face (rainbow-delimiters-depth-2-face)) 237 249 (fontified t) 249 279 (fontified t face font-lock-string-face) 279 281 (fontified t) 281 288 (fontified t face font-lock-constant-face) 288 289 (fontified t face (rainbow-delimiters-depth-2-face)) 289 292 (fontified t) 292 294 (fontified t) 294 300 (fontified t face font-lock-keyword-face) 300 314 (fontified t) 314 315 (fontified t face (rainbow-delimiters-depth-2-face)) 315 316 (fontified t face (rainbow-delimiters-depth-2-face)) 316 317 (fontified t rear-nonsticky t) 317 318 (fontified t) 318 319 (c-is-sws t fontified t face (rainbow-delimiters-depth-1-face))) . 1935) (undo-tree-id430 . -319) (undo-tree-id431 . -1) (undo-tree-id432 . -317) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . 319) (undo-tree-id437 . -1) (undo-tree-id438 . 1) (undo-tree-id439 . -319) (undo-tree-id440 . -6) (undo-tree-id441 . -319) (undo-tree-id442 . -319) (undo-tree-id443 . -319) (undo-tree-id444 . -6) (undo-tree-id445 . -7) (t 25665 29221 599286 347000)) nil (25665 29292 606566 815000) 0 nil])
([nil nil ((1935 . 1937)) nil (25665 29292 606424 108000) 0 nil])
([nil nil ((1937 . 1941) (1936 . 1938)) nil (25665 29292 606423 743000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2641 . 2642) (nil fontified nil 2401 . 2642) (nil fontified nil 2400 . 2401) (nil fontified nil 2383 . 2400) (nil fontified nil 2382 . 2383) (nil fontified nil 2234 . 2382) (nil fontified nil 2233 . 2234) (nil fontified nil 2227 . 2233) (nil fontified nil 2226 . 2227) (nil fontified nil 1966 . 2226) (nil fontified nil 1965 . 1966) (nil fontified nil 1945 . 1965) (nil fontified nil 1944 . 1945) (nil fontified nil 1941 . 1944) (1941 . 2642)) nil (25665 29292 606422 988000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1937) (undo-tree-id426 . -4) (undo-tree-id427 . -4) (undo-tree-id428 . -4) (undo-tree-id429 . -4)) nil (25665 29292 606419 84000) 0 nil])
([nil nil ((#("
  // Initialize LLVM
  llvm::InitLLVM y(argc, argv);

  // Create a MlirOptMainConfig object
  mlir::MlirOptMainConfig config;

  // Set the callback to populate the pass manager to the InputAnalysisPass
  config.setPassPipelineSetupFn([](mlir::PassManager &pm) {
    pm.addNestedPass<FuncOp>(mlir::createInlinerPass());
    pm.addPass(mlir::createCanonicalizerPass());
    pm.addPass(mlir::createCSEPass());
    pm.addPass(std::make_unique<InputAnalysisPass>());
    return mlir::success();
  });

  // Run the pass on the command-line argument
  llvm::ExitOnError errorHandler(\"mlir-opt error: \");
  return errorHandler(
      mlir::MlirOptMain(argc, argv, \"Input Analysis Pass driver\\n\", config));
}
" 0 1 (fontified t) 1 3 (c-in-sws t c-is-sws t fontified t) 3 4 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 4 6 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 6 22 (c-in-sws t fontified t face font-lock-comment-face) 22 24 (c-is-sws t c-in-sws t fontified t) 24 25 (c-is-sws t fontified t face font-lock-constant-face) 25 28 (fontified t face font-lock-constant-face) 28 30 (fontified t) 30 37 (fontified t face font-lock-type-face) 37 38 (fontified t c-type c-decl-id-start face font-lock-type-face) 38 39 (fontified t) 39 40 (fontified t face font-lock-variable-name-face) 40 41 (fontified t face (rainbow-delimiters-depth-2-face)) 41 45 (fontified t) 45 46 (fontified t c-type c-not-decl) 46 51 (fontified t) 51 52 (fontified t face (rainbow-delimiters-depth-2-face)) 52 55 (fontified t) 55 57 (c-in-sws t c-is-sws t fontified t) 57 58 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 58 60 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 60 94 (c-in-sws t fontified t face font-lock-comment-face) 94 96 (c-is-sws t c-in-sws t fontified t) 96 97 (c-is-sws t fontified t face font-lock-constant-face) 97 100 (fontified t face font-lock-constant-face) 100 102 (fontified t) 102 118 (fontified t face font-lock-type-face) 118 119 (fontified t c-type c-decl-id-start face font-lock-type-face) 119 120 (fontified t) 120 126 (fontified t face font-lock-variable-name-face) 126 129 (fontified t) 129 131 (c-in-sws t c-is-sws t fontified t) 131 132 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 132 134 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 134 205 (c-in-sws t fontified t face font-lock-comment-face) 205 207 (c-is-sws t c-in-sws t fontified t) 207 208 (c-is-sws t fontified t) 208 236 (fontified t) 236 237 (fontified t face (rainbow-delimiters-depth-2-face)) 237 238 (fontified t face (rainbow-delimiters-depth-3-face)) 238 239 (fontified t face (rainbow-delimiters-depth-3-face)) 239 240 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-3-face)) 240 244 (fontified t face font-lock-constant-face) 244 246 (fontified t) 246 257 (fontified t face font-lock-type-face) 257 259 (fontified t) 259 261 (fontified t face font-lock-variable-name-face) 261 262 (fontified t face (rainbow-delimiters-depth-3-face)) 262 263 (fontified t) 263 264 (fontified t face (rainbow-delimiters-depth-3-face)) 264 285 (fontified t) 285 286 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-4-face)) 286 292 (fontified t) 292 293 (syntax-table (5 . 60) fontified t face (rainbow-delimiters-depth-4-face)) 293 294 (fontified t face (rainbow-delimiters-depth-4-face)) 294 298 (fontified t face font-lock-constant-face) 298 317 (fontified t) 317 318 (fontified t face (rainbow-delimiters-depth-5-face)) 318 319 (fontified t face (rainbow-delimiters-depth-5-face)) 319 320 (fontified t face (rainbow-delimiters-depth-4-face)) 320 336 (fontified t) 336 337 (fontified t face (rainbow-delimiters-depth-4-face)) 337 341 (fontified t face font-lock-constant-face) 341 366 (fontified t) 366 367 (fontified t face (rainbow-delimiters-depth-5-face)) 367 368 (fontified t face (rainbow-delimiters-depth-5-face)) 368 369 (fontified t face (rainbow-delimiters-depth-4-face)) 369 385 (fontified t) 385 386 (fontified t face (rainbow-delimiters-depth-4-face)) 386 390 (fontified t face font-lock-constant-face) 390 405 (fontified t) 405 406 (fontified t face (rainbow-delimiters-depth-5-face)) 406 407 (fontified t face (rainbow-delimiters-depth-5-face)) 407 408 (fontified t face (rainbow-delimiters-depth-4-face)) 408 424 (fontified t) 424 425 (fontified t face (rainbow-delimiters-depth-4-face)) 425 428 (fontified t face font-lock-constant-face) 428 441 (fontified t) 441 442 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-5-face)) 442 459 (fontified t face font-lock-type-face) 459 460 (syntax-table (5 . 60) fontified t face (rainbow-delimiters-depth-5-face)) 460 461 (fontified t face (rainbow-delimiters-depth-5-face)) 461 462 (fontified t face (rainbow-delimiters-depth-5-face)) 462 463 (fontified t face (rainbow-delimiters-depth-4-face)) 463 469 (fontified t) 469 475 (fontified t face font-lock-keyword-face) 475 476 (fontified t) 476 480 (fontified t face font-lock-constant-face) 480 489 (fontified t) 489 490 (fontified t face (rainbow-delimiters-depth-4-face)) 490 491 (fontified t face (rainbow-delimiters-depth-4-face)) 491 495 (fontified t) 495 496 (fontified t face (rainbow-delimiters-depth-3-face)) 496 497 (fontified t face (rainbow-delimiters-depth-2-face)) 497 500 (fontified t) 500 502 (c-in-sws t c-is-sws t fontified t) 502 503 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 503 505 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 505 547 (c-in-sws t fontified t face font-lock-comment-face) 547 549 (c-is-sws t c-in-sws t fontified t) 549 550 (c-is-sws t fontified t face font-lock-constant-face) 550 553 (fontified t face font-lock-constant-face) 553 555 (fontified t) 555 565 (fontified t face font-lock-type-face) 565 566 (fontified t c-type c-decl-id-start face font-lock-type-face) 566 567 (fontified t) 567 579 (fontified t face font-lock-variable-name-face) 579 580 (fontified t face (rainbow-delimiters-depth-2-face)) 580 598 (fontified t face font-lock-string-face) 598 599 (fontified t face (rainbow-delimiters-depth-2-face)) 599 603 (fontified t) 603 609 (fontified t face font-lock-keyword-face) 609 622 (fontified t) 622 623 (fontified t face (rainbow-delimiters-depth-2-face)) 623 630 (fontified t) 630 634 (fontified t face font-lock-constant-face) 634 647 (fontified t) 647 648 (fontified t face (rainbow-delimiters-depth-3-face)) 648 660 (fontified t) 660 690 (fontified t face font-lock-string-face) 690 698 (fontified t) 698 699 (fontified t face (rainbow-delimiters-depth-3-face)) 699 700 (fontified t face (rainbow-delimiters-depth-2-face)) 700 701 (rear-nonsticky t fontified t) 701 702 (fontified t) 702 703 (fontified t face (rainbow-delimiters-depth-1-face)) 703 704 (rear-nonsticky t fontified t)) . -1937) (undo-tree-id464 . -54) (undo-tree-id465 . -704) (undo-tree-id466 . -704) (undo-tree-id467 . -701) (undo-tree-id468 . -704) (undo-tree-id469 . -1) (undo-tree-id470 . -704) 2641 (t 25665 29292 602927 866000)) nil (25665 29414 938368 410000) 0 nil])
([nil nil ((1937 . 1938) (#("}" 0 1 (fontified nil)) . -1937) (1937 . 1938)) nil (25665 29414 938365 656000) 0 nil])
([nil nil ((1936 . 1941)) nil (25665 29414 938365 261000) 0 nil])
([nil nil ((1941 . 1943)) nil (25665 29414 938364 967000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t c-in-sws t c-is-sws t)) . -1939) (undo-tree-id460 . -1) (#(" " 0 1 (fontified t c-in-sws t c-is-sws t)) . -1940) (undo-tree-id461 . -1) (#("/" 0 1 (fontified t c-is-sws t c-in-sws t)) . -1941) (undo-tree-id462 . -1) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . -1942) (undo-tree-id463 . -1) 1943) nil (25665 29414 938364 310000) 0 nil])
([nil nil ((1939 . 1940)) nil (25665 29414 938360 562000) 0 nil])
([nil nil ((1937 . 1941) (#("  " 0 2 (fontified nil c-in-sws t c-is-sws t)) . 1937) (1940 . 1941)) nil (25665 29414 938360 128000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t c-in-sws t c-is-sws t)) . -1939) (undo-tree-id456 . -1) (#(" " 0 1 (fontified t c-in-sws t c-is-sws t)) . -1940) (undo-tree-id457 . -1) (#("/" 0 1 (fontified t c-is-sws t c-in-sws t)) . -1941) (undo-tree-id458 . -1) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . -1942) (undo-tree-id459 . -1) 1943) nil (25665 29414 938359 331000) 0 nil])
([nil nil ((1937 . 1941) (#("  " 0 2 (fontified nil c-in-sws t c-is-sws t)) . 1937) (1939 . 1941)) nil (25665 29414 938358 48000) 0 nil])
([nil nil ((1943 . 1944)) nil (25665 29414 938357 701000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t face font-lock-comment-face)) . -1943) (undo-tree-id455 . -1) 1944) nil (25665 29414 938357 381000) 0 nil])
([nil nil ((1943 . 1944)) nil (25665 29414 938356 839000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-comment-face)) . -1943) (undo-tree-id454 . -1) 1944) nil (25665 29414 938356 443000) 0 nil])
([nil nil ((1943 . 1946)) nil (25665 29414 938355 655000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-comment-face)) . -1943) (undo-tree-id451 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -1944) (undo-tree-id452 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -1945) (undo-tree-id453 . -1) 1946) nil (25665 29414 938354 857000) 0 nil])
([nil nil ((1943 . 1948)) nil (25665 29414 938353 812000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face font-lock-comment-face)) . -1947) (undo-tree-id450 . -1) 1948) nil (25665 29414 938353 233000) 0 nil])
([nil nil ((1947 . 1950)) nil (25665 29414 938352 773000) 0 nil])
([nil nil ((1952 . 1954)) nil (25665 29414 938352 601000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -1953) (undo-tree-id449 . -1) 1954) nil (25665 29414 938352 303000) 0 nil])
([nil nil ((#("X" 0 1 (fontified t)) . -1952) (undo-tree-id448 . -1) 1953) nil (25665 29414 938351 549000) 0 nil])
([nil nil ((1952 . 1954)) nil (25665 29414 938350 493000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1952) (undo-tree-id446 . -1) (#("l" 0 1 (fontified t)) . -1953) (undo-tree-id447 . -1) 1954) nil (25665 29414 938348 985000) 0 nil])
([nil nil ((1952 . 1953)) nil (25665 29414 938331 242000) 0 nil])
([nil nil ((1025 . 1027) (t 25665 29414 948785 525000)) nil (25665 29596 159413 488000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1204 . 1205) (nil fontified nil 1171 . 1205) (nil fontified nil 1170 . 1171) (nil fontified nil 1133 . 1170) (nil fontified nil 1132 . 1133) (nil fontified nil 1097 . 1132) (nil fontified nil 1096 . 1097) (nil fontified nil 1062 . 1096) (nil fontified nil 1061 . 1062) (nil fontified nil 1027 . 1061) (nil fontified nil 1026 . 1027) (1026 . 1205)) nil (25665 29596 159406 886000) 0 nil])
([nil nil ((1026 . 1028) (t 25665 29596 169446 880000)) nil (25665 29609 125971 941000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t c-is-sws t)) . -1026) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (#("x" 0 1 (fontified t)) . -1027) (undo-tree-id474 . -1) 1028) nil (25665 29609 125970 638000) 0 nil])
([nil nil ((apply -3 1061 1099 undo--wrap-and-run-primitive-undo 1061 1099 ((1061 . 1064)))) nil (25665 29609 125954 767000) 0 nil])
([nil nil ((2086 . 2088) (t 25665 29609 129766 384000)) nil (25665 29659 941922 774000) 0 nil])
([nil nil ((1869 . 1870)) nil (25665 29659 941922 381000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t face font-lock-string-face)) . -1869) (undo-tree-id493 . -1) 1870) nil (25665 29659 941921 675000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2476 . 2477) (nil fontified nil 2219 . 2477) (nil fontified nil 2218 . 2219) (nil fontified nil 2201 . 2218) (nil fontified nil 2200 . 2201) (nil fontified nil 2088 . 2200) (nil fontified nil 2087 . 2088) (2087 . 2477)) nil (25665 29659 941920 691000) 0 nil])
([nil nil ((#("

int main(int argc, char **argv) {
    //CHATGPT
}
" 0 1 (fontified t) 1 2 (c-is-sws t fontified t) 2 3 (c-is-sws t fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t c-type c-decl-id-start face font-lock-type-face) 5 6 (fontified t) 6 10 (fontified t face font-lock-function-name-face) 10 11 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-1-face)) 11 14 (fontified t face font-lock-type-face) 14 15 (fontified t) 15 19 (fontified t face font-lock-variable-name-face) 19 20 (fontified t c-type c-decl-arg-start) 20 21 (fontified t) 21 23 (fontified t face font-lock-type-face) 23 25 (fontified t face font-lock-type-face) 25 28 (fontified t) 28 32 (fontified t face font-lock-variable-name-face) 32 33 (fontified t face (rainbow-delimiters-depth-1-face)) 33 34 (fontified t) 34 35 (fontified t face (rainbow-delimiters-depth-1-face)) 35 36 (fontified t) 36 40 (c-in-sws t c-is-sws t fontified t) 40 41 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 41 42 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 42 43 (c-in-sws t fontified t face font-lock-comment-face) 43 44 (c-in-sws t fontified t face font-lock-comment-face) 44 45 (c-in-sws t fontified t face font-lock-comment-face) 45 46 (c-in-sws t fontified t face font-lock-comment-face) 46 47 (c-in-sws t fontified t face font-lock-comment-face) 47 48 (c-in-sws t fontified t face font-lock-comment-face) 48 49 (c-in-sws t fontified t face font-lock-comment-face) 49 50 (c-in-sws t fontified t face font-lock-comment-face) 50 51 (c-is-sws t fontified t face (rainbow-delimiters-depth-1-face)) 51 52 (fontified t)) . -2477) (undo-tree-id475 . -34) (undo-tree-id476 . -34) (undo-tree-id477 . -34) (undo-tree-id478 . -34) (undo-tree-id479 . -50) (undo-tree-id480 . -50) (undo-tree-id481 . -50) (undo-tree-id482 . -50) (undo-tree-id483 . -50) (undo-tree-id484 . -51) (undo-tree-id485 . -52) (undo-tree-id486 . -52) (undo-tree-id487 . -52) (undo-tree-id488 . -52) (undo-tree-id489 . -1) (undo-tree-id490 . 10) (undo-tree-id491 . -49) (undo-tree-id492 . -52) 2529) nil (25665 29659 941916 380000) 0 nil])
([nil nil ((apply -3 2121 2153 undo--wrap-and-run-primitive-undo 2121 2153 ((2123 . 2126) 2137)) (t 25665 29659 952747 776000)) nil (25665 29691 284746 742000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2120) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (#("  // mlir::registerAllPasses();" 0 2 (fontified t c-in-sws t c-is-sws t) 2 3 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 5 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 5 9 (fontified t c-in-sws t face font-lock-comment-face) 9 28 (fontified t c-in-sws t face font-lock-comment-face) 28 29 (fontified t c-in-sws t face font-lock-comment-face) 29 30 (fontified t c-in-sws t face font-lock-comment-face) 30 31 (fontified t c-in-sws t face font-lock-comment-face)) . 2121) (undo-tree-id497 . -19) (undo-tree-id498 . -19) (undo-tree-id499 . 20) (undo-tree-id500 . -28) 2140 (t 25665 29691 284538 723000)) nil (25665 29830 99966 506000) 0 nil])
([nil nil ((2295 . 2296) (t 25665 29831 166064 992000)) nil (25665 29913 631225 387000) 0 nil] [nil nil ((#("createInputAnalysisPass" 0 23 (fontified t)) . 2328) (undo-tree-id501 . -23) (undo-tree-id502 . -23) (undo-tree-id503 . -23) 2332 (t 25665 29704 185959 614000)) ((2328 . 2351)) (25665 29829 581417 9000) 0 nil])
([nil nil ((#("mlir::createInputAnalysisPass()" 0 4 (fontified t face font-lock-constant-face) 4 6 (fontified t) 6 29 (fontified t) 29 30 (fontified t face (rainbow-delimiters-depth-3-face)) 30 31 (fontified t face (rainbow-delimiters-depth-3-face))) . 2323) (undo-tree-id510 . -31) (undo-tree-id511 . -10) (undo-tree-id512 . -6) (undo-tree-id513 . -10) (undo-tree-id514 . -10) (undo-tree-id515 . -29) (undo-tree-id516 . -31) (undo-tree-id517 . -29) (undo-tree-id518 . -30) (undo-tree-id519 . -31) 2347) nil (25665 29921 370210 440000) 0 nil] [nil nil ((2309 . 2312)) ((#("
  " 0 3 (fontified t)) . 2309) (undo-tree-id508 . -3) (undo-tree-id509 . -1)) (25665 29913 629675 423000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2352 . 2353) (nil fontified nil 2335 . 2353) (nil fontified nil 2334 . 2335) (nil fontified nil 2328 . 2334) (2328 . 2353)) ((#("registerInputAnalysisPass" 0 6 (fontified nil) 6 7 (fontified nil) 7 24 (fontified nil) 24 25 (fontified nil rear-nonsticky nil)) . 2328) (undo-tree-id504 . -25) (undo-tree-id505 . -25) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (nil rear-nonsticky t 2352 . 2353) (t 25665 29792 812663 834000)) (25665 29792 807369 747000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2359 . 2360) (nil fontified nil 2359 . 2360) (nil fontified nil 2358 . 2359) (nil fontified nil 2357 . 2358) (nil fontified nil 2340 . 2357) (nil fontified nil 2339 . 2340) (nil fontified nil 2326 . 2339) (nil fontified nil 2323 . 2326) (2323 . 2360)) nil (25665 29921 370193 205000) 0 nil])
nil
nil
([nil nil ((#(" " 0 1 (fontified t)) . -2295) (undo-tree-id520 . -1) 2296 (t 25665 29921 371451 350000)) nil (25665 29943 754369 907000) 0 nil])
([nil nil ((1208 . 1210) (t 25665 29943 763883 412000)) nil (25665 30033 878388 6000) 0 nil])
([nil nil ((1210 . 1211)) nil (25665 30048 332348 323000) 0 nil] [nil nil ((nil rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) 4459 . 4460) (nil font-lock-face (comint-highlight-prompt) 4458 . 4460) (nil fontified nil 4458 . 4460) (nil field output 4458 . 4460) (nil fontified nil 4457 . 4458) (nil field output 4457 . 4458) (nil fontified nil 4421 . 4457) (nil field output 4421 . 4457) (nil fontified nil 4420 . 4421) (nil field output 4420 . 4421) (nil fontified nil 4333 . 4420) (nil field output 4333 . 4420) (nil fontified nil 4332 . 4333) (nil field output 4332 . 4333) (nil fontified nil 4201 . 4332) (nil field output 4201 . 4332) (nil fontified nil 4200 . 4201) (nil field output 4200 . 4201) (nil fontified nil 4084 . 4200) (nil field output 4084 . 4200) (nil fontified nil 4083 . 4084) (nil field output 4083 . 4084) (nil fontified nil 4061 . 4083) (nil field output 4061 . 4083) (nil fontified nil 4060 . 4061) (nil field output 4060 . 4061) (nil fontified nil 4056 . 4060) (nil field output 4056 . 4060) (nil fontified nil 4055 . 4056) (nil field output 4055 . 4056) (nil fontified nil 4036 . 4055) (nil field output 4036 . 4055) (nil fontified nil 4035 . 4036) (nil field output 4035 . 4036) (nil fontified nil 3913 . 4035) (nil field output 3913 . 4035) (nil fontified nil 3879 . 3913) (nil field output 3879 . 3913) (nil fontified nil 3842 . 3879) (nil field output 3842 . 3879) (nil fontified nil 3795 . 3842) (nil field output 3795 . 3842) (nil fontified nil 3794 . 3795) (nil field output 3794 . 3795) (nil fontified nil 3697 . 3794) (nil field output 3697 . 3794) (nil fontified nil 3696 . 3697) (nil field output 3696 . 3697) (nil fontified nil 3605 . 3696) (nil field output 3605 . 3696) (nil fontified nil 3604 . 3605) (nil field output 3604 . 3605) (nil fontified nil 3480 . 3604) (nil field output 3480 . 3604) (nil fontified nil 3410 . 3480) (nil field output 3410 . 3480) (nil fontified nil 3409 . 3410) (nil field output 3409 . 3410) (nil fontified nil 3320 . 3409) (nil field output 3320 . 3409) (nil fontified nil 3319 . 3320) (nil field output 3319 . 3320) (nil fontified nil 3301 . 3319) (nil field output 3301 . 3319) (nil fontified nil 3300 . 3301) (nil field output 3300 . 3301) (nil fontified nil 3227 . 3300) (nil field output 3227 . 3300) (nil fontified nil 3226 . 3227) (nil field output 3226 . 3227) (nil fontified nil 3135 . 3226) (nil field output 3135 . 3226) (nil fontified nil 3134 . 3135) (nil field output 3134 . 3135) (nil fontified nil 3010 . 3134) (nil field output 3010 . 3134) (nil fontified nil 2908 . 3010) (nil field output 2908 . 3010) (nil fontified nil 2907 . 2908) (nil field output 2907 . 2908) (nil fontified nil 2799 . 2907) (nil field output 2799 . 2907) (nil fontified nil 2798 . 2799) (nil field output 2798 . 2799) (nil fontified nil 2780 . 2798) (nil field output 2780 . 2798) (nil fontified nil 2779 . 2780) (nil field output 2779 . 2780) (nil fontified nil 2706 . 2779) (nil field output 2706 . 2779) (nil fontified nil 2705 . 2706) (nil field output 2705 . 2706) (nil fontified nil 2614 . 2705) (nil field output 2614 . 2705) (nil fontified nil 2493 . 2614) (nil field output 2493 . 2614) (nil fontified nil 2492 . 2493) (nil field output 2492 . 2493) (nil fontified nil 2474 . 2492) (nil field output 2474 . 2492) (nil fontified nil 2473 . 2474) (nil field output 2473 . 2474) (nil fontified nil 2469 . 2473) (nil field output 2469 . 2473) (nil fontified nil 2468 . 2469) (nil field output 2468 . 2469) (nil fontified nil 2465 . 2468) (nil field output 2465 . 2468) (nil fontified nil 2464 . 2465) (nil field output 2464 . 2465) (nil fontified nil 2342 . 2464) (nil field output 2342 . 2464) (nil fontified nil 2240 . 2342) (nil field output 2240 . 2342) (nil fontified nil 2239 . 2240) (nil field output 2239 . 2240) (nil fontified nil 2182 . 2239) (nil field output 2182 . 2239) (nil fontified nil 2181 . 2182) (nil field output 2181 . 2182) (nil fontified nil 2163 . 2181) (nil field output 2163 . 2181) (nil fontified nil 2162 . 2163) (nil field output 2162 . 2163) (nil fontified nil 2089 . 2162) (nil field output 2089 . 2162) (nil fontified nil 2088 . 2089) (nil field output 2088 . 2089) (nil fontified nil 1997 . 2088) (nil field output 1997 . 2088) (nil fontified nil 1695 . 1997) (nil field output 1695 . 1997) (nil fontified nil 1694 . 1695) (nil field output 1694 . 1695) (nil fontified nil 1629 . 1694) (nil field output 1629 . 1694) (nil fontified nil 1628 . 1629) (nil field output 1628 . 1629) (nil fontified nil 1498 . 1628) (nil field output 1498 . 1628) (nil fontified nil 1497 . 1498) (nil field output 1497 . 1498) (nil fontified nil 1496 . 1497) (nil field output 1496 . 1497) (nil fontified nil 1495 . 1496) (nil field output 1495 . 1496) (nil fontified nil 1474 . 1495) (nil field output 1474 . 1495) (nil fontified nil 1473 . 1474) (nil field output 1473 . 1474) (nil fontified nil 1377 . 1473) (nil field output 1377 . 1473) (nil fontified nil 1376 . 1377) (nil field output 1376 . 1377) (nil font-lock-face (:foreground "green3") 1298 . 1376) (nil fontified nil 1298 . 1376) (nil field output 1298 . 1376) (nil fontified nil 1291 . 1298) (nil field output 1291 . 1298) (nil fontified nil 1290 . 1291) (nil field output 1290 . 1291) (nil font-lock-face (ansi-color-bold (:foreground "magenta3")) 1217 . 1290) (nil fontified nil 1217 . 1290) (nil field output 1217 . 1290) (nil fontified nil 1216 . 1217) (nil field boundary 1216 . 1217) (nil mouse-face highlight 1212 . 1216) (nil help-echo "mouse-2: insert after prompt as new input" 1212 . 1216) (nil font-lock-face comint-highlight-input 1212 . 1216) (nil fontified nil 1212 . 1216) (nil font-lock-face (comint-highlight-prompt comint-highlight-prompt) 1210 . 1212) (nil fontified nil 1210 . 1212) (nil field output 1210 . 1212) (1210 . 4460)) ((#("# make
Consolidate compiler generated dependencies of target input-analysis-pass
[ 50%] Building CXX object CMakeFiles/input-analysis-pass.dir/InputAnalysisPass.cpp.o
/root/766-volume/nhvercae/preliminary-work/InputAnalysisPass/InputAnalysisPass.cpp: In function 'int main(int, char**)':
/root/766-volume/nhvercae/preliminary-work/InputAnalysisPass/InputAnalysisPass.cpp:85:34: error: no matching function for call to 'MlirOptMain(int&, char**&, const char [33], mlir::OpPassManager&)'
   85 |   return failed(mlir::MlirOptMain(argc, argv, \"MLIR input analysis pass driver\\n\", pm));
      |                 ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /root/766-volume/nhvercae/preliminary-work/InputAnalysisPass/InputAnalysisPass.cpp:22:
/root/llvm-project/mlir/include/mlir/Tools/mlir-opt/MlirOptMain.h:197:15: note: candidate: 'mlir::LogicalResult mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer>, mlir::DialectRegistry&, const mlir::MlirOptMainConfig&)'
  197 | LogicalResult MlirOptMain(llvm::raw_ostream &outputStream,
      |               ^~~~~~~~~~~
/root/llvm-project/mlir/include/mlir/Tools/mlir-opt/MlirOptMain.h:197:46: note:   no known conversion for argument 1 from 'int' to 'llvm::raw_ostream&'
  197 | Result MlirOptMain(llvm::raw_ostream &outputStream,
      |                    ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~

/root/llvm-project/mlir/include/mlir/Tools/mlir-opt/MlirOptMain.h:204:15: note: candidate: 'mlir::LogicalResult mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer>, const mlir::PassPipelineCLParser&, mlir::DialectRegistry&, bool, bool, bool, bool, bool, bool, bool, bool)'
  204 | LogicalResult MlirOptMain(llvm::raw_ostream &outputStream,
      |               ^~~~~~~~~~~
/root/llvm-project/mlir/include/mlir/Tools/mlir-opt/MlirOptMain.h:204:15: note:   candidate expects 12 arguments, 4 provided
/root/llvm-project/mlir/include/mlir/Tools/mlir-opt/MlirOptMain.h:216:15: note: candidate: 'mlir::LogicalResult mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer>, mlir::PassPipelineFn, mlir::DialectRegistry&, bool, bool, bool, bool, bool, bool, bool)'
  216 | LogicalResult MlirOptMain(
      |               ^~~~~~~~~~~
/root/llvm-project/mlir/include/mlir/Tools/mlir-opt/MlirOptMain.h:216:15: note:   candidate expects 11 arguments, 4 provided
/root/llvm-project/mlir/include/mlir/Tools/mlir-opt/MlirOptMain.h:229:15: note: candidate: 'mlir::LogicalResult mlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&, bool)'
  229 | LogicalResult MlirOptMain(int argc, char **argv, llvm::StringRef toolName,
      |               ^~~~~~~~~~~
/root/llvm-project/mlir/include/mlir/Tools/mlir-opt/MlirOptMain.h:230:44: note:   no known conversion for argument 4 from 'mlir::OpPassManager' to 'mlir::DialectRegistry&'
  230 |                        DialectRegistry &registry,
      |                        ~~~~~~~~~~~~~~~~~^~~~~~~~

make[2]: *** [CMakeFiles/input-analysis-pass.dir/build.make:76: CMakeFiles/input-analysis-pass.dir/InputAnalysisPass.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:191: CMakeFiles/input-analysis-pass.dir/all] Error 2
make: *** [Makefile:91: all] Error 2
# " 0 1 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-preprocessor-face c-is-sws t c-in-sws t font-lock-face (comint-highlight-prompt comint-highlight-prompt) field output) 1 2 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-preprocessor-face c-in-sws t font-lock-face (comint-highlight-prompt comint-highlight-prompt) field output) 2 6 (front-sticky t fontified nil face font-lock-preprocessor-face c-in-sws t mouse-face highlight help-echo "mouse-2: insert after prompt as new input" font-lock-face comint-highlight-input) 6 7 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) inhibit-line-move-field-capture t fontified nil c-in-sws t field boundary) 7 8 (ansi-color-face (ansi-color-bold (:foreground "magenta3")) rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil c-is-sws t font-lock-face (ansi-color-bold (:foreground "magenta3")) field output) 8 54 (ansi-color-face (ansi-color-bold (:foreground "magenta3")) rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil font-lock-face (ansi-color-bold (:foreground "magenta3")) field output) 54 59 (ansi-color-face (ansi-color-bold (:foreground "magenta3")) rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face font-lock-face (ansi-color-bold (:foreground "magenta3")) field output) 59 60 (ansi-color-face (ansi-color-bold (:foreground "magenta3")) rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil c-type c-decl-id-start face font-lock-type-face font-lock-face (ansi-color-bold (:foreground "magenta3")) field output) 60 61 (ansi-color-face (ansi-color-bold (:foreground "magenta3")) rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil font-lock-face (ansi-color-bold (:foreground "magenta3")) field output) 61 66 (ansi-color-face (ansi-color-bold (:foreground "magenta3")) rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-variable-name-face font-lock-face (ansi-color-bold (:foreground "magenta3")) field output) 66 80 (ansi-color-face (ansi-color-bold (:foreground "magenta3")) rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil font-lock-face (ansi-color-bold (:foreground "magenta3")) field output) 80 81 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 81 82 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-1-face) field output) 82 86 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 86 87 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-1-face) field output) 87 88 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 88 166 (ansi-color-face (:foreground "green3") rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil font-lock-face (:foreground "green3") field output) 166 167 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 167 263 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 263 264 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-warning-face field output) 264 267 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 267 272 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 272 273 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-1-face) field output) 273 276 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 276 278 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 278 282 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 282 284 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 284 285 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-1-face) field output) 285 286 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-warning-face field output) 286 287 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 287 288 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 288 406 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 406 409 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-keyword-face field output) 409 418 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 418 419 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-warning-face field output) 419 430 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 430 431 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-1-face) field output) 431 434 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 434 437 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 437 441 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 441 446 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 446 451 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-keyword-face field output) 451 452 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 452 456 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 456 457 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 457 458 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-2-face) field output) 458 460 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 460 461 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-2-face) field output) 461 463 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 463 467 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 467 469 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 469 482 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 482 483 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 483 484 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-1-face) field output) 484 485 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-warning-face field output) 485 496 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 496 502 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-keyword-face field output) 502 509 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 509 510 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-1-face) field output) 510 514 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 514 527 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 527 528 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-2-face) field output) 528 540 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 540 575 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-string-face field output) 575 579 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 579 580 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-2-face) field output) 580 581 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-1-face) field output) 581 787 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 787 878 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 878 879 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-warning-face field output) 879 883 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 883 899 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 899 903 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 903 916 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 916 917 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-1-face) field output) 917 921 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 921 923 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 923 934 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 934 937 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 937 940 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 940 942 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 942 952 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 952 953 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t syntax-table (4 . 62) fontified nil face (rainbow-delimiters-depth-2-face) field output) 953 957 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 957 971 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 971 972 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t syntax-table (5 . 60) fontified nil face (rainbow-delimiters-depth-2-face) field output) 972 974 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 974 978 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 978 980 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 980 995 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 995 998 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 998 1003 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-keyword-face field output) 1003 1004 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1004 1008 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 1008 1010 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1010 1027 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 1027 1028 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1028 1029 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-1-face) field output) 1029 1030 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-warning-face field output) 1030 1064 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1064 1065 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-1-face) field output) 1065 1069 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 1069 1071 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1071 1082 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 1082 1084 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1084 1096 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-variable-name-face field output) 1096 1132 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1132 1234 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1234 1237 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-keyword-face field output) 1237 1254 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1254 1255 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-warning-face field output) 1255 1258 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 1258 1259 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-warning-face field output) 1259 1263 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1263 1264 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-warning-face field output) 1264 1268 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 1268 1282 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1282 1283 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-warning-face field output) 1283 1310 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1310 1311 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-2-face) field output) 1311 1315 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 1315 1317 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1317 1328 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 1328 1330 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1330 1342 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-variable-name-face field output) 1342 1404 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1404 1495 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1495 1496 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-warning-face field output) 1496 1500 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 1500 1516 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1516 1520 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 1520 1533 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1533 1534 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-3-face) field output) 1534 1538 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 1538 1540 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1540 1551 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 1551 1554 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1554 1557 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 1557 1559 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1559 1569 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 1569 1570 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t syntax-table (4 . 62) fontified nil face (rainbow-delimiters-depth-4-face) field output) 1570 1574 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 1574 1588 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1588 1589 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t syntax-table (5 . 60) fontified nil face (rainbow-delimiters-depth-4-face) field output) 1589 1591 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1591 1596 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-keyword-face field output) 1596 1597 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1597 1601 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 1601 1603 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1603 1623 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 1623 1626 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1626 1630 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 1630 1632 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1632 1647 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 1647 1650 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1650 1654 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 1654 1656 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1656 1660 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 1660 1662 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1662 1666 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 1666 1668 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1668 1672 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 1672 1674 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1674 1678 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 1678 1680 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1680 1684 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 1684 1686 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1686 1690 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 1690 1692 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1692 1696 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-type-face field output) 1696 1697 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-3-face) field output) 1697 1698 (face font-lock-string-face rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1698 1800 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1800 1924 (face font-lock-string-face rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1924 1925 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 1925 2016 (face font-lock-string-face rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2016 2017 (face font-lock-string-face rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2017 2090 (face font-lock-string-face rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2090 2091 (face font-lock-string-face rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t syntax-table (4 . 62) fontified nil field output) 2091 2109 (face font-lock-string-face rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2109 2110 (face font-lock-string-face rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t syntax-table (5 . 60) fontified nil field output) 2110 2199 (face font-lock-string-face rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2199 2200 (face font-lock-string-face rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2200 2270 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2270 2394 (face font-lock-string-face rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2394 2395 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2395 2486 (face font-lock-string-face rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2486 2487 (face font-lock-string-face rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2487 2584 (face font-lock-string-face rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2584 2585 (face font-lock-string-face rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2585 2586 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2586 2619 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2619 2620 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t face (rainbow-delimiters-depth-5-face) fontified nil field output) 2620 2623 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t face font-lock-type-face fontified nil field output) 2623 2624 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2624 2628 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t face font-lock-variable-name-face fontified nil field output) 2628 2630 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2630 2632 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t face font-lock-type-face fontified nil field output) 2632 2634 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t face font-lock-type-face fontified nil field output) 2634 2637 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2637 2641 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t face font-lock-variable-name-face fontified nil field output) 2641 2643 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2643 2647 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t face font-lock-constant-face fontified nil field output) 2647 2649 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2649 2658 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t face font-lock-type-face fontified nil field output) 2658 2659 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2659 2667 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t face font-lock-variable-name-face fontified nil field output) 2667 2669 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2669 2703 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2703 2788 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2788 2805 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2805 2808 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-keyword-face field output) 2808 2825 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2825 2826 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-warning-face field output) 2826 2830 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 2830 2845 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2845 2846 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-warning-face field output) 2846 2850 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2850 2851 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-warning-face field output) 2851 2855 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 2855 2873 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2873 2874 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-warning-face field output) 2874 2990 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2990 2991 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2991 2995 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2995 2996 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-6-face) field output) 2996 2997 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 2997 2998 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-6-face) field output) 2998 3004 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 3004 3005 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-6-face) field output) 3005 3015 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 3015 3113 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 3113 3114 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-6-face) field output) 3114 3122 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 3122 3123 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 3123 3127 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 3127 3128 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-6-face) field output) 3128 3129 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 3129 3130 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-6-face) field output) 3130 3136 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 3136 3137 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-6-face) field output) 3137 3147 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 3147 3201 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 3201 3202 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-6-face) field output) 3202 3210 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 3210 3211 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 3211 3221 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 3221 3222 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-6-face) field output) 3222 3230 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face font-lock-constant-face field output) 3230 3238 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 3238 3239 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil face (rainbow-delimiters-depth-6-face) field output) 3239 3247 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 3247 3248 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil field output) 3248 3249 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil font-lock-face (comint-highlight-prompt) field output) 3249 3250 (rear-nonsticky (field inhibit-line-move-field-capture read-only font-lock-face) front-sticky (field inhibit-line-move-field-capture) inhibit-line-move-field-capture t fontified nil font-lock-face (comint-highlight-prompt) field output)) . 1210) (undo-tree-id521 . -2) (undo-tree-id522 . -2788) (undo-tree-id523 . -3250) (undo-tree-id524 . -3248) (undo-tree-id525 . -1) (nil field nil 1211 . 1212) (nil field nil 1210 . 1211) (nil font-lock-face nil 1211 . 1212) (nil font-lock-face nil 1210 . 1211) (nil font-lock-face nil 1212 . 1216) (nil help-echo nil 1212 . 1216) (nil mouse-face nil 1212 . 1216) (nil field nil 1216 . 1217) (nil field nil 1276 . 1290) (nil field nil 1271 . 1276) (nil field nil 1270 . 1271) (nil field nil 1269 . 1270) (nil field nil 1264 . 1269) (nil field nil 1218 . 1264) (nil field nil 1217 . 1218) (nil font-lock-face nil 1276 . 1290) (nil font-lock-face nil 1271 . 1276) (nil font-lock-face nil 1270 . 1271) (nil font-lock-face nil 1269 . 1270) (nil font-lock-face nil 1264 . 1269) (nil font-lock-face nil 1218 . 1264) (nil font-lock-face nil 1217 . 1218) (nil field nil 1290 . 1291) (nil field nil 1297 . 1298) (nil field nil 1296 . 1297) (nil field nil 1292 . 1296) (nil field nil 1291 . 1292) (nil field nil 1298 . 1376) (nil font-lock-face nil 1298 . 1376) (nil field nil 1376 . 1377) (nil field nil 1377 . 1473) (nil field nil 1473 . 1474) (nil field nil 1494 . 1495) (nil field nil 1492 . 1494) (nil field nil 1488 . 1492) (nil field nil 1486 . 1488) (nil field nil 1483 . 1486) (nil field nil 1482 . 1483) (nil field nil 1477 . 1482) (nil field nil 1474 . 1477) (nil field nil 1495 . 1496) (nil field nil 1496 . 1497) (nil field nil 1497 . 1498) (nil field nil 1619 . 1628) (nil field nil 1616 . 1619) (nil field nil 1498 . 1616) (nil field nil 1628 . 1629) (nil field nil 1693 . 1694) (nil field nil 1692 . 1693) (nil field nil 1679 . 1692) (nil field nil 1677 . 1679) (nil field nil 1673 . 1677) (nil field nil 1671 . 1673) (nil field nil 1670 . 1671) (nil field nil 1668 . 1670) (nil field nil 1667 . 1668) (nil field nil 1666 . 1667) (nil field nil 1662 . 1666) (nil field nil 1661 . 1662) (nil field nil 1656 . 1661) (nil field nil 1651 . 1656) (nil field nil 1647 . 1651) (nil field nil 1644 . 1647) (nil field nil 1641 . 1644) (nil field nil 1640 . 1641) (nil field nil 1629 . 1640) (nil field nil 1694 . 1695) (nil field nil 1791 . 1997) (nil field nil 1790 . 1791) (nil field nil 1789 . 1790) (nil field nil 1785 . 1789) (nil field nil 1750 . 1785) (nil field nil 1738 . 1750) (nil field nil 1737 . 1738) (nil field nil 1724 . 1737) (nil field nil 1720 . 1724) (nil field nil 1719 . 1720) (nil field nil 1712 . 1719) (nil field nil 1706 . 1712) (nil field nil 1695 . 1706) (nil field nil 1997 . 2088) (nil field nil 2088 . 2089) (nil field nil 2152 . 2162) (nil field nil 2150 . 2152) (nil field nil 2147 . 2150) (nil field nil 2144 . 2147) (nil field nil 2133 . 2144) (nil field nil 2131 . 2133) (nil field nil 2127 . 2131) (nil field nil 2126 . 2127) (nil field nil 2113 . 2126) (nil field nil 2109 . 2113) (nil field nil 2093 . 2109) (nil field nil 2089 . 2093) (nil field nil 2162 . 2163) (nil field nil 2167 . 2181) (nil field nil 2163 . 2167) (nil field nil 2181 . 2182) (nil field nil 2238 . 2239) (nil field nil 2237 . 2238) (nil field nil 2220 . 2237) (nil field nil 2218 . 2220) (nil field nil 2214 . 2218) (nil field nil 2213 . 2214) (nil field nil 2208 . 2213) (nil field nil 2205 . 2208) (nil field nil 2190 . 2205) (nil field nil 2188 . 2190) (nil field nil 2184 . 2188) (nil field nil 2182 . 2184) (nil field nil 2239 . 2240) (nil field nil 2306 . 2342) (nil field nil 2294 . 2306) (nil field nil 2292 . 2294) (nil field nil 2281 . 2292) (nil field nil 2279 . 2281) (nil field nil 2275 . 2279) (nil field nil 2274 . 2275) (nil field nil 2240 . 2274) (nil field nil 2447 . 2464) (nil field nil 2444 . 2447) (nil field nil 2342 . 2444) (nil field nil 2464 . 2465) (nil field nil 2465 . 2468) (nil field nil 2468 . 2469) (nil field nil 2469 . 2473) (nil field nil 2473 . 2474) (nil field nil 2478 . 2492) (nil field nil 2474 . 2478) (nil field nil 2492 . 2493) (nil field nil 2552 . 2614) (nil field nil 2540 . 2552) (nil field nil 2538 . 2540) (nil field nil 2527 . 2538) (nil field nil 2525 . 2527) (nil field nil 2521 . 2525) (nil field nil 2520 . 2521) (nil field nil 2493 . 2520) (nil field nil 2614 . 2705) (nil field nil 2705 . 2706) (nil field nil 2769 . 2779) (nil field nil 2767 . 2769) (nil field nil 2764 . 2767) (nil field nil 2761 . 2764) (nil field nil 2750 . 2761) (nil field nil 2748 . 2750) (nil field nil 2744 . 2748) (nil field nil 2743 . 2744) (nil field nil 2730 . 2743) (nil field nil 2726 . 2730) (nil field nil 2710 . 2726) (nil field nil 2706 . 2710) (nil field nil 2779 . 2780) (nil field nil 2784 . 2798) (nil field nil 2780 . 2784) (nil field nil 2798 . 2799) (nil field nil 2906 . 2907) (nil field nil 2902 . 2906) (nil field nil 2900 . 2902) (nil field nil 2896 . 2900) (nil field nil 2894 . 2896) (nil field nil 2890 . 2894) (nil field nil 2888 . 2890) (nil field nil 2884 . 2888) (nil field nil 2882 . 2884) (nil field nil 2878 . 2882) (nil field nil 2876 . 2878) (nil field nil 2872 . 2876) (nil field nil 2870 . 2872) (nil field nil 2866 . 2870) (nil field nil 2864 . 2866) (nil field nil 2860 . 2864) (nil field nil 2857 . 2860) (nil field nil 2842 . 2857) (nil field nil 2840 . 2842) (nil field nil 2836 . 2840) (nil field nil 2833 . 2836) (nil field nil 2813 . 2833) (nil field nil 2811 . 2813) (nil field nil 2807 . 2811) (nil field nil 2806 . 2807) (nil field nil 2801 . 2806) (nil field nil 2799 . 2801) (nil field nil 2907 . 2908) (nil field nil 2908 . 3010) (nil field nil 3010 . 3134) (nil field nil 3134 . 3135) (nil field nil 3135 . 3226) (nil field nil 3226 . 3227) (nil field nil 3227 . 3300) (nil field nil 3300 . 3301) (nil field nil 3301 . 3319) (nil field nil 3319 . 3320) (nil field nil 3320 . 3409) (nil field nil 3409 . 3410) (nil field nil 3410 . 3480) (nil field nil 3480 . 3604) (nil field nil 3604 . 3605) (nil field nil 3605 . 3696) (nil field nil 3696 . 3697) (nil field nil 3697 . 3794) (nil field nil 3794 . 3795) (nil field nil 3840 . 3842) (nil field nil 3838 . 3840) (nil field nil 3834 . 3838) (nil field nil 3833 . 3834) (nil field nil 3830 . 3833) (nil field nil 3829 . 3830) (nil field nil 3796 . 3829) (nil field nil 3795 . 3796) (nil field nil 3877 . 3879) (nil field nil 3869 . 3877) (nil field nil 3868 . 3869) (nil field nil 3859 . 3868) (nil field nil 3857 . 3859) (nil field nil 3853 . 3857) (nil field nil 3851 . 3853) (nil field nil 3847 . 3851) (nil field nil 3844 . 3847) (nil field nil 3842 . 3844) (nil field nil 3879 . 3913) (nil field nil 4018 . 4035) (nil field nil 4015 . 4018) (nil field nil 3998 . 4015) (nil field nil 3913 . 3998) (nil field nil 4035 . 4036) (nil field nil 4040 . 4055) (nil field nil 4036 . 4040) (nil field nil 4055 . 4056) (nil field nil 4056 . 4060) (nil field nil 4060 . 4061) (nil field nil 4065 . 4083) (nil field nil 4061 . 4065) (nil field nil 4083 . 4084) (nil field nil 4084 . 4200) (nil field nil 4200 . 4201) (nil field nil 4324 . 4332) (nil field nil 4323 . 4324) (nil field nil 4225 . 4323) (nil field nil 4215 . 4225) (nil field nil 4214 . 4215) (nil field nil 4208 . 4214) (nil field nil 4207 . 4208) (nil field nil 4206 . 4207) (nil field nil 4205 . 4206) (nil field nil 4201 . 4205) (nil field nil 4332 . 4333) (nil field nil 4412 . 4420) (nil field nil 4411 . 4412) (nil field nil 4357 . 4411) (nil field nil 4347 . 4357) (nil field nil 4346 . 4347) (nil field nil 4340 . 4346) (nil field nil 4339 . 4340) (nil field nil 4338 . 4339) (nil field nil 4337 . 4338) (nil field nil 4333 . 4337) (nil field nil 4420 . 4421) (nil field nil 4449 . 4457) (nil field nil 4448 . 4449) (nil field nil 4440 . 4448) (nil field nil 4432 . 4440) (nil field nil 4431 . 4432) (nil field nil 4421 . 4431) (nil field nil 4457 . 4458) (nil field nil 4459 . 4460) (nil field nil 4458 . 4459) (nil font-lock-face nil 4459 . 4460) (nil font-lock-face nil 4458 . 4459) (nil rear-nonsticky t 4459 . 4460)) (25665 30033 875815 758000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t c-is-sws t)) . -1210) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) 1211) nil (25665 30048 332346 978000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1244 . 1245) (nil fontified nil 1211 . 1245) (nil fontified nil 1210 . 1211) (1210 . 1245)) nil (25665 30048 332339 487000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t fontified t rear-nonsticky t)) . -1244) (undo-tree-id526 . -1) (undo-tree-id527 . -1) 1245) nil (25665 30048 332309 640000) 0 nil])
([nil nil ((2235 . 2237) (#("  " 0 2 (fontified nil)) . 2234) (undo-tree-id558 . -2) (2233 . 2237) (t 25665 30048 337890 794000)) nil (25665 30086 434522 749000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2648 . 2649) (nil fontified nil 2552 . 2649) (nil fontified nil 2551 . 2552) (nil fontified nil 2534 . 2551) (nil fontified nil 2533 . 2534) (nil fontified nil 2292 . 2533) (nil fontified nil 2291 . 2292) (nil fontified nil 2272 . 2291) (nil fontified nil 2271 . 2272) (nil fontified nil 2237 . 2271) (2237 . 2649)) nil (25665 30086 434521 417000) 0 nil])
([nil nil ((#("
  mlir::OpPassManager pm;
  pm.addPass(mlir::createCanonicalizerPass());
  pm.addPass(mlir::createCSEPass());
  pm.addPass(std::make_unique<InputAnalysisPass>());

  return failed(mlir::MlirOptMain(argc, argv, \"MLIR input analysis pass driver\\n\", pm));" 0 3 (fontified t) 3 7 (fontified t face font-lock-constant-face) 7 9 (fontified t) 9 21 (fontified t face font-lock-type-face) 21 22 (fontified t c-type c-decl-id-start face font-lock-type-face) 22 23 (fontified t) 23 25 (fontified t face font-lock-variable-name-face) 25 39 (fontified t) 39 40 (fontified t face (rainbow-delimiters-depth-2-face)) 40 44 (fontified t face font-lock-constant-face) 44 48 (fontified t) 48 69 (fontified t) 69 70 (fontified t face (rainbow-delimiters-depth-3-face)) 70 71 (fontified t face (rainbow-delimiters-depth-3-face)) 71 72 (fontified t face (rainbow-delimiters-depth-2-face)) 72 74 (fontified t) 74 86 (fontified t) 86 87 (fontified t face (rainbow-delimiters-depth-2-face)) 87 91 (fontified t face font-lock-constant-face) 91 97 (fontified t) 97 106 (fontified t) 106 107 (fontified t face (rainbow-delimiters-depth-3-face)) 107 108 (fontified t face (rainbow-delimiters-depth-3-face)) 108 109 (fontified t face (rainbow-delimiters-depth-2-face)) 109 110 (fontified t) 110 111 (fontified t) 111 123 (fontified t) 123 124 (fontified t face (rainbow-delimiters-depth-2-face)) 124 127 (fontified t face font-lock-constant-face) 127 140 (fontified t) 140 141 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-3-face)) 141 158 (fontified t face font-lock-type-face) 158 159 (syntax-table (5 . 60) fontified t face (rainbow-delimiters-depth-3-face)) 159 160 (fontified t face (rainbow-delimiters-depth-3-face)) 160 161 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-3-face)) 161 162 (fontified t face (rainbow-delimiters-depth-2-face)) 162 164 (fontified t) 164 167 (fontified t) 167 173 (fontified t face font-lock-keyword-face) 173 180 (fontified t) 180 181 (fontified t face (rainbow-delimiters-depth-2-face)) 181 185 (fontified t face font-lock-constant-face) 185 198 (fontified t) 198 199 (fontified t face (rainbow-delimiters-depth-3-face)) 199 211 (fontified t) 211 246 (fontified t face font-lock-string-face) 246 250 (fontified t) 250 251 (fontified t face (rainbow-delimiters-depth-3-face)) 251 252 (fontified t face (rainbow-delimiters-depth-2-face)) 252 253 (fontified t)) . 2650) (undo-tree-id544 . -253) (undo-tree-id545 . -253) (undo-tree-id546 . -124) (undo-tree-id547 . -124) (undo-tree-id548 . -124) (undo-tree-id549 . -124) (undo-tree-id550 . -124) (undo-tree-id551 . -97) (undo-tree-id552 . -97) (undo-tree-id553 . -253) (undo-tree-id554 . -253) (undo-tree-id555 . -165) (undo-tree-id556 . -1) (undo-tree-id557 . -253) 2903) nil (25665 30086 434519 727000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2649) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) 2650) nil (25665 30086 434510 624000) 0 nil])
([nil nil ((2649 . 2650) (t 25665 30086 439489 954000)) nil (25665 30105 47419 347000) 0 nil])
([nil nil ((2238 . 2240) (t 25665 30105 50889 360000)) nil (25665 30242 964814 854000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2541 . 2542) (nil fontified nil 2532 . 2542) (nil fontified nil 2531 . 2532) (nil fontified nil 2514 . 2531) (nil fontified nil 2513 . 2514) (nil fontified nil 2327 . 2513) (nil fontified nil 2326 . 2327) (nil fontified nil 2265 . 2326) (nil fontified nil 2264 . 2265) (nil fontified nil 2240 . 2264) (2240 . 2542)) nil (25665 30242 964813 721000) 0 nil])
([nil nil ((#("
  mlir::PassPipelineRegistration<mlir::OpPassManager> inputAnalysisPipeline(
    \"input-analysis-pipeline\", \"Run input analysis pass\",
    [](mlir::OpPassManager &pm) {
      pm.addPass(mlir::createCanonicalizerPass());
      pm.addPass(mlir::createCSEPass());
      pm.addPass(std::make_unique<InputAnalysisPass>());
    });
" 0 1 (fontified t) 1 3 (fontified t) 3 7 (fontified t face font-lock-constant-face) 7 9 (fontified t) 9 33 (fontified t face font-lock-type-face) 33 34 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-2-face)) 34 38 (fontified t face font-lock-constant-face) 38 40 (fontified t) 40 53 (fontified t face font-lock-type-face) 53 54 (syntax-table (5 . 60) fontified t c-type c-decl-id-start face (rainbow-delimiters-depth-2-face)) 54 55 (fontified t) 55 76 (fontified t face font-lock-variable-name-face) 76 77 (fontified t face (rainbow-delimiters-depth-2-face)) 77 82 (fontified t) 82 107 (fontified t face font-lock-string-face) 107 109 (fontified t) 109 134 (fontified t face font-lock-string-face) 134 140 (fontified t) 140 141 (fontified t face (rainbow-delimiters-depth-3-face)) 141 142 (fontified t face (rainbow-delimiters-depth-3-face)) 142 143 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-3-face)) 143 147 (fontified t face font-lock-constant-face) 147 149 (fontified t) 149 162 (fontified t face font-lock-type-face) 162 164 (fontified t) 164 166 (fontified t face font-lock-variable-name-face) 166 167 (fontified t face (rainbow-delimiters-depth-3-face)) 167 168 (fontified t) 168 169 (fontified t face (rainbow-delimiters-depth-3-face)) 169 186 (fontified t) 186 187 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-4-face)) 187 191 (fontified t face font-lock-constant-face) 191 193 (fontified t) 193 216 (fontified t face font-lock-type-face) 216 217 (fontified t face (rainbow-delimiters-depth-5-face)) 217 218 (fontified t face (rainbow-delimiters-depth-5-face)) 218 219 (fontified t face (rainbow-delimiters-depth-4-face)) 219 237 (fontified t) 237 238 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-4-face)) 238 242 (fontified t face font-lock-constant-face) 242 244 (fontified t) 244 257 (fontified t face font-lock-type-face) 257 258 (fontified t face (rainbow-delimiters-depth-5-face)) 258 259 (fontified t face (rainbow-delimiters-depth-5-face)) 259 260 (fontified t face (rainbow-delimiters-depth-4-face)) 260 278 (fontified t) 278 279 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-4-face)) 279 282 (fontified t face font-lock-constant-face) 282 295 (fontified t) 295 296 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-5-face)) 296 313 (fontified t face font-lock-type-face) 313 314 (syntax-table (5 . 60) fontified t face (rainbow-delimiters-depth-5-face)) 314 315 (fontified t face (rainbow-delimiters-depth-5-face)) 315 316 (fontified t face (rainbow-delimiters-depth-5-face)) 316 317 (fontified t face (rainbow-delimiters-depth-4-face)) 317 323 (fontified t) 323 324 (fontified t face (rainbow-delimiters-depth-3-face)) 324 325 (fontified t face (rainbow-delimiters-depth-2-face)) 325 327 (fontified t)) . -2542) (undo-tree-id569 . -327) (undo-tree-id570 . -1) (undo-tree-id571 . -327) 2869) nil (25665 30242 964811 541000) 0 nil])
([nil nil ((2542 . 2545)) nil (25665 30242 964809 416000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2639 . 2640) (nil fontified nil 2545 . 2640) (2545 . 2640)) nil (25665 30242 964808 797000) 0 nil])
([nil nil ((#("
  return failed(mlir::MlirOptMain(argc, argv, \"MLIR input analysis pass driver\\n\"));" 0 1 (fontified t) 1 3 (fontified t) 3 9 (fontified t face font-lock-keyword-face) 9 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-2-face)) 17 21 (fontified t face font-lock-constant-face) 21 34 (fontified t) 34 35 (fontified t face (rainbow-delimiters-depth-3-face)) 35 47 (fontified t) 47 82 (fontified t face font-lock-string-face) 82 83 (fontified t face (rainbow-delimiters-depth-3-face)) 83 84 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face)) 84 85 (fontified t)) . -2640) (undo-tree-id559 . -84) (undo-tree-id560 . -84) (undo-tree-id561 . -84) (undo-tree-id562 . -85) (undo-tree-id563 . -84) (undo-tree-id564 . -85) (undo-tree-id565 . -85) (undo-tree-id566 . -85) (undo-tree-id567 . -1) (undo-tree-id568 . -1) 2725) nil (25665 30242 964803 100000) 0 nil])
([nil nil ((2236 . 2238) (#("  " 0 2 (fontified nil)) . 2236) (undo-tree-id573 . -2) (2235 . 2236) (t 25665 30242 979337 919000)) nil (25665 30305 141566 94000) 0 nil])
([nil nil ((2238 . 2239)) nil (25665 30305 141564 757000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2258 . 2259) (nil fontified nil 2235 . 2259) (2235 . 2259)) nil (25665 30305 141564 362000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2259) (#("
" 0 1 (fontified t)) . 2259) (undo-tree-id572 . -1)) nil (25665 30305 141563 571000) 0 nil])
([nil nil ((2235 . 2236)) nil (25665 30305 141553 795000) 0 nil])
([nil nil ((2236 . 2237)) nil (25665 30305 141549 601000) 0 nil])
([nil nil ((2570 . 2572) (#("  " 0 2 (fontified nil)) . 2569) (undo-tree-id588 . -2) (2568 . 2572) (t 25665 30305 153085 266000)) nil (25665 30334 785704 186000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2638 . 2639) (nil fontified nil 2569 . 2639) (2569 . 2639)) nil (25665 30334 785702 660000) 0 nil])
([nil nil ((#("
  
  mlir::MlirOptMain(argc, argv, \"MLIR input analysis pass driver\\n\", mlir::MlirOptMainConfig());
" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t) 4 6 (fontified t) 6 10 (fontified t face font-lock-constant-face) 10 23 (fontified t) 23 24 (fontified t face (rainbow-delimiters-depth-2-face)) 24 36 (fontified t) 36 71 (fontified t face font-lock-string-face) 71 73 (fontified t) 73 77 (fontified t face font-lock-constant-face) 77 96 (fontified t) 96 97 (fontified t face (rainbow-delimiters-depth-3-face)) 97 98 (fontified t face (rainbow-delimiters-depth-3-face)) 98 99 (fontified t face (rainbow-delimiters-depth-2-face)) 99 100 (fontified t) 100 101 (rear-nonsticky t fontified t)) . -2639) (undo-tree-id574 . -101) (undo-tree-id575 . -101) (undo-tree-id576 . -101) (undo-tree-id577 . -101) (undo-tree-id578 . -101) (undo-tree-id579 . -101) (undo-tree-id580 . -101) (undo-tree-id581 . -6) (undo-tree-id582 . -101) (undo-tree-id583 . -101) (undo-tree-id584 . 101) (undo-tree-id585 . -101) (undo-tree-id586 . -101) (undo-tree-id587 . -1) 2740) nil (25665 30334 785698 586000) 0 nil])
([nil nil ((#("  mlir::registerPass([](){ return std::make_unique<InputAnalysisPass>(); });

  mlir::OpPassManager pm;
  
  pm.addPass(std::function<void(mlir::OpPassManager&, const mlir::PassPipelineCLParser&)>([](mlir::OpPassManager &pm, const mlir::PassPipelineCLParser &parser) {
  pm.addPass(mlir::createCanonicalizerPass());
  pm.addPass(mlir::createCSEPass());
  pm.addPass(std::make_unique<InputAnalysisPass>());
}));


  mlir::MlirOptMain(argc, argv, \"MLIR input analysis pass driver\\n\");" 0 1 (c-is-sws t fontified t) 1 2 (c-is-sws t fontified t) 2 3 (c-is-sws t fontified t face font-lock-constant-face) 3 6 (fontified t face font-lock-constant-face) 6 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-depth-2-face)) 21 22 (fontified t face (rainbow-delimiters-depth-3-face)) 22 23 (fontified t face (rainbow-delimiters-depth-3-face)) 23 24 (fontified t face (rainbow-delimiters-depth-3-face)) 24 25 (fontified t face (rainbow-delimiters-depth-3-face)) 25 26 (fontified t face (rainbow-delimiters-depth-3-face)) 26 27 (fontified t) 27 33 (fontified t face font-lock-keyword-face) 33 34 (fontified t) 34 37 (fontified t face font-lock-constant-face) 37 50 (fontified t) 50 51 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-4-face)) 51 68 (fontified t face font-lock-type-face) 68 69 (syntax-table (5 . 60) fontified t face (rainbow-delimiters-depth-4-face)) 69 70 (fontified t face (rainbow-delimiters-depth-4-face)) 70 71 (fontified t face (rainbow-delimiters-depth-4-face)) 71 73 (fontified t) 73 74 (fontified t face (rainbow-delimiters-depth-3-face)) 74 75 (fontified t face (rainbow-delimiters-depth-2-face)) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 84 (fontified t face font-lock-constant-face) 84 86 (fontified t) 86 98 (fontified t face font-lock-type-face) 98 99 (fontified t c-type c-decl-id-start face font-lock-type-face) 99 100 (fontified t) 100 102 (fontified t face font-lock-variable-name-face) 102 103 (fontified t) 103 104 (fontified t rear-nonsticky t) 104 105 (fontified t) 105 106 (fontified t) 106 107 (fontified t) 107 108 (fontified t) 108 109 (fontified t) 109 119 (fontified t) 119 120 (fontified t face (rainbow-delimiters-depth-2-face)) 120 123 (fontified t face font-lock-constant-face) 123 133 (fontified t) 133 134 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-3-face)) 134 138 (fontified t face font-lock-type-face) 138 139 (fontified t face (rainbow-delimiters-depth-4-face)) 139 143 (fontified t face font-lock-constant-face) 143 145 (fontified t) 145 158 (fontified t face font-lock-type-face) 158 161 (fontified t) 161 166 (fontified t face font-lock-keyword-face) 166 167 (fontified t) 167 171 (fontified t face font-lock-constant-face) 171 173 (fontified t) 173 193 (fontified t face font-lock-type-face) 193 194 (fontified t) 194 195 (fontified t face (rainbow-delimiters-depth-4-face)) 195 196 (syntax-table (5 . 60) fontified t face (rainbow-delimiters-depth-3-face)) 196 197 (fontified t face (rainbow-delimiters-depth-3-face)) 197 198 (fontified t face (rainbow-delimiters-depth-4-face)) 198 199 (fontified t face (rainbow-delimiters-depth-4-face)) 199 200 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-4-face)) 200 204 (fontified t face font-lock-constant-face) 204 206 (fontified t) 206 219 (fontified t face font-lock-type-face) 219 221 (fontified t) 221 223 (fontified t face font-lock-variable-name-face) 223 224 (fontified t c-type c-decl-arg-start) 224 225 (fontified t) 225 230 (fontified t face font-lock-keyword-face) 230 231 (fontified t) 231 235 (fontified t face font-lock-constant-face) 235 237 (fontified t) 237 257 (fontified t face font-lock-type-face) 257 259 (fontified t) 259 265 (fontified t face font-lock-variable-name-face) 265 266 (fontified t face (rainbow-delimiters-depth-4-face)) 266 267 (fontified t) 267 268 (fontified t face (rainbow-delimiters-depth-4-face)) 268 269 (fontified t) 269 281 (fontified t) 281 282 (fontified t face (rainbow-delimiters-depth-5-face)) 282 286 (fontified t face font-lock-constant-face) 286 311 (fontified t) 311 312 (fontified t face (rainbow-delimiters-depth-6-face)) 312 313 (fontified t face (rainbow-delimiters-depth-6-face)) 313 314 (fontified t face (rainbow-delimiters-depth-5-face)) 314 328 (fontified t) 328 329 (fontified t face (rainbow-delimiters-depth-5-face)) 329 333 (fontified t face font-lock-constant-face) 333 348 (fontified t) 348 349 (fontified t face (rainbow-delimiters-depth-6-face)) 349 350 (fontified t face (rainbow-delimiters-depth-6-face)) 350 351 (fontified t face (rainbow-delimiters-depth-5-face)) 351 365 (fontified t) 365 366 (fontified t face (rainbow-delimiters-depth-5-face)) 366 369 (fontified t face font-lock-constant-face) 369 382 (fontified t) 382 383 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-6-face)) 383 400 (fontified t face font-lock-type-face) 400 401 (syntax-table (5 . 60) fontified t face (rainbow-delimiters-depth-6-face)) 401 402 (fontified t face (rainbow-delimiters-depth-6-face)) 402 403 (fontified t face (rainbow-delimiters-depth-6-face)) 403 404 (fontified t face (rainbow-delimiters-depth-5-face)) 404 406 (fontified t) 406 407 (fontified t face (rainbow-delimiters-depth-4-face)) 407 408 (fontified t face (rainbow-delimiters-depth-3-face)) 408 409 (fontified t face (rainbow-delimiters-depth-2-face)) 409 410 (fontified t) 410 411 (rear-nonsticky t fontified t) 411 412 (fontified t) 412 413 (fontified t) 413 415 (fontified t) 415 419 (fontified t face font-lock-constant-face) 419 432 (fontified t) 432 433 (fontified t face (rainbow-delimiters-depth-2-face)) 433 445 (fontified t) 445 480 (fontified t face font-lock-string-face) 480 481 (fontified t face (rainbow-delimiters-depth-2-face)) 481 482 (fontified t rear-nonsticky t)) . 2157) (undo-tree-id589 . -482) (undo-tree-id590 . -482) (undo-tree-id591 . -482) (undo-tree-id592 . -482) (undo-tree-id593 . -482) (undo-tree-id594 . -482) (undo-tree-id595 . -482) (undo-tree-id596 . -482) (undo-tree-id597 . -109) (undo-tree-id598 . -109) (undo-tree-id599 . -411) (undo-tree-id600 . -482) (undo-tree-id601 . -482) (undo-tree-id602 . -482) (undo-tree-id603 . -78) (undo-tree-id604 . -412) (undo-tree-id605 . -482) (undo-tree-id606 . -482) (undo-tree-id607 . -482) (undo-tree-id608 . -482) (t 25665 30334 795410 271000)) nil (25665 30367 902536 212000) 0 nil])
([nil nil ((apply -6 2014 2105 undo--wrap-and-run-primitive-undo 2014 2105 ((2052 . 2055) (2014 . 2017) 2049)) (t 25665 30367 907816 101000)) nil (25665 30423 121242 733000) 0 nil])
([nil nil ((2011 . 2015) (#("    " 0 4 (fontified nil)) . 2010) (undo-tree-id619 . -4) (2010 . 2015) (#("    " 0 4 (fontified nil)) . 2009) (undo-tree-id620 . -4) (2013 . 2014)) nil (25665 30423 121242 434000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2229 . 2230) (nil fontified nil 2061 . 2230) (nil fontified nil 2060 . 2061) (nil fontified nil 2043 . 2060) (nil fontified nil 2042 . 2043) (nil fontified nil 2015 . 2042) (2015 . 2230)) nil (25665 30423 121241 291000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2010) (undo-tree-id615 . -1) (undo-tree-id616 . 1) (undo-tree-id617 . -1) (undo-tree-id618 . -1)) nil (25665 30423 121240 481000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2010) (undo-tree-id609 . -4) (undo-tree-id610 . 4) (undo-tree-id611 . -4) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -4) 2014) nil (25665 30423 121235 750000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2009) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) 2010 (t 25665 30423 133819 582000)) nil (25665 30424 571825 947000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2060) (undo-tree-id665 . -1) 2061 (t 25665 30424 573876 329000)) nil (25665 30476 482302 425000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . 2057) (undo-tree-id661 . -3) (undo-tree-id662 . -3) (undo-tree-id663 . -3) (undo-tree-id664 . -3) 2060) nil (25665 30476 482301 562000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2056) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) 2057) nil (25665 30476 482299 892000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2103) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (#(" " 0 1 (fontified t)) . -2104) (undo-tree-id653 . -1) (#(" " 0 1 (fontified t)) . -2105) (undo-tree-id654 . -1) (#(" " 0 1 (fontified t)) . -2106) (undo-tree-id655 . -1) (#(" " 0 1 (fontified t)) . -2107) (undo-tree-id656 . -1) 2108) nil (25665 30476 482298 57000) 0 nil])
([nil nil ((2103 . 2104)) nil (25665 30476 482295 362000) 0 nil])
([nil nil ((apply -9 2010 2225 undo--wrap-and-run-primitive-undo 2010 2225 ((2216 . 2219) (2175 . 2178) (2012 . 2015) 2215))) nil (25665 30476 482294 968000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2009) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (#("  // PassPipelineRegistration<MyPipelineOptions>(\"example-pipeline\", \"Run an example pipeline.\", [](OpPassManager &pm, const MyPipelineOptions &pipelineOptions) {
  //     // Initialize the pass manager.
  //   });" 0 2 (fontified t c-in-sws t c-is-sws t) 2 3 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 5 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 5 29 (fontified t c-in-sws t face font-lock-comment-face) 29 30 (fontified t c-in-sws t face font-lock-comment-face) 30 47 (fontified t c-in-sws t face font-lock-comment-face) 47 48 (fontified t c-in-sws t face font-lock-comment-face) 48 49 (fontified t c-in-sws t face font-lock-comment-face) 49 67 (fontified t c-in-sws t face font-lock-comment-face) 67 69 (fontified t c-in-sws t face font-lock-comment-face) 69 95 (fontified t c-in-sws t face font-lock-comment-face) 95 96 (fontified t c-in-sws t face font-lock-comment-face) 96 97 (fontified t c-in-sws t face font-lock-comment-face) 97 98 (fontified t c-in-sws t face font-lock-comment-face) 98 99 (fontified t c-in-sws t face font-lock-comment-face) 99 100 (fontified t c-in-sws t face font-lock-comment-face) 100 113 (fontified t c-in-sws t face font-lock-comment-face) 113 115 (fontified t c-in-sws t face font-lock-comment-face) 115 117 (fontified t c-in-sws t face font-lock-comment-face) 117 118 (fontified t c-in-sws t face font-lock-comment-face) 118 119 (fontified t c-in-sws t face font-lock-comment-face) 119 124 (fontified t c-in-sws t face font-lock-comment-face) 124 125 (fontified t c-in-sws t face font-lock-comment-face) 125 142 (fontified t c-in-sws t face font-lock-comment-face) 142 144 (fontified t c-in-sws t face font-lock-comment-face) 144 159 (fontified t c-in-sws t face font-lock-comment-face) 159 160 (fontified t c-in-sws t face font-lock-comment-face) 160 161 (fontified t c-in-sws t face font-lock-comment-face) 161 162 (fontified t c-in-sws t face font-lock-comment-face) 162 163 (fontified t c-in-sws t face font-lock-comment-face) 163 165 (fontified t c-in-sws t) 165 168 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 168 172 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 172 173 (fontified t c-in-sws t face font-lock-comment-face) 173 175 (fontified t c-in-sws t face font-lock-comment-face) 175 204 (fontified t c-in-sws t face font-lock-comment-face) 204 206 (fontified t c-in-sws t) 206 209 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 209 211 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 211 212 (fontified t c-in-sws t face font-lock-comment-face) 212 213 (fontified t c-in-sws t face font-lock-comment-face) 213 214 (rear-nonsticky t fontified t c-in-sws t face font-lock-comment-face)) . 2010) (undo-tree-id638 . -214) (undo-tree-id639 . -214) (undo-tree-id640 . -10) (undo-tree-id641 . -49) (undo-tree-id642 . -49) (undo-tree-id643 . -12) (undo-tree-id644 . -10) (undo-tree-id645 . -214) (undo-tree-id646 . 70) (undo-tree-id647 . -159) (undo-tree-id648 . -214) (undo-tree-id649 . -12) (undo-tree-id650 . -13) 2020) nil (25665 30476 482291 789000) 0 nil])
([nil nil ((apply 6 2010 2094 undo--wrap-and-run-primitive-undo 2010 2094 ((#("// " 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -2045) (#("// " 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -2010) 2064)) (t 25665 30476 486060 977000)) nil (25665 30478 940319 244000) 0 nil])
([nil nil ((#("static " 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t)) . -2047) (undo-tree-id672 . -7) (undo-tree-id673 . -7) (undo-tree-id674 . -1) 2070 (t 25665 30478 936099 543000)) nil (25665 30572 47554 789000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2082) (undo-tree-id668 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -2083) (undo-tree-id669 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -2084) (undo-tree-id670 . -1) (#("g" 0 1 (fontified t face font-lock-variable-name-face)) . -2085) (undo-tree-id671 . -1) 2086) nil (25665 30572 47516 785000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -2085) (2085 . 2086) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -2085) (2085 . 2086) (2085 . 2086) (2045 . 2049) (#("  " 0 2 (fontified nil)) . 2045) (undo-tree-id666 . -2) (undo-tree-id667 . -2) (2082 . 2083)) nil (25665 30572 47511 788000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2047) (undo-tree-id675 . -1) (#(" " 0 1 (fontified t)) . -2048) (undo-tree-id676 . -1) 2049 (t 25665 30572 59399 308000)) nil (25665 30574 310704 475000) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t c-in-sws t fontified t)) . 29) (t 25665 30574 329540 193000)) nil (25665 30759 783543 456000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-is-sws t)) . 86)) nil (25665 30759 783542 972000) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t fontified t)) . 210)) nil (25665 30759 783542 655000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-is-sws t)) . 243)) nil (25665 30759 783542 193000) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t c-in-sws t fontified t)) . 306)) nil (25665 30759 783541 864000) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t c-in-sws t fontified t)) . 523)) nil (25665 30759 783541 128000) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t c-in-sws t fontified t)) . 568)) nil (25665 30759 783540 725000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-is-sws t)) . 824)) nil (25665 30759 783540 435000) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t c-in-sws t fontified t)) . 1017)) nil (25665 30759 783540 91000) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t c-in-sws t fontified t)) . 1199)) nil (25665 30759 783539 833000) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t fontified t)) . 1199)) nil (25665 30759 783539 300000) 0 nil])
([nil nil ((#("OperationPass<ModuleOp>" 0 13 (fontified t face font-lock-type-face) 13 14 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-3-face)) 14 22 (fontified t) 22 23 (syntax-table (5 . 60) fontified t face (rainbow-delimiters-depth-3-face))) . 1335) (undo-tree-id677 . -23) (undo-tree-id678 . -13) (undo-tree-id679 . -23) (undo-tree-id680 . -23) 1348) nil (25665 30759 783538 189000) 0 nil])
([nil nil ((1335 . 1341)) nil (25665 30759 783517 824000) 0 nil])
([nil nil ((#("namespace" 0 9 (c-in-sws t fontified t face font-lock-comment-face)) . 1388) (undo-tree-id701 . -9) (undo-tree-id702 . -9) (undo-tree-id703 . 9) (undo-tree-id704 . -9) (undo-tree-id705 . -9) (undo-tree-id706 . -9) (undo-tree-id707 . -9) (t 25665 30759 794354 115000)) nil (25665 30774 362582 662000) 0 nil])
([nil nil ((#(" " 0 1 (c-in-sws t c-is-sws t fontified t)) . -1383) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (#(" " 0 1 (c-in-sws t c-is-sws t fontified t)) . -1384) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (#("/" 0 1 (c-in-sws t c-is-sws t fontified t)) . -1385) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (#("/" 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1386) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (#(" " 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1387) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) 1388) nil (25665 30774 362576 667000) 0 nil])
([nil nil ((#("
namespace mlir {
void registerInputAnalysisPass() {
  PassRegistration<InputAnalysisPass>();
}
}  // namespace mlir

int main(int argc, char **argv) {

}
" 0 1 (fontified t) 1 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t) 11 14 (fontified t face font-lock-constant-face) 14 15 (fontified t c-type c-decl-id-start face font-lock-constant-face) 15 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-1-face)) 17 18 (fontified t) 18 21 (fontified t face font-lock-type-face) 21 22 (fontified t c-type c-decl-id-start face font-lock-type-face) 22 23 (fontified t) 23 29 (fontified t face font-lock-function-name-face) 29 30 (fontified t face font-lock-function-name-face) 30 37 (fontified t face font-lock-function-name-face) 37 48 (fontified t face font-lock-function-name-face) 48 49 (fontified t face (rainbow-delimiters-depth-2-face)) 49 50 (fontified t face (rainbow-delimiters-depth-2-face)) 50 51 (fontified t) 51 52 (fontified t face (rainbow-delimiters-depth-2-face)) 52 53 (fontified t) 53 55 (fontified t) 55 71 (fontified t) 71 72 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-3-face)) 72 83 (fontified t face font-lock-type-face) 83 89 (fontified t face font-lock-type-face) 89 90 (syntax-table (5 . 60) fontified t face (rainbow-delimiters-depth-3-face)) 90 91 (fontified t face (rainbow-delimiters-depth-3-face)) 91 92 (fontified t face (rainbow-delimiters-depth-3-face)) 92 93 (fontified t) 93 94 (fontified t) 94 95 (c-is-sws t fontified t face (rainbow-delimiters-depth-2-face)) 95 96 (fontified t) 96 97 (c-is-sws t fontified t face (rainbow-delimiters-depth-1-face)) 97 99 (c-in-sws t c-is-sws t fontified t) 99 100 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 100 102 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 102 116 (c-in-sws t fontified t face font-lock-comment-face) 116 117 (c-in-sws t fontified t face font-lock-comment-face) 117 118 (c-is-sws t fontified t) 118 119 (c-is-sws t fontified t face font-lock-type-face) 119 120 (fontified t face font-lock-type-face) 120 121 (fontified t c-type c-decl-id-start face font-lock-type-face) 121 122 (fontified t) 122 126 (fontified t face font-lock-function-name-face) 126 127 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-1-face)) 127 130 (fontified t face font-lock-type-face) 130 131 (fontified t) 131 135 (fontified t face font-lock-variable-name-face) 135 136 (fontified t c-type c-decl-arg-start) 136 137 (fontified t) 137 141 (fontified t face font-lock-type-face) 141 144 (fontified t) 144 148 (fontified t face font-lock-variable-name-face) 148 149 (fontified t face (rainbow-delimiters-depth-1-face)) 149 150 (fontified t) 150 151 (fontified t face (rainbow-delimiters-depth-1-face)) 151 152 (fontified t) 152 153 (fontified t) 153 154 (fontified t face (rainbow-delimiters-depth-1-face)) 154 155 (rear-nonsticky t fontified t)) . 1950) (undo-tree-id708 . -155) (undo-tree-id709 . -152) (undo-tree-id710 . -152) (undo-tree-id711 . -152) (undo-tree-id712 . -55) (undo-tree-id713 . -152) (undo-tree-id714 . -152) (undo-tree-id715 . -152) (undo-tree-id716 . -152) (undo-tree-id717 . -152) (undo-tree-id718 . -152) (undo-tree-id719 . -18) (undo-tree-id720 . -17) (undo-tree-id721 . -17) (undo-tree-id722 . -17) (undo-tree-id723 . -17) (undo-tree-id724 . -17) (undo-tree-id725 . -17) (undo-tree-id726 . 132) (undo-tree-id727 . -48) (undo-tree-id728 . -17) (undo-tree-id729 . 100) (undo-tree-id730 . -71) (undo-tree-id731 . -31) (undo-tree-id732 . -53) (undo-tree-id733 . -55) (undo-tree-id734 . 43) (undo-tree-id735 . -116) (undo-tree-id736 . -155) (undo-tree-id737 . -155) (undo-tree-id738 . -155) (t 25665 30774 374625 638000)) nil (25665 30787 519308 452000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2065 . 2066) (nil fontified nil 1989 . 2066) (nil fontified nil 1988 . 1989) (nil fontified nil 1974 . 1988) (nil fontified nil 1973 . 1974) (nil fontified nil 1950 . 1973) (1950 . 2066) (t 25665 30787 515926 123000)) nil (25665 30818 483215 103000) 0 nil])
([nil nil ((#("flag-name-to-invoke-pass-via-mlir-opt" 0 37 (fontified t face font-lock-string-face)) . 2001) (undo-tree-id749 . -37) (undo-tree-id750 . -37) (undo-tree-id751 . 8) (undo-tree-id752 . -33) (undo-tree-id753 . -37) 2006) nil (25665 30818 483214 429000) 0 nil])
([nil nil ((2001 . 2004)) nil (25665 30818 483212 709000) 0 nil])
([nil nil ((2004 . 2015)) nil (25665 30818 483212 529000) 0 nil])
([nil nil ((#("Pass description here" 0 21 (fontified t face font-lock-string-face)) . -2019) (undo-tree-id745 . -16) (undo-tree-id746 . -21) (undo-tree-id747 . -21) (undo-tree-id748 . -1) 2035) nil (25665 30818 483212 67000) 0 nil])
([nil nil ((2019 . 2025)) nil (25665 30818 483210 245000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1996) (undo-tree-id742 . -4) (undo-tree-id743 . -4) (undo-tree-id744 . -4) 2000) nil (25665 30818 483209 776000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1995) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) 1996) nil (25665 30818 483208 131000) 0 nil])
([nil nil ((2023 . 2024) 1995) nil (25665 30818 483192 547000) 0 nil])
([nil nil ((1344 . 1345) (t 25665 30818 487818 162000)) nil (25665 30870 722808 575000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1344) (undo-tree-id754 . -1) 1345) nil (25665 30870 722807 142000) 0 nil])
([nil nil ((1335 . 1339)) nil (25665 30870 722792 942000) 0 nil])
([nil nil ((1344 . 1345) (1270 . 1274) (1339 . 1340)) nil (25665 30870 722792 141000) 0 nil])
([nil nil ((1345 . 1349)) nil (25665 30870 722791 288000) 0 nil])
([nil nil ((1349 . 1351)) nil (25665 31279 678406 274000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1270) (undo-tree-id852 . -1) (#(" " 0 1 (fontified t)) . 1270) (#(" " 0 1 (fontified t)) . 1270) (#(" " 0 1 (fontified t)) . 1270)) nil (25665 31294 18516 788000) 0 nil] [nil nil ((#("    " 0 4 (fontified t)) . 1270) (undo-tree-id824 . -4) (undo-tree-id825 . -4) (undo-tree-id826 . -4) (undo-tree-id827 . -4) (t 25665 31010 5352 704000)) ((1270 . 1274)) (25665 31279 65992 169000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . -1360) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (#("  void runOnOperation() override;" 0 2 (fontified t) 2 5 (fontified t face font-lock-type-face) 5 6 (fontified t c-type c-decl-id-start face font-lock-type-face) 6 7 (fontified t) 7 21 (fontified t face font-lock-function-name-face) 21 22 (fontified t face (rainbow-delimiters-depth-3-face)) 22 23 (fontified t face (rainbow-delimiters-depth-3-face)) 23 24 (fontified t) 24 32 (fontified t face font-lock-keyword-face) 32 33 (fontified t)) . 1361) (undo-tree-id815 . -32) (undo-tree-id816 . -32) (undo-tree-id817 . -32) (undo-tree-id818 . -32) (undo-tree-id819 . -32) (undo-tree-id820 . -2) 1393) ((1360 . 1394)) (25665 31005 90284 37000) 0 nil] [nil nil ((#(";" 0 1 (fontified t)) . 1393) (t 25665 30870 729702 985000)) ((1393 . 1394)) (25665 30999 132398 675000) 0 nil])
([nil nil ((1357 . 1359)) nil (25665 31294 18515 427000) 0 nil])
([nil nil ((#("
void InputAnalysisPass::runOnOperation() {
  auto module = getOperation();
  module.walk([&](func::FuncOp func) {
    for (auto &block : func) {
      for (auto &op : block) {
        if (op.getName().getStringRef() == \"scf.for\") {
          auto forOp = dyn_cast<scf::ForOp>(op);
          auto upperBound = forOp.getUpperBound();

          if (mlir::isa<mlir::BlockArgument>(upperBound)) {
            llvm::outs() << \"User input \" << upperBound << \" affects loop upper bound in function \" << func.getName() << \".\\n\";
          }
        }
      }
    }
  });
}" 0 1 (fontified t) 1 2 (fontified t face font-lock-type-face) 2 4 (fontified t face font-lock-type-face) 4 5 (fontified t c-type c-decl-id-start face font-lock-type-face) 5 6 (fontified t) 6 23 (fontified t face font-lock-constant-face) 23 25 (fontified t) 25 39 (fontified t face font-lock-function-name-face) 39 40 (fontified t face (rainbow-delimiters-depth-1-face)) 40 41 (fontified t face (rainbow-delimiters-depth-1-face)) 41 42 (fontified t) 42 43 (fontified t face (rainbow-delimiters-depth-1-face)) 43 44 (fontified t) 44 46 (fontified t) 46 49 (fontified t face font-lock-keyword-face) 49 50 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 50 51 (fontified t) 51 57 (fontified t face font-lock-variable-name-face) 57 72 (fontified t) 72 73 (fontified t face (rainbow-delimiters-depth-2-face)) 73 74 (fontified t face (rainbow-delimiters-depth-2-face)) 74 76 (fontified t) 76 78 (fontified t) 78 89 (fontified t) 89 90 (fontified t face (rainbow-delimiters-depth-2-face)) 90 91 (fontified t face (rainbow-delimiters-depth-3-face)) 91 92 (fontified t) 92 93 (fontified t face (rainbow-delimiters-depth-3-face)) 93 94 (fontified t c-type c-decl-arg-start face (rainbow-delimiters-depth-3-face)) 94 95 (fontified t face font-lock-constant-face) 95 96 (fontified t face font-lock-constant-face) 96 97 (fontified t face font-lock-constant-face) 97 98 (fontified t face font-lock-constant-face) 98 100 (fontified t) 100 106 (fontified t face font-lock-type-face) 106 107 (fontified t) 107 111 (fontified t face font-lock-variable-name-face) 111 112 (fontified t face (rainbow-delimiters-depth-3-face)) 112 113 (fontified t) 113 114 (fontified t face (rainbow-delimiters-depth-3-face)) 114 115 (fontified t) 115 119 (fontified t) 119 122 (fontified t face font-lock-keyword-face) 122 123 (fontified t) 123 124 (fontified t face (rainbow-delimiters-depth-4-face)) 124 127 (fontified t face font-lock-keyword-face) 127 128 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 128 130 (fontified t) 130 135 (fontified t face font-lock-variable-name-face) 135 142 (fontified t) 142 143 (fontified t face (rainbow-delimiters-depth-4-face)) 143 144 (fontified t) 144 145 (fontified t face (rainbow-delimiters-depth-4-face)) 145 146 (fontified t) 146 152 (fontified t) 152 155 (fontified t face font-lock-keyword-face) 155 156 (fontified t) 156 157 (fontified t face (rainbow-delimiters-depth-5-face)) 157 160 (fontified t face font-lock-keyword-face) 160 161 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 161 163 (fontified t) 163 165 (fontified t face font-lock-variable-name-face) 165 173 (fontified t) 173 174 (fontified t face (rainbow-delimiters-depth-5-face)) 174 175 (fontified t) 175 176 (fontified t face (rainbow-delimiters-depth-5-face)) 176 177 (fontified t) 177 185 (fontified t) 185 187 (fontified t face font-lock-keyword-face) 187 188 (fontified t) 188 189 (fontified t face (rainbow-delimiters-depth-6-face)) 189 197 (fontified t) 197 199 (fontified t) 199 200 (fontified t face (rainbow-delimiters-depth-7-face)) 200 201 (fontified t face (rainbow-delimiters-depth-7-face)) 201 214 (fontified t) 214 215 (fontified t face (rainbow-delimiters-depth-7-face)) 215 216 (fontified t face (rainbow-delimiters-depth-7-face)) 216 220 (fontified t) 220 229 (fontified t face font-lock-string-face) 229 230 (fontified t face (rainbow-delimiters-depth-6-face)) 230 231 (fontified t) 231 232 (fontified t face (rainbow-delimiters-depth-6-face)) 232 233 (fontified t) 233 243 (fontified t) 243 246 (fontified t face font-lock-keyword-face) 246 247 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 247 248 (fontified t) 248 253 (fontified t face font-lock-variable-name-face) 253 264 (fontified t) 264 265 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-7-face)) 265 268 (fontified t face font-lock-constant-face) 268 275 (fontified t) 275 276 (syntax-table (5 . 60) fontified t face (rainbow-delimiters-depth-7-face)) 276 277 (fontified t face (rainbow-delimiters-depth-7-face)) 277 279 (fontified t) 279 280 (fontified t face (rainbow-delimiters-depth-7-face)) 280 281 (fontified t) 281 282 (fontified t) 282 292 (fontified t) 292 295 (fontified t face font-lock-keyword-face) 295 296 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 296 297 (fontified t) 297 307 (fontified t face font-lock-variable-name-face) 307 316 (fontified t) 316 317 (fontified t) 317 318 (fontified t) 318 319 (fontified t) 319 323 (fontified t) 323 324 (fontified t) 324 325 (fontified t) 325 329 (fontified t) 329 330 (fontified t face (rainbow-delimiters-depth-7-face)) 330 331 (fontified t face (rainbow-delimiters-depth-7-face)) 331 332 (fontified t) 332 333 (fontified t) 333 334 (fontified t) 334 344 (fontified t) 344 345 (fontified t face font-lock-keyword-face) 345 346 (fontified t face font-lock-keyword-face) 346 347 (fontified t) 347 348 (fontified t face (rainbow-delimiters-depth-7-face)) 348 352 (fontified t face font-lock-constant-face) 352 357 (fontified t) 357 358 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-8-face)) 358 362 (fontified t face font-lock-constant-face) 362 370 (fontified t) 370 371 (fontified t) 371 377 (fontified t) 377 378 (syntax-table (5 . 60) fontified t face (rainbow-delimiters-depth-8-face)) 378 379 (fontified t face (rainbow-delimiters-depth-8-face)) 379 385 (fontified t) 385 389 (fontified t) 389 390 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-8-face)) 390 391 (fontified t face (rainbow-delimiters-depth-7-face)) 391 392 (fontified t) 392 393 (fontified t face (rainbow-delimiters-depth-7-face)) 393 394 (fontified t) 394 406 (fontified t) 406 407 (fontified t face font-lock-constant-face) 407 410 (fontified t face font-lock-constant-face) 410 416 (fontified t) 416 417 (fontified t face (rainbow-delimiters-depth-8-face)) 417 418 (fontified t face (rainbow-delimiters-depth-8-face)) 418 422 (fontified t) 422 435 (fontified t face font-lock-string-face) 435 440 (fontified t) 440 441 (fontified t) 441 442 (fontified t) 442 443 (fontified t) 443 444 (fontified t) 444 445 (fontified t) 445 446 (fontified t) 446 447 (fontified t) 447 448 (fontified t) 448 449 (fontified t) 449 453 (fontified t) 453 454 (fontified t face font-lock-string-face) 454 479 (fontified t face font-lock-string-face) 479 493 (fontified t face font-lock-string-face) 493 494 (fontified t) 494 509 (fontified t) 509 510 (fontified t face (rainbow-delimiters-depth-8-face)) 510 511 (fontified t face (rainbow-delimiters-depth-8-face)) 511 515 (fontified t) 515 520 (fontified t face font-lock-string-face) 520 522 (fontified t) 522 532 (fontified t) 532 533 (fontified t face (rainbow-delimiters-depth-7-face)) 533 534 (fontified t) 534 542 (fontified t) 542 543 (fontified t face (rainbow-delimiters-depth-6-face)) 543 544 (fontified t) 544 550 (fontified t) 550 551 (fontified t face (rainbow-delimiters-depth-5-face)) 551 552 (fontified t) 552 556 (fontified t) 556 557 (fontified t face (rainbow-delimiters-depth-4-face)) 557 558 (fontified t) 558 560 (fontified t) 560 561 (fontified t face (rainbow-delimiters-depth-3-face)) 561 562 (fontified t face (rainbow-delimiters-depth-2-face)) 562 564 (fontified t) 564 565 (fontified t face (rainbow-delimiters-depth-1-face))) . -1396) (undo-tree-id828 . -565) (undo-tree-id829 . -334) (undo-tree-id830 . -44) (undo-tree-id831 . -333) (undo-tree-id833 . -329) (undo-tree-id834 . -565) (undo-tree-id836 . -1) (undo-tree-id837 . 1) (undo-tree-id838 . -565) (undo-tree-id839 . 523) (undo-tree-id840 . -43) 1961 (t 25665 31163 461958 701000)) ((1396 . 1961) (t 25665 31227 525436 422000)) (25665 31278 645282 165000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1269) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (#("    struct InputAnalysisPass : public PassWrapper<InputAnalysisPass, mlir::func::FuncOp> {" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t face font-lock-keyword-face c-type c-decl-type-start) 10 11 (fontified t) 11 28 (fontified t face font-lock-type-face) 28 31 (fontified t) 31 37 (fontified t face font-lock-keyword-face) 37 38 (fontified t) 38 49 (fontified t face font-lock-type-face) 49 50 (fontified t syntax-table (4 . 62) face (rainbow-delimiters-depth-2-face)) 50 67 (fontified t face font-lock-type-face) 67 68 (fontified t c-type c-<>-arg-sep) 68 69 (fontified t) 69 70 (fontified t face font-lock-constant-face) 70 71 (fontified t face font-lock-constant-face) 71 72 (fontified t face font-lock-constant-face) 72 73 (fontified t face font-lock-constant-face) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t face font-lock-constant-face) 76 77 (fontified t face font-lock-constant-face) 77 78 (fontified t face font-lock-constant-face) 78 79 (fontified t face font-lock-constant-face) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t face font-lock-type-face) 82 83 (fontified t face font-lock-type-face) 83 84 (fontified t face font-lock-type-face) 84 85 (fontified t face font-lock-type-face) 85 86 (fontified t face font-lock-type-face) 86 87 (fontified t face font-lock-type-face) 87 88 (fontified t syntax-table (5 . 60) face (rainbow-delimiters-depth-2-face)) 88 89 (fontified t) 89 90 (fontified t face (rainbow-delimiters-depth-2-face))) . 1270) (undo-tree-id800 . -90) (undo-tree-id801 . -90) (undo-tree-id802 . -69) (undo-tree-id803 . -90) (undo-tree-id804 . -90) (undo-tree-id805 . -90) (undo-tree-id806 . -90) (undo-tree-id807 . -90) 1360) ((1269 . 1360)) (25665 31004 486111 900000) 0 nil])
([nil nil ((1393 . 1394)) ((#(" " 0 1 (fontified t)) . 1393) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1)) (25665 30998 559798 356000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1730) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) 1731) nil (25665 31294 18514 256000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1389) (undo-tree-id843 . -1) 1390 (t 25665 31227 525436 422000)) ((1389 . 1390)) (25665 31278 232339 12000) 0 nil])
([nil nil ((1269 . 1270)) ((#("4" 0 1 (fontified t)) . 1269) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1)) (25665 31002 3082 17000) 0 nil])
([nil nil ((1361 . 1369) (#("  " 0 2 (fontified nil)) . 1361) (1394 . 1396)) ((#("{}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face)) 1 2 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1394) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (1361 . 1363) (#("        " 0 8 (fontified t)) . 1361)) (25665 30997 549487 759000) 0 nil])
([nil nil ((1963 . 1964)) nil (25665 31294 18496 674000) 0 nil])
([nil nil ((1389 . 1390)) ((#(" " 0 1 (fontified t)) . 1389) (undo-tree-id848 . -1)) (25665 31277 795178 829000) 0 nil])
nil
([nil nil ((1402 . 1414) (1401 . 1411)) ((#("

        " 0 1 (fontified t) 1 2 (fontified nil) 2 10 (fontified t)) . 1401) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (#("            " 0 12 (fontified t)) . 1402) (undo-tree-id776 . -12) (undo-tree-id777 . -12) (undo-tree-id778 . -12) (undo-tree-id779 . -12) (undo-tree-id780 . -1)) (25665 30997 102739 251000) 0 nil])
([nil nil ((1963 . 1964) (t 25665 31294 31798 576000)) nil (25665 31306 903273 579000) 0 nil])
([nil nil ((1357 . 1361) (#("  " 0 2 (fontified nil)) . 1357) (undo-tree-id841 . -2) (undo-tree-id842 . -2) (1390 . 1392)) ((#("{}" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face)) 1 2 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1390) (undo-tree-id847 . -1) (1357 . 1359) (#("    " 0 4 (fontified t)) . 1357)) (25665 31277 361110 30000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1932 . 1933) (nil fontified nil 1932 . 1933) (nil fontified nil 1931 . 1932) (nil fontified nil 1930 . 1931) (nil fontified nil 1927 . 1930) (nil fontified nil 1926 . 1927) (nil fontified nil 1921 . 1926) (nil fontified nil 1920 . 1921) (nil fontified nil 1913 . 1920) (nil fontified nil 1912 . 1913) (nil fontified nil 1904 . 1912) (nil fontified nil 1903 . 1904) (nil fontified nil 1902 . 1903) (nil fontified nil 1892 . 1902) (nil fontified nil 1890 . 1892) (nil fontified nil 1885 . 1890) (nil fontified nil 1881 . 1885) (nil fontified nil 1880 . 1881) (nil fontified nil 1879 . 1880) (nil fontified nil 1864 . 1879) (nil fontified nil 1863 . 1864) (nil fontified nil 1849 . 1863) (nil fontified nil 1824 . 1849) (nil fontified nil 1823 . 1824) (nil fontified nil 1819 . 1823) (nil fontified nil 1818 . 1819) (nil fontified nil 1817 . 1818) (nil fontified nil 1816 . 1817) (nil fontified nil 1815 . 1816) (nil fontified nil 1814 . 1815) (nil fontified nil 1813 . 1814) (nil fontified nil 1812 . 1813) (nil fontified nil 1811 . 1812) (nil fontified nil 1810 . 1811) (nil fontified nil 1805 . 1810) (nil fontified nil 1792 . 1805) (nil fontified nil 1788 . 1792) (nil fontified nil 1787 . 1788) (nil fontified nil 1786 . 1787) (nil fontified nil 1780 . 1786) (nil fontified nil 1777 . 1780) (nil fontified nil 1776 . 1777) (nil fontified nil 1764 . 1776) (nil fontified nil 1763 . 1764) (nil fontified nil 1762 . 1763) (nil fontified nil 1761 . 1762) (nil fontified nil 1760 . 1761) (nil fontified nil 1759 . 1760) (nil fontified nil 1755 . 1759) (nil fontified nil 1749 . 1755) (nil fontified nil 1748 . 1749) (nil fontified nil 1747 . 1748) (nil fontified nil 1741 . 1747) (nil fontified nil 1740 . 1741) (nil fontified nil 1732 . 1740) (nil fontified nil 1728 . 1732) (nil fontified nil 1727 . 1728) (nil fontified nil 1722 . 1727) (nil fontified nil 1718 . 1722) (nil fontified nil 1717 . 1718) (nil fontified nil 1716 . 1717) (nil fontified nil 1715 . 1716) (nil fontified nil 1714 . 1715) (nil fontified nil 1704 . 1714) (nil fontified nil 1703 . 1704) (nil fontified nil 1702 . 1703) (nil fontified nil 1701 . 1702) (nil fontified nil 1700 . 1701) (nil fontified nil 1699 . 1700) (nil fontified nil 1695 . 1699) (nil fontified nil 1694 . 1695) (nil fontified nil 1693 . 1694) (nil fontified nil 1689 . 1693) (nil fontified nil 1688 . 1689) (nil fontified nil 1687 . 1688) (nil fontified nil 1686 . 1687) (nil fontified nil 1677 . 1686) (nil fontified nil 1667 . 1677) (nil fontified nil 1666 . 1667) (nil fontified nil 1665 . 1666) (nil fontified nil 1662 . 1665) (nil fontified nil 1652 . 1662) (nil fontified nil 1651 . 1652) (nil fontified nil 1650 . 1651) (nil fontified nil 1649 . 1650) (nil fontified nil 1647 . 1649) (nil fontified nil 1646 . 1647) (nil fontified nil 1645 . 1646) (nil fontified nil 1638 . 1645) (nil fontified nil 1635 . 1638) (nil fontified nil 1634 . 1635) (nil fontified nil 1623 . 1634) (nil fontified nil 1618 . 1623) (nil fontified nil 1617 . 1618) (nil fontified nil 1616 . 1617) (nil fontified nil 1613 . 1616) (nil fontified nil 1603 . 1613) (nil fontified nil 1602 . 1603) (nil fontified nil 1601 . 1602) (nil fontified nil 1600 . 1601) (nil fontified nil 1599 . 1600) (nil fontified nil 1590 . 1599) (nil fontified nil 1586 . 1590) (nil fontified nil 1585 . 1586) (nil fontified nil 1584 . 1585) (nil fontified nil 1571 . 1584) (nil fontified nil 1570 . 1571) (nil fontified nil 1569 . 1570) (nil fontified nil 1567 . 1569) (nil fontified nil 1559 . 1567) (nil fontified nil 1558 . 1559) (nil fontified nil 1557 . 1558) (nil fontified nil 1555 . 1557) (nil fontified nil 1546 . 1555) (nil fontified nil 1545 . 1546) (nil fontified nil 1544 . 1545) (nil fontified nil 1543 . 1544) (nil fontified nil 1535 . 1543) (nil fontified nil 1533 . 1535) (nil fontified nil 1531 . 1533) (nil fontified nil 1530 . 1531) (nil fontified nil 1527 . 1530) (nil fontified nil 1526 . 1527) (nil fontified nil 1525 . 1526) (nil fontified nil 1522 . 1525) (nil fontified nil 1515 . 1522) (nil fontified nil 1514 . 1515) (nil fontified nil 1513 . 1514) (nil fontified nil 1512 . 1513) (nil fontified nil 1505 . 1512) (nil fontified nil 1500 . 1505) (nil fontified nil 1498 . 1500) (nil fontified nil 1497 . 1498) (nil fontified nil 1494 . 1497) (nil fontified nil 1493 . 1494) (nil fontified nil 1492 . 1493) (nil fontified nil 1489 . 1492) (nil fontified nil 1485 . 1489) (nil fontified nil 1484 . 1485) (nil fontified nil 1483 . 1484) (nil fontified nil 1482 . 1483) (nil fontified nil 1481 . 1482) (nil fontified nil 1477 . 1481) (nil fontified nil 1476 . 1477) (nil fontified nil 1470 . 1476) (nil fontified nil 1468 . 1470) (nil fontified nil 1467 . 1468) (nil fontified nil 1466 . 1467) (nil fontified nil 1465 . 1466) (nil fontified nil 1464 . 1465) (nil fontified nil 1463 . 1464) (nil fontified nil 1462 . 1463) (nil fontified nil 1461 . 1462) (nil fontified nil 1460 . 1461) (nil fontified nil 1459 . 1460) (nil fontified nil 1446 . 1459) (nil fontified nil 1444 . 1446) (nil fontified nil 1443 . 1444) (nil fontified nil 1442 . 1443) (nil fontified nil 1427 . 1442) (nil fontified nil 1421 . 1427) (nil fontified nil 1420 . 1421) (nil fontified nil 1419 . 1420) (nil fontified nil 1416 . 1419) (nil fontified nil 1414 . 1416) (1414 . 1933)) ((#("  auto module = getOperation();
  module.walk([&](func::FuncOp func) {
    for (auto &block : func) {
      for (auto &op : block) {
        if (op.getName().getStringRef() == \"scf.for\") {
          auto forOp = dyn_cast<scf::ForOp>(op);
          auto upperBound = forOp.getUpperBound();

          if (mlir::isa<mlir::BlockArgument>(upperBound)) {
            llvm::outs() << \"User input \" << upperBound << \" affects loop upper bound in function \" << func.getName() << \".\\n\";
          }
        }
      }
    }
  });" 0 2 (fontified nil) 2 5 (fontified nil face font-lock-keyword-face) 5 6 (fontified nil face font-lock-keyword-face c-type c-decl-id-start) 6 7 (fontified nil) 7 13 (fontified nil face font-lock-variable-name-face) 13 28 (fontified nil) 28 29 (fontified nil face (rainbow-delimiters-depth-4-face)) 29 30 (fontified nil face (rainbow-delimiters-depth-4-face)) 30 32 (fontified nil) 32 34 (fontified nil) 34 45 (fontified nil) 45 46 (fontified nil face (rainbow-delimiters-depth-4-face)) 46 47 (fontified nil face (rainbow-delimiters-depth-5-face)) 47 48 (fontified nil) 48 49 (fontified nil face (rainbow-delimiters-depth-5-face)) 49 50 (fontified nil c-type c-decl-arg-start face (rainbow-delimiters-depth-5-face)) 50 51 (fontified nil face font-lock-constant-face) 51 52 (fontified nil face font-lock-constant-face) 52 53 (fontified nil face font-lock-constant-face) 53 54 (fontified nil face font-lock-constant-face) 54 56 (fontified nil) 56 62 (fontified nil face font-lock-type-face) 62 63 (fontified nil) 63 67 (fontified nil face font-lock-variable-name-face) 67 68 (fontified nil face (rainbow-delimiters-depth-5-face)) 68 69 (fontified nil) 69 70 (fontified nil face (rainbow-delimiters-depth-5-face)) 70 71 (fontified nil) 71 75 (fontified nil) 75 78 (fontified nil face font-lock-keyword-face) 78 79 (fontified nil) 79 80 (fontified nil face (rainbow-delimiters-depth-6-face)) 80 83 (fontified nil face font-lock-keyword-face) 83 84 (fontified nil face font-lock-keyword-face c-type c-decl-id-start) 84 86 (fontified nil) 86 91 (fontified nil face font-lock-variable-name-face) 91 98 (fontified nil) 98 99 (fontified nil face (rainbow-delimiters-depth-6-face)) 99 100 (fontified nil) 100 101 (fontified nil face (rainbow-delimiters-depth-6-face)) 101 102 (fontified nil) 102 108 (fontified nil) 108 111 (fontified nil face font-lock-keyword-face) 111 112 (fontified nil) 112 113 (fontified nil face (rainbow-delimiters-depth-7-face)) 113 116 (fontified nil face font-lock-keyword-face) 116 117 (fontified nil face font-lock-keyword-face c-type c-decl-id-start) 117 119 (fontified nil) 119 121 (fontified nil face font-lock-variable-name-face) 121 129 (fontified nil) 129 130 (fontified nil face (rainbow-delimiters-depth-7-face)) 130 131 (fontified nil) 131 132 (fontified nil face (rainbow-delimiters-depth-7-face)) 132 133 (fontified nil) 133 141 (fontified nil) 141 143 (fontified nil face font-lock-keyword-face) 143 144 (fontified nil) 144 145 (fontified nil face (rainbow-delimiters-depth-8-face)) 145 153 (fontified nil) 153 155 (fontified nil) 155 156 (fontified nil face (rainbow-delimiters-depth-9-face)) 156 157 (fontified nil face (rainbow-delimiters-depth-9-face)) 157 170 (fontified nil) 170 171 (fontified nil face (rainbow-delimiters-depth-9-face)) 171 172 (fontified nil face (rainbow-delimiters-depth-9-face)) 172 176 (fontified nil) 176 185 (fontified nil face font-lock-string-face) 185 186 (fontified nil face (rainbow-delimiters-depth-8-face)) 186 187 (fontified nil) 187 188 (fontified nil face (rainbow-delimiters-depth-8-face)) 188 189 (fontified nil) 189 199 (fontified nil) 199 202 (fontified nil face font-lock-keyword-face) 202 203 (fontified nil face font-lock-keyword-face c-type c-decl-id-start) 203 204 (fontified nil) 204 209 (fontified nil face font-lock-variable-name-face) 209 220 (fontified nil) 220 221 (syntax-table (4 . 62) fontified nil face (rainbow-delimiters-depth-9-face)) 221 224 (fontified nil face font-lock-constant-face) 224 231 (fontified nil) 231 232 (syntax-table (5 . 60) fontified nil face (rainbow-delimiters-depth-9-face)) 232 233 (fontified nil face (rainbow-delimiters-depth-9-face)) 233 235 (fontified nil) 235 236 (fontified nil face (rainbow-delimiters-depth-9-face)) 236 237 (fontified nil) 237 238 (fontified nil) 238 248 (fontified nil) 248 251 (fontified nil face font-lock-keyword-face) 251 252 (fontified nil face font-lock-keyword-face c-type c-decl-id-start) 252 253 (fontified nil) 253 263 (fontified nil face font-lock-variable-name-face) 263 272 (fontified nil) 272 273 (fontified nil) 273 274 (fontified nil) 274 275 (fontified nil) 275 279 (fontified nil) 279 280 (fontified nil) 280 281 (fontified nil) 281 285 (fontified nil) 285 286 (fontified nil face (rainbow-delimiters-depth-9-face)) 286 287 (fontified nil face (rainbow-delimiters-depth-9-face)) 287 288 (fontified nil) 288 289 (fontified nil) 289 290 (fontified nil) 290 300 (fontified nil) 300 301 (fontified nil face font-lock-keyword-face) 301 302 (fontified nil face font-lock-keyword-face) 302 303 (fontified nil) 303 304 (fontified nil face (rainbow-delimiters-depth-9-face)) 304 308 (fontified nil face font-lock-constant-face) 308 313 (fontified nil) 313 314 (syntax-table (4 . 62) fontified nil face (rainbow-delimiters-depth-1-face)) 314 318 (fontified nil face font-lock-constant-face) 318 326 (fontified nil) 326 327 (fontified nil) 327 333 (fontified nil) 333 334 (syntax-table (5 . 60) fontified nil face (rainbow-delimiters-depth-1-face)) 334 335 (fontified nil face (rainbow-delimiters-depth-1-face)) 335 341 (fontified nil) 341 345 (fontified nil) 345 346 (rear-nonsticky t fontified nil face (rainbow-delimiters-depth-1-face)) 346 347 (fontified nil face (rainbow-delimiters-depth-9-face)) 347 348 (fontified nil) 348 349 (fontified nil face (rainbow-delimiters-depth-9-face)) 349 350 (fontified nil) 350 362 (fontified nil) 362 363 (fontified nil face font-lock-constant-face) 363 366 (fontified nil face font-lock-constant-face) 366 372 (fontified nil) 372 373 (fontified nil face (rainbow-delimiters-depth-1-face)) 373 374 (fontified nil face (rainbow-delimiters-depth-1-face)) 374 378 (fontified nil) 378 391 (fontified nil face font-lock-string-face) 391 396 (fontified nil) 396 397 (fontified nil) 397 398 (fontified nil) 398 399 (fontified nil) 399 400 (fontified nil) 400 401 (fontified nil) 401 402 (fontified nil) 402 403 (fontified nil) 403 404 (fontified nil) 404 405 (fontified nil) 405 409 (fontified nil) 409 410 (fontified nil face font-lock-string-face) 410 435 (fontified nil face font-lock-string-face) 435 449 (fontified nil face font-lock-string-face) 449 450 (fontified nil) 450 465 (fontified nil) 465 466 (fontified nil face (rainbow-delimiters-depth-1-face)) 466 467 (fontified nil face (rainbow-delimiters-depth-1-face)) 467 471 (fontified nil) 471 476 (fontified nil face font-lock-string-face) 476 478 (fontified nil) 478 488 (fontified nil) 488 489 (fontified nil face (rainbow-delimiters-depth-9-face)) 489 490 (fontified nil) 490 498 (fontified nil) 498 499 (fontified nil face (rainbow-delimiters-depth-8-face)) 499 500 (fontified nil) 500 506 (fontified nil) 506 507 (fontified nil face (rainbow-delimiters-depth-7-face)) 507 508 (fontified nil) 508 512 (fontified nil) 512 513 (fontified nil face (rainbow-delimiters-depth-6-face)) 513 514 (fontified nil) 514 516 (fontified nil) 516 517 (fontified nil face (rainbow-delimiters-depth-5-face)) 517 518 (fontified nil face (rainbow-delimiters-depth-4-face)) 518 519 (rear-nonsticky nil fontified nil)) . 1414) (undo-tree-id767 . -519) (nil rear-nonsticky t 1932 . 1933)) (25665 30996 724482 615000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1963) (undo-tree-id856 . -1) 1964) nil (25665 31306 903273 56000) 0 nil])
([nil nil ((1394 . 1402) (1393 . 1399)) ((#("

    " 0 1 (fontified t) 1 2 (fontified nil) 2 6 (fontified t)) . 1393) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (#("        " 0 8 (fontified t)) . 1394) (undo-tree-id846 . -8)) (25665 31277 358297 421000) 0 nil])
([nil nil ((1414 . 1415)) ((#(";" 0 1 (fontified t)) . 1414) (undo-tree-id766 . -1)) (25665 30996 294074 374000) 0 nil])
([nil nil ((#("MyFunctionPass" 0 14 (fontified t)) . 1988) (undo-tree-id853 . -14) (undo-tree-id854 . -14) (undo-tree-id855 . -14) 1990) nil (25665 31306 903271 401000) 0 nil])
nil
([nil nil ((#(";" 0 1 (fontified t)) . -1414) (undo-tree-id761 . -1) 1415) ((1414 . 1415)) (25665 30995 680309 767000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2004 . 2005) (nil fontified nil 1988 . 2005) (1988 . 2005)) nil (25665 31306 903255 408000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . 1402) (undo-tree-id756 . -12) (undo-tree-id757 . -12) (undo-tree-id758 . -12) (undo-tree-id759 . -12) (undo-tree-id760 . -12)) ((1402 . 1414)) (25665 30995 91733 17000) 0 nil])
([nil nil ((apply -48 1398 2012 undo--wrap-and-run-primitive-undo 1398 2012 ((2006 . 2009) (1997 . 2000) (1988 . 1991) (1977 . 1980) (1964 . 1967) (1949 . 1952) (1818 . 1821) (1755 . 1758) (1701 . 1704) (1649 . 1652) (1590 . 1593) (1556 . 1559) (1522 . 1525) (1480 . 1483) (1445 . 1448) (1399 . 1402) 1963)) (t 25665 31306 921841 252000)) nil (25665 31339 416083 449000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . -1974) (1968 . 1974) (#("    " 0 4 (fontified nil)) . -1966) (1958 . 1966) (#("      " 0 6 (fontified nil)) . -1956) (1946 . 1956) (#("        " 0 8 (fontified nil)) . -1944) (1932 . 1944) (#("          " 0 10 (fontified nil)) . -1930) (1916 . 1930) (#("            " 0 12 (fontified nil)) . -1800) (1784 . 1800) (#("          " 0 10 (fontified nil)) . -1734) (1720 . 1734) (#("          " 0 10 (fontified nil)) . -1678) (1664 . 1678) (#("          " 0 10 (fontified nil)) . -1625) (1611 . 1625) (#("        " 0 8 (fontified nil)) . -1563) (1551 . 1563) (#("      " 0 6 (fontified nil)) . -1526) (1516 . 1526) (#("    " 0 4 (fontified nil)) . -1489) (1481 . 1489) (#("  " 0 2 (fontified nil)) . -1444) (1438 . 1444) (#("  " 0 2 (fontified nil)) . -1408) (undo-tree-id755 . -1) (1402 . 1408) 1921) ((#("      " 0 6 (fontified nil)) . 1402) (1408 . 1410) (#("      " 0 6 (fontified nil)) . 1438) (1444 . 1446) (#("        " 0 8 (fontified nil)) . 1481) (1489 . 1493) (#("          " 0 10 (fontified nil)) . 1516) (1526 . 1532) (#("            " 0 12 (fontified nil)) . 1551) (1563 . 1571) (#("              " 0 14 (fontified nil)) . 1611) (1625 . 1635) (#("              " 0 14 (fontified nil)) . 1664) (1678 . 1688) (#("              " 0 14 (fontified nil)) . 1720) (1734 . 1744) (#("                " 0 16 (fontified nil)) . 1784) (1800 . 1812) (#("              " 0 14 (fontified nil)) . 1916) (1930 . 1940) (#("            " 0 12 (fontified nil)) . 1932) (1944 . 1952) (#("          " 0 10 (fontified nil)) . 1946) (1956 . 1962) (#("        " 0 8 (fontified nil)) . 1958) (1966 . 1970) (#("      " 0 6 (fontified nil)) . 1968) (1974 . 1976)) (25665 30993 835609 258000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1391) (undo-tree-id857 . -1) 1392) nil (25665 31339 416082 388000) 0 nil])
([nil nil ((#("      " 0 6 (fontified nil)) . -2030) (2020 . 2030) (#("        " 0 8 (fontified nil)) . -2018) (2006 . 2018) (#("          " 0 10 (fontified nil)) . -2004) (1990 . 2004) (#("            " 0 12 (fontified nil)) . -1988) (1972 . 1988) (#("              " 0 14 (fontified nil)) . -1970) (1952 . 1970) (#("                " 0 16 (fontified nil)) . -1836) (1816 . 1836) (#("              " 0 14 (fontified nil)) . -1766) (1748 . 1766) (#("              " 0 14 (fontified nil)) . -1706) (1688 . 1706) (#("              " 0 14 (fontified nil)) . -1649) (1631 . 1649) (#("            " 0 12 (fontified nil)) . -1583) (1567 . 1583) (#("          " 0 10 (fontified nil)) . -1542) (1528 . 1542) (#("        " 0 8 (fontified nil)) . -1501) (1489 . 1501) (#("      " 0 6 (fontified nil)) . -1452) (1442 . 1452) (#("      " 0 6 (fontified nil)) . -1412) (1402 . 1412)) ((#("          " 0 10 (fontified nil)) . 1402) (undo-tree-id765 . -1) (1412 . 1418) (#("          " 0 10 (fontified nil)) . 1442) (1452 . 1458) (#("            " 0 12 (fontified nil)) . 1489) (1501 . 1509) (#("              " 0 14 (fontified nil)) . 1528) (1542 . 1552) (#("                " 0 16 (fontified nil)) . 1567) (1583 . 1595) (#("                  " 0 18 (fontified nil)) . 1631) (1649 . 1663) (#("                  " 0 18 (fontified nil)) . 1688) (1706 . 1720) (#("                  " 0 18 (fontified nil)) . 1748) (1766 . 1780) (#("                    " 0 20 (fontified nil)) . 1816) (1836 . 1852) (#("                  " 0 18 (fontified nil)) . 1952) (1970 . 1984) (#("                " 0 16 (fontified nil)) . 1972) (1988 . 2000) (#("              " 0 14 (fontified nil)) . 1990) (2004 . 2014) (#("            " 0 12 (fontified nil)) . 2006) (2018 . 2026) (#("          " 0 10 (fontified nil)) . 2020) (2030 . 2036)) (25665 30993 510254 214000) 0 nil])
([nil nil ((1391 . 1392)) nil (25665 31339 416069 957000) 0 nil])
([nil nil ((apply -48 2049 2663 undo--wrap-and-run-primitive-undo 2049 2663 ((2658 . 2661) (2649 . 2652) (2640 . 2643) (2629 . 2632) (2616 . 2619) (2601 . 2604) (2470 . 2473) (2407 . 2410) (2352 . 2355) (2300 . 2303) (2241 . 2244) (2207 . 2210) (2173 . 2176) (2131 . 2134) (2096 . 2099) (2050 . 2053) 2614)) (t 25665 30964 184258 190000)) ((apply 48 2049 2615 undo--wrap-and-run-primitive-undo 2049 2615 ((#("// " 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 2050) (#("// " 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 2096) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 2131) (#("// " 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 2173) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 2207) (#("// " 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 2241) (#("// " 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 2300) (#("// " 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 2352) (#("// " 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 2407) (#("// " 0 1 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 2470) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 2601) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 2616) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 2629) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 2640) (#("// " 0 1 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 2649) (#("// " 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 2658) 2662))) (25665 30993 274526 272000) 0 nil])
([nil nil ((1392 . 1394)) nil (25665 31339 416069 409000) 0 nil])
([nil nil ((2662 . 2663)) ((#("
" 0 1 (fontified t face font-lock-comment-face c-in-sws t)) . 2662)) (25665 30993 67606 200000) 0 nil])
([nil nil ((1394 . 1402) (1393 . 1399)) nil (25665 31339 416063 783000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -2405) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) 2406) ((2405 . 2406) (t 25665 30981 445531 518000)) (25665 30981 445943 926000) 0 nil])
([nil nil ((1402 . 1423) (t 25665 31339 423658 93000)) nil (25665 31361 314780 171000) 0 nil])
nil
([nil nil ((1423 . 1425)) nil (25665 31361 314779 630000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1426) (1426 . 1427) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -1426) (1426 . 1427) (1425 . 1427)) nil (25665 31361 314778 478000) 0 nil])
([nil nil ((1427 . 1428)) nil (25665 31361 314773 767000) 0 nil])
([nil nil ((apply -3 1235 1260 undo--wrap-and-run-primitive-undo 1235 1260 ((1235 . 1238))) (t 25665 31361 325252 313000)) nil (25665 31416 662799 365000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-in-sws t)) . -85) (undo-tree-id1453 . -1) (#("// #include \"mlir/IR/Function.h\"" 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 4 (c-in-sws t fontified t face font-lock-comment-face) 4 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 32 (c-in-sws t fontified t face font-lock-comment-face)) . 86) (t 25665 31416 678140 300000)) nil (25665 31596 196929 846000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t fontified t)) . -209) (undo-tree-id1451 . -1) (#("// #include \"mlir/IR/Module.h\"" 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 4 (c-in-sws t fontified t face font-lock-comment-face) 4 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 30 (c-in-sws t fontified t face font-lock-comment-face)) . 210) (undo-tree-id1452 . -29) 239) nil (25665 31596 196928 783000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t fontified t)) . -272) (undo-tree-id1449 . -1) (#("// #include \"mlir/IR/StandardTypes.h\"" 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 4 (c-in-sws t fontified t face font-lock-comment-face) 4 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 37 (c-in-sws t fontified t face font-lock-comment-face)) . 273) (undo-tree-id1450 . -32) 305) nil (25665 31596 196927 305000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-in-sws t)) . -272) (undo-tree-id1447 . -1) (#("// #include \"mlir/Parser.h\"" 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 4 (c-in-sws t fontified t face font-lock-comment-face) 4 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 27 (c-in-sws t fontified t face font-lock-comment-face)) . 273) (undo-tree-id1448 . -27) 300) nil (25665 31596 196926 83000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -737) (undo-tree-id1445 . -1) (#("// #include \"mlir/Dialect/SCF/SCFOps.h\"" 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 39 (c-in-sws t fontified t face font-lock-comment-face)) . 738) (undo-tree-id1446 . -30) 768) nil (25665 31596 196924 807000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-in-sws t)) . -693) (undo-tree-id1443 . -1) (#("// #include \"mlir/Dialect/SCF/SCFDialect.h\"" 0 1 (fontified t c-is-sws t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 43 (c-in-sws t fontified t face font-lock-comment-face)) . 694) (undo-tree-id1444 . -43) 737) nil (25665 31596 196923 352000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t fontified t)) . -837) (undo-tree-id1441 . -1) (#("// #include \"mlir/Support/InitLLVM.h\"" 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 4 (c-in-sws t fontified t face font-lock-comment-face) 4 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 37 (c-in-sws t fontified t face font-lock-comment-face)) . 838) (undo-tree-id1442 . -37) 875) nil (25665 31596 196921 802000) 0 nil])
([nil nil ((875 . 911) (#("
" 0 1 (fontified nil c-is-sws t)) . 838) (#("#include \"mlir/Transforms/Passes.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 35 (c-in-sws t fontified t face font-lock-string-face)) . 838) (undo-tree-id1439 . -35) (undo-tree-id1440 . -34) 872) nil (25665 31596 196920 173000) 0 nil])
([nil nil ((910 . 946) (#("
" 0 1 (fontified nil c-is-sws t)) . 876) (#("#include \"mlir/Transforms/Passes.h\"" 0 1 (c-is-sws t fontified t c-in-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 35 (fontified t c-in-sws t face font-lock-string-face)) . 876) (undo-tree-id1437 . -35) (undo-tree-id1438 . -34) 910) nil (25665 31596 196918 569000) 0 nil])
([nil nil ((911 . 946) (#("
" 0 1 (rear-nonsticky t fontified t c-in-sws t)) . -946) (undo-tree-id1434 . -1) (#("#include \"mlir/Pass/PassManager.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 34 (c-in-sws t fontified t face font-lock-string-face)) . -947) (undo-tree-id1435 . -34) (undo-tree-id1436 . -34) 981) nil (25665 31596 196916 697000) 0 nil])
([nil nil ((876 . 911) (#("
" 0 1 (fontified t c-in-sws t)) . -910) (undo-tree-id1431 . -1) (#("#include \"mlir/Pass/PassManager.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 34 (c-in-sws t fontified t face font-lock-string-face)) . -911) (undo-tree-id1432 . -34) (undo-tree-id1433 . -34) 945) nil (25665 31596 196914 174000) 0 nil])
([nil nil ((838 . 873) (#("
" 0 1 (fontified t c-in-sws t)) . -875) (undo-tree-id1428 . -1) (#("#include \"mlir/Pass/PassManager.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 34 (c-in-sws t fontified t face font-lock-string-face)) . -876) (undo-tree-id1429 . -34) (undo-tree-id1430 . -34) 910) nil (25665 31596 196911 867000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-in-sws t)) . -837) (undo-tree-id1425 . -1) (#("#include \"mlir/Pass/PassManager.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 34 (c-in-sws t fontified t face font-lock-string-face)) . 838) (undo-tree-id1426 . -34) (undo-tree-id1427 . -34) 872) nil (25665 31596 196910 129000) 0 nil])
([nil nil ((761 . 802) (#("
" 0 1 (fontified nil c-is-sws t)) . 725) (#("#include \"mlir/Transforms/RegionUtils.h\"" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 40 (c-in-sws t fontified t face font-lock-string-face)) . 725) (undo-tree-id1421 . -40) (undo-tree-id1422 . -40) (undo-tree-id1423 . -40) (undo-tree-id1424 . -34) 759) nil (25665 31596 196908 119000) 0 nil])
([nil nil ((796 . 837) (#("
" 0 1 (fontified nil c-is-sws t)) . 762) (#("#include \"mlir/Transforms/RegionUtils.h\"" 0 1 (c-is-sws t fontified t c-in-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 40 (fontified t c-in-sws t face font-lock-string-face)) . 762) (undo-tree-id1419 . -40) (undo-tree-id1420 . -34) 796) nil (25665 31596 196905 862000) 0 nil])
([nil nil ((834 . 875) (#("
" 0 1 (fontified nil c-is-sws t)) . 797) (#("#include \"mlir/Transforms/RegionUtils.h\"" 0 1 (c-is-sws t fontified t c-in-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 40 (fontified t c-in-sws t face font-lock-string-face)) . 797) (undo-tree-id1417 . -40) (undo-tree-id1418 . -34) 831) nil (25665 31596 196904 862000) 0 nil])
([nil nil ((869 . 910) (#("
" 0 1 (fontified nil c-is-sws t)) . 835) (#("#include \"mlir/Transforms/RegionUtils.h\"" 0 1 (c-is-sws t fontified t c-in-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 40 (fontified t c-in-sws t face font-lock-string-face)) . 835) (undo-tree-id1415 . -40) (undo-tree-id1416 . -34) 869) nil (25665 31596 196903 812000) 0 nil])
([nil nil ((905 . 946) (#("
" 0 1 (fontified nil c-is-sws t)) . 870) (#("#include \"mlir/Transforms/RegionUtils.h\"" 0 1 (c-is-sws t fontified t c-in-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 40 (fontified t c-in-sws t face font-lock-string-face)) . 870) (undo-tree-id1413 . -40) (undo-tree-id1414 . -34) 904) nil (25665 31596 196902 515000) 0 nil])
([nil nil ((694 . 766) (#("
" 0 1 (fontified t c-in-sws t)) . -724) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"
#include \"mlir/Pass/PassManager.h\"" 0 1 (fontified t c-is-sws t c-in-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 35 (fontified t c-in-sws t face font-lock-string-face) 35 36 (rear-nonsticky t fontified t c-in-sws t face font-lock-string-face) 36 37 (fontified t c-in-sws t) 37 38 (fontified t c-is-sws t c-in-sws t face font-lock-preprocessor-face) 38 45 (fontified t c-in-sws t face font-lock-preprocessor-face) 45 46 (fontified t c-in-sws t) 46 71 (fontified t c-in-sws t face font-lock-string-face)) . -725) (undo-tree-id1407 . -36) (undo-tree-id1408 . -34) (undo-tree-id1409 . -34) (undo-tree-id1410 . -71) (undo-tree-id1411 . -34) (undo-tree-id1412 . -71) 759) nil (25665 31596 196899 669000) 0 nil])
([nil nil ((653 . 725) (#("
" 0 1 (fontified t c-in-sws t)) . -693) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"
#include \"mlir/Pass/PassManager.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 36 (c-in-sws t fontified t face font-lock-string-face) 36 37 (c-in-sws t fontified t) 37 38 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 38 45 (c-in-sws t fontified t face font-lock-preprocessor-face) 45 46 (c-in-sws t fontified t) 46 71 (c-in-sws t fontified t face font-lock-string-face)) . -694) (undo-tree-id1393 . -36) (undo-tree-id1394 . -34) (undo-tree-id1395 . -34) (undo-tree-id1396 . -34) (undo-tree-id1397 . -71) (undo-tree-id1398 . -71) 728) nil (25665 31596 196895 298000) 0 nil])
([nil nil ((617 . 689) (#("
" 0 1 (fontified t c-in-sws t)) . -652) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"
#include \"mlir/Pass/PassManager.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 36 (c-in-sws t fontified t face font-lock-string-face) 36 37 (c-in-sws t fontified t) 37 38 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 38 45 (c-in-sws t fontified t face font-lock-preprocessor-face) 45 46 (c-in-sws t fontified t) 46 71 (c-in-sws t fontified t face font-lock-string-face)) . -653) (undo-tree-id1381 . -36) (undo-tree-id1382 . -34) (undo-tree-id1383 . -34) (undo-tree-id1384 . -34) (undo-tree-id1385 . -71) (undo-tree-id1386 . -71) 687) nil (25665 31596 196891 107000) 0 nil])
([nil nil ((582 . 654) (#("
" 0 1 (fontified t c-in-sws t)) . -616) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"
#include \"mlir/Pass/PassManager.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 36 (c-in-sws t fontified t face font-lock-string-face) 36 37 (c-in-sws t fontified t) 37 38 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 38 45 (c-in-sws t fontified t face font-lock-preprocessor-face) 45 46 (c-in-sws t fontified t) 46 71 (c-in-sws t fontified t face font-lock-string-face)) . -617) (undo-tree-id1369 . -36) (undo-tree-id1370 . -34) (undo-tree-id1371 . -34) (undo-tree-id1372 . -34) (undo-tree-id1373 . -71) (undo-tree-id1374 . -71) 651) nil (25665 31596 196887 304000) 0 nil])
([nil nil ((542 . 614) (#("
" 0 1 (fontified t c-in-sws t)) . -581) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"
#include \"mlir/Pass/PassManager.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 36 (c-in-sws t fontified t face font-lock-string-face) 36 37 (c-in-sws t fontified t) 37 38 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 38 45 (c-in-sws t fontified t face font-lock-preprocessor-face) 45 46 (c-in-sws t fontified t) 46 71 (c-in-sws t fontified t face font-lock-string-face)) . -582) (undo-tree-id1357 . -36) (undo-tree-id1358 . -34) (undo-tree-id1359 . -34) (undo-tree-id1360 . -34) (undo-tree-id1361 . -71) (undo-tree-id1362 . -71) 616) nil (25665 31596 196883 71000) 0 nil])
([nil nil ((508 . 580) (#("
" 0 1 (fontified t c-in-sws t)) . -541) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"
#include \"mlir/Pass/PassManager.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 36 (c-in-sws t fontified t face font-lock-string-face) 36 37 (c-in-sws t fontified t) 37 38 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 38 45 (c-in-sws t fontified t face font-lock-preprocessor-face) 45 46 (c-in-sws t fontified t) 46 71 (c-in-sws t fontified t face font-lock-string-face)) . -542) (undo-tree-id1345 . -36) (undo-tree-id1346 . -34) (undo-tree-id1347 . -34) (undo-tree-id1348 . -34) (undo-tree-id1349 . -71) (undo-tree-id1350 . -71) 576) nil (25665 31596 196865 983000) 0 nil])
([nil nil ((470 . 542) (#("
" 0 1 (fontified t c-in-sws t)) . -507) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"
#include \"mlir/Pass/PassManager.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 36 (c-in-sws t fontified t face font-lock-string-face) 36 37 (c-in-sws t fontified t) 37 38 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 38 45 (c-in-sws t fontified t face font-lock-preprocessor-face) 45 46 (c-in-sws t fontified t) 46 71 (c-in-sws t fontified t face font-lock-string-face)) . -508) (undo-tree-id1333 . -36) (undo-tree-id1334 . -34) (undo-tree-id1335 . -34) (undo-tree-id1336 . -34) (undo-tree-id1337 . -71) (undo-tree-id1338 . -71) 542) nil (25665 31596 196862 445000) 0 nil])
([nil nil ((438 . 510) (#("
" 0 1 (fontified t c-in-sws t)) . -469) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"
#include \"mlir/Pass/PassManager.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 36 (c-in-sws t fontified t face font-lock-string-face) 36 37 (c-in-sws t fontified t) 37 38 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 38 45 (c-in-sws t fontified t face font-lock-preprocessor-face) 45 46 (c-in-sws t fontified t) 46 71 (c-in-sws t fontified t face font-lock-string-face)) . -470) (undo-tree-id1321 . -36) (undo-tree-id1322 . -34) (undo-tree-id1323 . -34) (undo-tree-id1324 . -34) (undo-tree-id1325 . -71) (undo-tree-id1326 . -71) 504) nil (25665 31596 196858 586000) 0 nil])
([nil nil ((725 . 756) (#("
" 0 1 (c-in-sws t fontified t)) . -765) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (#("#include \"mlir/Support/LLVM.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 30 (c-in-sws t fontified t face font-lock-string-face)) . -766) (undo-tree-id1311 . -30) (undo-tree-id1312 . -30) (undo-tree-id1313 . -30) (undo-tree-id1314 . -30) 796) nil (25665 31596 196851 90000) 0 nil])
([nil nil ((689 . 720) (#("
" 0 1 (fontified t c-in-sws t)) . -724) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (#("#include \"mlir/Support/LLVM.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 30 (c-in-sws t fontified t face font-lock-string-face)) . -725) (undo-tree-id1305 . -30) (undo-tree-id1306 . -30) 755) nil (25665 31596 196848 153000) 0 nil])
([nil nil ((654 . 685) (#("
" 0 1 (fontified t c-in-sws t)) . -688) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (#("#include \"mlir/Support/LLVM.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 30 (c-in-sws t fontified t face font-lock-string-face)) . -689) (undo-tree-id1301 . -30) (undo-tree-id1302 . -30) 719) nil (25665 31596 196846 568000) 0 nil])
([nil nil ((614 . 645) (#("
" 0 1 (fontified t c-in-sws t)) . -653) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (#("#include \"mlir/Support/LLVM.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 30 (c-in-sws t fontified t face font-lock-string-face)) . -654) (undo-tree-id1297 . -30) (undo-tree-id1298 . -30) 684) nil (25665 31596 196844 910000) 0 nil])
([nil nil ((580 . 611) (#("
" 0 1 (fontified t c-in-sws t)) . -613) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (#("#include \"mlir/Support/LLVM.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 30 (c-in-sws t fontified t face font-lock-string-face)) . -614) (undo-tree-id1293 . -30) (undo-tree-id1294 . -30) 644) nil (25665 31596 196843 366000) 0 nil])
([nil nil ((542 . 573) (#("
" 0 1 (fontified t c-in-sws t)) . -579) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (#("#include \"mlir/Support/LLVM.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 30 (c-in-sws t fontified t face font-lock-string-face)) . -580) (undo-tree-id1289 . -30) (undo-tree-id1290 . -30) 610) nil (25665 31596 196841 753000) 0 nil])
([nil nil ((510 . 541) (#("
" 0 1 (fontified t c-in-sws t)) . -541) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (#("#include \"mlir/Support/LLVM.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 30 (c-in-sws t fontified t face font-lock-string-face)) . -542) (undo-tree-id1285 . -30) (undo-tree-id1286 . -30) 572) nil (25665 31596 196839 758000) 0 nil])
([nil nil ((835 . 912) (#("
" 0 1 (c-in-sws t fontified t)) . -869) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (#("#include \"mlir/Transforms/Passes.h\"
#include \"mlir/Transforms/RegionUtils.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 35 (c-in-sws t fontified t face font-lock-string-face) 35 36 (c-in-sws t fontified t) 36 37 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 37 44 (c-in-sws t fontified t face font-lock-preprocessor-face) 44 45 (c-in-sws t fontified t) 45 76 (c-in-sws t fontified t face font-lock-string-face)) . 870) (undo-tree-id1274 . -35) (undo-tree-id1275 . -30) (undo-tree-id1276 . -30) (undo-tree-id1277 . -66) (undo-tree-id1278 . -67) (undo-tree-id1279 . 14) (undo-tree-id1280 . -73) (undo-tree-id1281 . -30) (undo-tree-id1282 . -66) 900) nil (25665 31596 196838 72000) 0 nil])
([nil nil ((797 . 874) (#("
" 0 1 (fontified t c-in-sws t)) . -834) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (#("#include \"mlir/Transforms/Passes.h\"
#include \"mlir/Transforms/RegionUtils.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 35 (c-in-sws t fontified t face font-lock-string-face) 35 36 (c-in-sws t fontified t) 36 37 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 37 44 (c-in-sws t fontified t face font-lock-preprocessor-face) 44 45 (c-in-sws t fontified t) 45 76 (c-in-sws t fontified t face font-lock-string-face)) . 835) (undo-tree-id1260 . -35) (undo-tree-id1261 . -30) (undo-tree-id1262 . -30) (undo-tree-id1263 . -30) (undo-tree-id1264 . -66) (undo-tree-id1265 . -66) (undo-tree-id1266 . -67) 865) nil (25665 31596 196832 980000) 0 nil])
([nil nil ((756 . 833) (#("
" 0 1 (fontified t c-in-sws t)) . -796) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (#("#include \"mlir/Transforms/Passes.h\"
#include \"mlir/Transforms/RegionUtils.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 35 (c-in-sws t fontified t face font-lock-string-face) 35 36 (c-in-sws t fontified t) 36 37 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 37 44 (c-in-sws t fontified t face font-lock-preprocessor-face) 44 45 (c-in-sws t fontified t) 45 76 (c-in-sws t fontified t face font-lock-string-face)) . 797) (undo-tree-id1246 . -35) (undo-tree-id1247 . -30) (undo-tree-id1248 . -30) (undo-tree-id1249 . -30) (undo-tree-id1250 . -66) (undo-tree-id1251 . -66) (undo-tree-id1252 . -67) 827) nil (25665 31596 196829 10000) 0 nil])
([nil nil ((720 . 797) (#("
" 0 1 (fontified t c-in-sws t)) . -755) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (#("#include \"mlir/Transforms/Passes.h\"
#include \"mlir/Transforms/RegionUtils.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 35 (c-in-sws t fontified t face font-lock-string-face) 35 36 (c-in-sws t fontified t) 36 37 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 37 44 (c-in-sws t fontified t face font-lock-preprocessor-face) 44 45 (c-in-sws t fontified t) 45 76 (c-in-sws t fontified t face font-lock-string-face)) . 756) (undo-tree-id1232 . -35) (undo-tree-id1233 . -30) (undo-tree-id1234 . -30) (undo-tree-id1235 . -30) (undo-tree-id1236 . -66) (undo-tree-id1237 . -66) (undo-tree-id1238 . -67) 786) nil (25665 31596 196824 280000) 0 nil])
([nil nil ((685 . 762) (#("
" 0 1 (fontified t c-in-sws t)) . -719) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (#("#include \"mlir/Transforms/Passes.h\"
#include \"mlir/Transforms/RegionUtils.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 35 (c-in-sws t fontified t face font-lock-string-face) 35 36 (c-in-sws t fontified t) 36 37 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 37 44 (c-in-sws t fontified t face font-lock-preprocessor-face) 44 45 (c-in-sws t fontified t) 45 76 (c-in-sws t fontified t face font-lock-string-face)) . 720) (undo-tree-id1218 . -35) (undo-tree-id1219 . -30) (undo-tree-id1220 . -30) (undo-tree-id1221 . -30) (undo-tree-id1222 . -66) (undo-tree-id1223 . -66) (undo-tree-id1224 . -67) 750) nil (25665 31596 196819 62000) 0 nil])
([nil nil ((645 . 722) (#("
" 0 1 (fontified t c-in-sws t)) . -684) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (#("#include \"mlir/Transforms/Passes.h\"
#include \"mlir/Transforms/RegionUtils.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 35 (c-in-sws t fontified t face font-lock-string-face) 35 36 (c-in-sws t fontified t) 36 37 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 37 44 (c-in-sws t fontified t face font-lock-preprocessor-face) 44 45 (c-in-sws t fontified t) 45 76 (c-in-sws t fontified t face font-lock-string-face)) . 685) (undo-tree-id1204 . -35) (undo-tree-id1205 . -30) (undo-tree-id1206 . -30) (undo-tree-id1207 . -30) (undo-tree-id1208 . -66) (undo-tree-id1209 . -66) (undo-tree-id1210 . -67) 715) nil (25665 31596 196814 529000) 0 nil])
([nil nil ((611 . 688) (#("
" 0 1 (fontified t c-in-sws t)) . -644) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (#("#include \"mlir/Transforms/Passes.h\"
#include \"mlir/Transforms/RegionUtils.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 35 (c-in-sws t fontified t face font-lock-string-face) 35 36 (c-in-sws t fontified t) 36 37 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 37 44 (c-in-sws t fontified t face font-lock-preprocessor-face) 44 45 (c-in-sws t fontified t) 45 76 (c-in-sws t fontified t face font-lock-string-face)) . 645) (undo-tree-id1190 . -35) (undo-tree-id1191 . -30) (undo-tree-id1192 . -30) (undo-tree-id1193 . -30) (undo-tree-id1194 . -66) (undo-tree-id1195 . -66) (undo-tree-id1196 . -67) 675) nil (25665 31596 196810 171000) 0 nil])
([nil nil ((573 . 650) (#("
" 0 1 (fontified t c-in-sws t)) . -610) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (#("#include \"mlir/Transforms/Passes.h\"
#include \"mlir/Transforms/RegionUtils.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 35 (c-in-sws t fontified t face font-lock-string-face) 35 36 (c-in-sws t fontified t) 36 37 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 37 44 (c-in-sws t fontified t face font-lock-preprocessor-face) 44 45 (c-in-sws t fontified t) 45 76 (c-in-sws t fontified t face font-lock-string-face)) . 611) (undo-tree-id1176 . -35) (undo-tree-id1177 . -30) (undo-tree-id1178 . -30) (undo-tree-id1179 . -30) (undo-tree-id1180 . -66) (undo-tree-id1181 . -66) (undo-tree-id1182 . -67) 641) nil (25665 31596 196805 287000) 0 nil])
([nil nil ((541 . 618) (#("
" 0 1 (fontified t c-in-sws t)) . -572) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (#("#include \"mlir/Transforms/Passes.h\"
#include \"mlir/Transforms/RegionUtils.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 35 (c-in-sws t fontified t face font-lock-string-face) 35 36 (c-in-sws t fontified t) 36 37 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 37 44 (c-in-sws t fontified t face font-lock-preprocessor-face) 44 45 (c-in-sws t fontified t) 45 76 (c-in-sws t fontified t face font-lock-string-face)) . 573) (undo-tree-id1162 . -35) (undo-tree-id1163 . -30) (undo-tree-id1164 . -30) (undo-tree-id1165 . -30) (undo-tree-id1166 . -66) (undo-tree-id1167 . -66) (undo-tree-id1168 . -67) 603) nil (25665 31596 196801 83000) 0 nil])
([nil nil ((510 . 587) (#("
" 0 1 (fontified t c-in-sws t)) . -540) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (#("#include \"mlir/Transforms/Passes.h\"
#include \"mlir/Transforms/RegionUtils.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 35 (c-in-sws t fontified t face font-lock-string-face) 35 36 (c-in-sws t fontified t) 36 37 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 37 44 (c-in-sws t fontified t face font-lock-preprocessor-face) 44 45 (c-in-sws t fontified t) 45 76 (c-in-sws t fontified t face font-lock-string-face)) . 541) (undo-tree-id1148 . -35) (undo-tree-id1149 . -30) (undo-tree-id1150 . -30) (undo-tree-id1151 . -30) (undo-tree-id1152 . -66) (undo-tree-id1153 . -66) (undo-tree-id1154 . -67) 571) nil (25665 31596 196796 393000) 0 nil])
([nil nil ((540 . 617) (#("
" 0 1 (fontified nil c-is-sws t)) . 510) (#("#include \"mlir/Transforms/Passes.h\"
#include \"mlir/Transforms/RegionUtils.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 35 (c-in-sws t fontified t face font-lock-string-face) 35 36 (c-in-sws t fontified t) 36 37 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 37 44 (c-in-sws t fontified t face font-lock-preprocessor-face) 44 45 (c-in-sws t fontified t) 45 76 (c-in-sws t fontified t face font-lock-string-face)) . 510) (undo-tree-id1132 . -35) (undo-tree-id1133 . -30) (undo-tree-id1134 . -30) (undo-tree-id1135 . -30) (undo-tree-id1136 . -66) (undo-tree-id1137 . 14) (undo-tree-id1138 . -73) (undo-tree-id1139 . -66) (undo-tree-id1140 . -67) 540) nil (25665 31596 196780 453000) 0 nil])
([nil nil ((577 . 907) (#("
" 0 1 (fontified t c-in-sws t)) . -617) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (#("#include \"llvm/ADT/STLExtras.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/ErrorOr.h\"
#include \"llvm/Support/FileUtilities.h\"
#include \"llvm/Support/InitLLVM.h\"
#include \"llvm/Support/SourceMgr.h\"
#include \"llvm/Support/ToolOutputFile.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/InitLLVM.h\"
" 0 1 (fontified t c-is-sws t c-in-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 31 (fontified t c-in-sws t face font-lock-string-face) 31 32 (fontified t c-in-sws t) 32 33 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 33 40 (c-in-sws t fontified t face font-lock-preprocessor-face) 40 41 (c-in-sws t fontified t) 41 69 (c-in-sws t fontified t face font-lock-string-face) 69 70 (c-in-sws t fontified t) 70 71 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 71 78 (c-in-sws t fontified t face font-lock-preprocessor-face) 78 79 (c-in-sws t fontified t) 79 103 (c-in-sws t fontified t face font-lock-string-face) 103 104 (c-in-sws t fontified t) 104 105 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 105 112 (c-in-sws t fontified t face font-lock-preprocessor-face) 112 113 (c-in-sws t fontified t) 113 143 (c-in-sws t fontified t face font-lock-string-face) 143 144 (c-in-sws t fontified t) 144 145 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 145 152 (c-in-sws t fontified t face font-lock-preprocessor-face) 152 153 (c-in-sws t fontified t) 153 178 (c-in-sws t fontified t face font-lock-string-face) 178 179 (c-in-sws t fontified t) 179 180 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 180 187 (c-in-sws t fontified t face font-lock-preprocessor-face) 187 188 (c-in-sws t fontified t) 188 214 (c-in-sws t fontified t face font-lock-string-face) 214 215 (c-in-sws t fontified t) 215 216 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 216 223 (c-in-sws t fontified t face font-lock-preprocessor-face) 223 224 (c-in-sws t fontified t) 224 255 (c-in-sws t fontified t face font-lock-string-face) 255 256 (c-in-sws t fontified t) 256 257 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 257 264 (c-in-sws t fontified t face font-lock-preprocessor-face) 264 265 (c-in-sws t fontified t) 265 293 (c-in-sws t fontified t face font-lock-string-face) 293 294 (c-in-sws t fontified t) 294 295 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 295 302 (c-in-sws t fontified t face font-lock-preprocessor-face) 302 303 (c-in-sws t fontified t) 303 328 (c-in-sws t fontified t face font-lock-string-face) 328 329 (c-in-sws t fontified t)) . -618) (undo-tree-id1116 . -31) (undo-tree-id1117 . -30) (undo-tree-id1118 . -255) (undo-tree-id1119 . -255) (undo-tree-id1120 . 319) (undo-tree-id1121 . -14) (undo-tree-id1122 . -329) (undo-tree-id1123 . 50) (undo-tree-id1124 . -290) (undo-tree-id1125 . 274) (undo-tree-id1126 . -66) (undo-tree-id1127 . -329) (undo-tree-id1128 . -30) (undo-tree-id1129 . -31) (undo-tree-id1130 . -30) (undo-tree-id1131 . -329) 947) nil (25665 31596 196777 258000) 0 nil])
([nil nil ((541 . 871) (#("
" 0 1 (fontified t c-in-sws t)) . -576) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (#("#include \"llvm/ADT/STLExtras.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/ErrorOr.h\"
#include \"llvm/Support/FileUtilities.h\"
#include \"llvm/Support/InitLLVM.h\"
#include \"llvm/Support/SourceMgr.h\"
#include \"llvm/Support/ToolOutputFile.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/InitLLVM.h\"
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 31 (c-in-sws t fontified t face font-lock-string-face) 31 32 (c-in-sws t fontified t) 32 33 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 33 40 (c-in-sws t fontified t face font-lock-preprocessor-face) 40 41 (c-in-sws t fontified t) 41 69 (c-in-sws t fontified t face font-lock-string-face) 69 70 (c-in-sws t fontified t) 70 71 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 71 78 (c-in-sws t fontified t face font-lock-preprocessor-face) 78 79 (c-in-sws t fontified t) 79 103 (c-in-sws t fontified t face font-lock-string-face) 103 104 (c-in-sws t fontified t) 104 105 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 105 112 (c-in-sws t fontified t face font-lock-preprocessor-face) 112 113 (c-in-sws t fontified t) 113 143 (c-in-sws t fontified t face font-lock-string-face) 143 144 (c-in-sws t fontified t) 144 145 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 145 152 (c-in-sws t fontified t face font-lock-preprocessor-face) 152 153 (c-in-sws t fontified t) 153 178 (c-in-sws t fontified t face font-lock-string-face) 178 179 (c-in-sws t fontified t) 179 180 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 180 187 (c-in-sws t fontified t face font-lock-preprocessor-face) 187 188 (c-in-sws t fontified t) 188 214 (c-in-sws t fontified t face font-lock-string-face) 214 215 (c-in-sws t fontified t) 215 216 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 216 223 (c-in-sws t fontified t face font-lock-preprocessor-face) 223 224 (c-in-sws t fontified t) 224 255 (c-in-sws t fontified t face font-lock-string-face) 255 256 (c-in-sws t fontified t) 256 257 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 257 264 (c-in-sws t fontified t face font-lock-preprocessor-face) 264 265 (c-in-sws t fontified t) 265 293 (c-in-sws t fontified t face font-lock-string-face) 293 294 (c-in-sws t fontified t) 294 295 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 295 302 (c-in-sws t fontified t face font-lock-preprocessor-face) 302 303 (c-in-sws t fontified t) 303 328 (c-in-sws t fontified t face font-lock-string-face) 328 329 (c-in-sws t fontified t)) . -577) (undo-tree-id1099 . -31) (undo-tree-id1100 . -30) (undo-tree-id1101 . -329) (undo-tree-id1102 . -30) (undo-tree-id1103 . -329) (undo-tree-id1104 . -329) (undo-tree-id1105 . -30) (undo-tree-id1106 . -31) 906) nil (25665 31596 196768 495000) 0 nil])
([nil nil ((510 . 840) (#("
" 0 1 (fontified t c-in-sws t)) . -540) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (#("#include \"llvm/ADT/STLExtras.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/ErrorOr.h\"
#include \"llvm/Support/FileUtilities.h\"
#include \"llvm/Support/InitLLVM.h\"
#include \"llvm/Support/SourceMgr.h\"
#include \"llvm/Support/ToolOutputFile.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/InitLLVM.h\"
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 31 (c-in-sws t fontified t face font-lock-string-face) 31 32 (c-in-sws t fontified t) 32 33 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 33 40 (c-in-sws t fontified t face font-lock-preprocessor-face) 40 41 (c-in-sws t fontified t) 41 69 (c-in-sws t fontified t face font-lock-string-face) 69 70 (c-in-sws t fontified t) 70 71 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 71 78 (c-in-sws t fontified t face font-lock-preprocessor-face) 78 79 (c-in-sws t fontified t) 79 103 (c-in-sws t fontified t face font-lock-string-face) 103 104 (c-in-sws t fontified t) 104 105 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 105 112 (c-in-sws t fontified t face font-lock-preprocessor-face) 112 113 (c-in-sws t fontified t) 113 143 (c-in-sws t fontified t face font-lock-string-face) 143 144 (c-in-sws t fontified t) 144 145 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 145 152 (c-in-sws t fontified t face font-lock-preprocessor-face) 152 153 (c-in-sws t fontified t) 153 178 (c-in-sws t fontified t face font-lock-string-face) 178 179 (c-in-sws t fontified t) 179 180 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 180 187 (c-in-sws t fontified t face font-lock-preprocessor-face) 187 188 (c-in-sws t fontified t) 188 214 (c-in-sws t fontified t face font-lock-string-face) 214 215 (c-in-sws t fontified t) 215 216 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 216 223 (c-in-sws t fontified t face font-lock-preprocessor-face) 223 224 (c-in-sws t fontified t) 224 255 (c-in-sws t fontified t face font-lock-string-face) 255 256 (c-in-sws t fontified t) 256 257 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 257 264 (c-in-sws t fontified t face font-lock-preprocessor-face) 264 265 (c-in-sws t fontified t) 265 293 (c-in-sws t fontified t face font-lock-string-face) 293 294 (c-in-sws t fontified t) 294 295 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 295 302 (c-in-sws t fontified t face font-lock-preprocessor-face) 302 303 (c-in-sws t fontified t) 303 328 (c-in-sws t fontified t face font-lock-string-face) 328 329 (c-in-sws t fontified t)) . -541) (undo-tree-id1084 . -31) (undo-tree-id1085 . -30) (undo-tree-id1086 . -329) (undo-tree-id1087 . -30) (undo-tree-id1088 . -329) (undo-tree-id1089 . -329) (undo-tree-id1090 . -30) (undo-tree-id1091 . -31) 870) nil (25665 31596 196763 329000) 0 nil])
([nil nil ((475 . 805) (#("
" 0 1 (fontified t c-in-sws t)) . -509) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (#("#include \"llvm/ADT/STLExtras.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/ErrorOr.h\"
#include \"llvm/Support/FileUtilities.h\"
#include \"llvm/Support/InitLLVM.h\"
#include \"llvm/Support/SourceMgr.h\"
#include \"llvm/Support/ToolOutputFile.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/InitLLVM.h\"
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 31 (c-in-sws t fontified t face font-lock-string-face) 31 32 (c-in-sws t fontified t) 32 33 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 33 40 (c-in-sws t fontified t face font-lock-preprocessor-face) 40 41 (c-in-sws t fontified t) 41 69 (c-in-sws t fontified t face font-lock-string-face) 69 70 (c-in-sws t fontified t) 70 71 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 71 78 (c-in-sws t fontified t face font-lock-preprocessor-face) 78 79 (c-in-sws t fontified t) 79 103 (c-in-sws t fontified t face font-lock-string-face) 103 104 (c-in-sws t fontified t) 104 105 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 105 112 (c-in-sws t fontified t face font-lock-preprocessor-face) 112 113 (c-in-sws t fontified t) 113 143 (c-in-sws t fontified t face font-lock-string-face) 143 144 (c-in-sws t fontified t) 144 145 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 145 152 (c-in-sws t fontified t face font-lock-preprocessor-face) 152 153 (c-in-sws t fontified t) 153 178 (c-in-sws t fontified t face font-lock-string-face) 178 179 (c-in-sws t fontified t) 179 180 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 180 187 (c-in-sws t fontified t face font-lock-preprocessor-face) 187 188 (c-in-sws t fontified t) 188 214 (c-in-sws t fontified t face font-lock-string-face) 214 215 (c-in-sws t fontified t) 215 216 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 216 223 (c-in-sws t fontified t face font-lock-preprocessor-face) 223 224 (c-in-sws t fontified t) 224 255 (c-in-sws t fontified t face font-lock-string-face) 255 256 (c-in-sws t fontified t) 256 257 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 257 264 (c-in-sws t fontified t face font-lock-preprocessor-face) 264 265 (c-in-sws t fontified t) 265 293 (c-in-sws t fontified t face font-lock-string-face) 293 294 (c-in-sws t fontified t) 294 295 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 295 302 (c-in-sws t fontified t face font-lock-preprocessor-face) 302 303 (c-in-sws t fontified t) 303 328 (c-in-sws t fontified t face font-lock-string-face) 328 329 (c-in-sws t fontified t)) . -510) (undo-tree-id1069 . -31) (undo-tree-id1070 . -30) (undo-tree-id1071 . -329) (undo-tree-id1072 . -30) (undo-tree-id1073 . -329) (undo-tree-id1074 . -329) (undo-tree-id1075 . -30) (undo-tree-id1076 . -31) 839) nil (25665 31596 196745 808000) 0 nil])
([nil nil ((438 . 768) (#("
" 0 1 (fontified t c-in-sws t)) . -474) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (#("#include \"llvm/ADT/STLExtras.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/ErrorOr.h\"
#include \"llvm/Support/FileUtilities.h\"
#include \"llvm/Support/InitLLVM.h\"
#include \"llvm/Support/SourceMgr.h\"
#include \"llvm/Support/ToolOutputFile.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/InitLLVM.h\"
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 31 (c-in-sws t fontified t face font-lock-string-face) 31 32 (c-in-sws t fontified t) 32 33 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 33 40 (c-in-sws t fontified t face font-lock-preprocessor-face) 40 41 (c-in-sws t fontified t) 41 69 (c-in-sws t fontified t face font-lock-string-face) 69 70 (c-in-sws t fontified t) 70 71 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 71 78 (c-in-sws t fontified t face font-lock-preprocessor-face) 78 79 (c-in-sws t fontified t) 79 103 (c-in-sws t fontified t face font-lock-string-face) 103 104 (c-in-sws t fontified t) 104 105 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 105 112 (c-in-sws t fontified t face font-lock-preprocessor-face) 112 113 (c-in-sws t fontified t) 113 143 (c-in-sws t fontified t face font-lock-string-face) 143 144 (c-in-sws t fontified t) 144 145 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 145 152 (c-in-sws t fontified t face font-lock-preprocessor-face) 152 153 (c-in-sws t fontified t) 153 178 (c-in-sws t fontified t face font-lock-string-face) 178 179 (c-in-sws t fontified t) 179 180 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 180 187 (c-in-sws t fontified t face font-lock-preprocessor-face) 187 188 (c-in-sws t fontified t) 188 214 (c-in-sws t fontified t face font-lock-string-face) 214 215 (c-in-sws t fontified t) 215 216 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 216 223 (c-in-sws t fontified t face font-lock-preprocessor-face) 223 224 (c-in-sws t fontified t) 224 255 (c-in-sws t fontified t face font-lock-string-face) 255 256 (c-in-sws t fontified t) 256 257 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 257 264 (c-in-sws t fontified t face font-lock-preprocessor-face) 264 265 (c-in-sws t fontified t) 265 293 (c-in-sws t fontified t face font-lock-string-face) 293 294 (c-in-sws t fontified t) 294 295 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 295 302 (c-in-sws t fontified t face font-lock-preprocessor-face) 302 303 (c-in-sws t fontified t) 303 328 (c-in-sws t fontified t face font-lock-string-face) 328 329 (c-in-sws t fontified t)) . -475) (undo-tree-id1054 . -31) (undo-tree-id1055 . -30) (undo-tree-id1056 . -329) (undo-tree-id1057 . -30) (undo-tree-id1058 . -329) (undo-tree-id1059 . -329) (undo-tree-id1060 . -30) (undo-tree-id1061 . -31) 804) nil (25665 31596 196741 655000) 0 nil])
([nil nil ((393 . 723) (#("
" 0 1 (fontified t c-in-sws t)) . -437) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (#("#include \"llvm/ADT/STLExtras.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/ErrorOr.h\"
#include \"llvm/Support/FileUtilities.h\"
#include \"llvm/Support/InitLLVM.h\"
#include \"llvm/Support/SourceMgr.h\"
#include \"llvm/Support/ToolOutputFile.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/InitLLVM.h\"
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 31 (c-in-sws t fontified t face font-lock-string-face) 31 32 (c-in-sws t fontified t) 32 33 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 33 40 (c-in-sws t fontified t face font-lock-preprocessor-face) 40 41 (c-in-sws t fontified t) 41 69 (c-in-sws t fontified t face font-lock-string-face) 69 70 (c-in-sws t fontified t) 70 71 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 71 78 (c-in-sws t fontified t face font-lock-preprocessor-face) 78 79 (c-in-sws t fontified t) 79 103 (c-in-sws t fontified t face font-lock-string-face) 103 104 (c-in-sws t fontified t) 104 105 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 105 112 (c-in-sws t fontified t face font-lock-preprocessor-face) 112 113 (c-in-sws t fontified t) 113 143 (c-in-sws t fontified t face font-lock-string-face) 143 144 (c-in-sws t fontified t) 144 145 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 145 152 (c-in-sws t fontified t face font-lock-preprocessor-face) 152 153 (c-in-sws t fontified t) 153 178 (c-in-sws t fontified t face font-lock-string-face) 178 179 (c-in-sws t fontified t) 179 180 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 180 187 (c-in-sws t fontified t face font-lock-preprocessor-face) 187 188 (c-in-sws t fontified t) 188 214 (c-in-sws t fontified t face font-lock-string-face) 214 215 (c-in-sws t fontified t) 215 216 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 216 223 (c-in-sws t fontified t face font-lock-preprocessor-face) 223 224 (c-in-sws t fontified t) 224 255 (c-in-sws t fontified t face font-lock-string-face) 255 256 (c-in-sws t fontified t) 256 257 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 257 264 (c-in-sws t fontified t face font-lock-preprocessor-face) 264 265 (c-in-sws t fontified t) 265 293 (c-in-sws t fontified t face font-lock-string-face) 293 294 (c-in-sws t fontified t) 294 295 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 295 302 (c-in-sws t fontified t face font-lock-preprocessor-face) 302 303 (c-in-sws t fontified t) 303 328 (c-in-sws t fontified t face font-lock-string-face) 328 329 (c-in-sws t fontified t)) . -438) (undo-tree-id1039 . -31) (undo-tree-id1040 . -30) (undo-tree-id1041 . -329) (undo-tree-id1042 . -30) (undo-tree-id1043 . -329) (undo-tree-id1044 . -329) (undo-tree-id1045 . -30) (undo-tree-id1046 . -31) 767) nil (25665 31596 196736 910000) 0 nil])
([nil nil ((353 . 683) (#("
" 0 1 (fontified t c-in-sws t)) . -392) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (#("#include \"llvm/ADT/STLExtras.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/ErrorOr.h\"
#include \"llvm/Support/FileUtilities.h\"
#include \"llvm/Support/InitLLVM.h\"
#include \"llvm/Support/SourceMgr.h\"
#include \"llvm/Support/ToolOutputFile.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/InitLLVM.h\"
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 31 (c-in-sws t fontified t face font-lock-string-face) 31 32 (c-in-sws t fontified t) 32 33 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 33 40 (c-in-sws t fontified t face font-lock-preprocessor-face) 40 41 (c-in-sws t fontified t) 41 69 (c-in-sws t fontified t face font-lock-string-face) 69 70 (c-in-sws t fontified t) 70 71 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 71 78 (c-in-sws t fontified t face font-lock-preprocessor-face) 78 79 (c-in-sws t fontified t) 79 103 (c-in-sws t fontified t face font-lock-string-face) 103 104 (c-in-sws t fontified t) 104 105 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 105 112 (c-in-sws t fontified t face font-lock-preprocessor-face) 112 113 (c-in-sws t fontified t) 113 143 (c-in-sws t fontified t face font-lock-string-face) 143 144 (c-in-sws t fontified t) 144 145 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 145 152 (c-in-sws t fontified t face font-lock-preprocessor-face) 152 153 (c-in-sws t fontified t) 153 178 (c-in-sws t fontified t face font-lock-string-face) 178 179 (c-in-sws t fontified t) 179 180 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 180 187 (c-in-sws t fontified t face font-lock-preprocessor-face) 187 188 (c-in-sws t fontified t) 188 214 (c-in-sws t fontified t face font-lock-string-face) 214 215 (c-in-sws t fontified t) 215 216 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 216 223 (c-in-sws t fontified t face font-lock-preprocessor-face) 223 224 (c-in-sws t fontified t) 224 255 (c-in-sws t fontified t face font-lock-string-face) 255 256 (c-in-sws t fontified t) 256 257 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 257 264 (c-in-sws t fontified t face font-lock-preprocessor-face) 264 265 (c-in-sws t fontified t) 265 293 (c-in-sws t fontified t face font-lock-string-face) 293 294 (c-in-sws t fontified t) 294 295 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 295 302 (c-in-sws t fontified t face font-lock-preprocessor-face) 302 303 (c-in-sws t fontified t) 303 328 (c-in-sws t fontified t face font-lock-string-face) 328 329 (c-in-sws t fontified t)) . -393) (undo-tree-id1024 . -31) (undo-tree-id1025 . -30) (undo-tree-id1026 . -329) (undo-tree-id1027 . -30) (undo-tree-id1028 . -329) (undo-tree-id1029 . -329) (undo-tree-id1030 . -30) (undo-tree-id1031 . -31) 722) nil (25665 31596 196731 649000) 0 nil])
([nil nil ((313 . 643) (#("
" 0 1 (fontified t c-in-sws t)) . -352) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (#("#include \"llvm/ADT/STLExtras.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/ErrorOr.h\"
#include \"llvm/Support/FileUtilities.h\"
#include \"llvm/Support/InitLLVM.h\"
#include \"llvm/Support/SourceMgr.h\"
#include \"llvm/Support/ToolOutputFile.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/InitLLVM.h\"
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 31 (c-in-sws t fontified t face font-lock-string-face) 31 32 (c-in-sws t fontified t) 32 33 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 33 40 (c-in-sws t fontified t face font-lock-preprocessor-face) 40 41 (c-in-sws t fontified t) 41 69 (c-in-sws t fontified t face font-lock-string-face) 69 70 (c-in-sws t fontified t) 70 71 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 71 78 (c-in-sws t fontified t face font-lock-preprocessor-face) 78 79 (c-in-sws t fontified t) 79 103 (c-in-sws t fontified t face font-lock-string-face) 103 104 (c-in-sws t fontified t) 104 105 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 105 112 (c-in-sws t fontified t face font-lock-preprocessor-face) 112 113 (c-in-sws t fontified t) 113 143 (c-in-sws t fontified t face font-lock-string-face) 143 144 (c-in-sws t fontified t) 144 145 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 145 152 (c-in-sws t fontified t face font-lock-preprocessor-face) 152 153 (c-in-sws t fontified t) 153 178 (c-in-sws t fontified t face font-lock-string-face) 178 179 (c-in-sws t fontified t) 179 180 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 180 187 (c-in-sws t fontified t face font-lock-preprocessor-face) 187 188 (c-in-sws t fontified t) 188 214 (c-in-sws t fontified t face font-lock-string-face) 214 215 (c-in-sws t fontified t) 215 216 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 216 223 (c-in-sws t fontified t face font-lock-preprocessor-face) 223 224 (c-in-sws t fontified t) 224 255 (c-in-sws t fontified t face font-lock-string-face) 255 256 (c-in-sws t fontified t) 256 257 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 257 264 (c-in-sws t fontified t face font-lock-preprocessor-face) 264 265 (c-in-sws t fontified t) 265 293 (c-in-sws t fontified t face font-lock-string-face) 293 294 (c-in-sws t fontified t) 294 295 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 295 302 (c-in-sws t fontified t face font-lock-preprocessor-face) 302 303 (c-in-sws t fontified t) 303 328 (c-in-sws t fontified t face font-lock-string-face) 328 329 (fontified t c-in-sws t)) . -353) (undo-tree-id1008 . -31) (undo-tree-id1009 . -30) (undo-tree-id1010 . -329) (undo-tree-id1011 . -30) (undo-tree-id1012 . -329) (undo-tree-id1013 . -329) (undo-tree-id1014 . -30) (undo-tree-id1015 . -31) 682) nil (25665 31596 196727 15000) 0 nil])
([nil nil ((273 . 603) (#("
" 0 1 (fontified t c-in-sws t)) . -312) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (#("#include \"llvm/ADT/STLExtras.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/ErrorOr.h\"
#include \"llvm/Support/FileUtilities.h\"
#include \"llvm/Support/InitLLVM.h\"
#include \"llvm/Support/SourceMgr.h\"
#include \"llvm/Support/ToolOutputFile.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/InitLLVM.h\"
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 31 (c-in-sws t fontified t face font-lock-string-face) 31 32 (c-in-sws t fontified t) 32 33 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 33 40 (c-in-sws t fontified t face font-lock-preprocessor-face) 40 41 (c-in-sws t fontified t) 41 69 (c-in-sws t fontified t face font-lock-string-face) 69 70 (c-in-sws t fontified t) 70 71 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 71 78 (c-in-sws t fontified t face font-lock-preprocessor-face) 78 79 (c-in-sws t fontified t) 79 103 (c-in-sws t fontified t face font-lock-string-face) 103 104 (c-in-sws t fontified t) 104 105 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 105 112 (c-in-sws t fontified t face font-lock-preprocessor-face) 112 113 (c-in-sws t fontified t) 113 143 (c-in-sws t fontified t face font-lock-string-face) 143 144 (c-in-sws t fontified t) 144 145 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 145 152 (c-in-sws t fontified t face font-lock-preprocessor-face) 152 153 (c-in-sws t fontified t) 153 178 (c-in-sws t fontified t face font-lock-string-face) 178 179 (c-in-sws t fontified t) 179 180 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 180 187 (c-in-sws t fontified t face font-lock-preprocessor-face) 187 188 (c-in-sws t fontified t) 188 214 (c-in-sws t fontified t face font-lock-string-face) 214 215 (c-in-sws t fontified t) 215 216 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 216 223 (c-in-sws t fontified t face font-lock-preprocessor-face) 223 224 (c-in-sws t fontified t) 224 255 (c-in-sws t fontified t face font-lock-string-face) 255 256 (c-in-sws t fontified t) 256 257 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 257 264 (c-in-sws t fontified t face font-lock-preprocessor-face) 264 265 (c-in-sws t fontified t) 265 293 (c-in-sws t fontified t face font-lock-string-face) 293 294 (c-in-sws t fontified t) 294 295 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 295 302 (c-in-sws t fontified t face font-lock-preprocessor-face) 302 303 (c-in-sws t fontified t) 303 328 (c-in-sws t fontified t face font-lock-string-face) 328 329 (c-in-sws t fontified t)) . -313) (undo-tree-id993 . -31) (undo-tree-id994 . -30) (undo-tree-id995 . -329) (undo-tree-id996 . -30) (undo-tree-id997 . -329) (undo-tree-id998 . -329) (undo-tree-id999 . -30) (undo-tree-id1000 . -31) 642) nil (25665 31596 196721 114000) 0 nil])
([nil nil ((242 . 572) (#("
" 0 1 (fontified t c-in-sws t)) . -272) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (#("#include \"llvm/ADT/STLExtras.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/ErrorOr.h\"
#include \"llvm/Support/FileUtilities.h\"
#include \"llvm/Support/InitLLVM.h\"
#include \"llvm/Support/SourceMgr.h\"
#include \"llvm/Support/ToolOutputFile.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/InitLLVM.h\"
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 31 (c-in-sws t fontified t face font-lock-string-face) 31 32 (c-in-sws t fontified t) 32 33 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 33 40 (c-in-sws t fontified t face font-lock-preprocessor-face) 40 41 (c-in-sws t fontified t) 41 69 (c-in-sws t fontified t face font-lock-string-face) 69 70 (c-in-sws t fontified t) 70 71 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 71 78 (c-in-sws t fontified t face font-lock-preprocessor-face) 78 79 (c-in-sws t fontified t) 79 103 (c-in-sws t fontified t face font-lock-string-face) 103 104 (c-in-sws t fontified t) 104 105 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 105 112 (c-in-sws t fontified t face font-lock-preprocessor-face) 112 113 (c-in-sws t fontified t) 113 143 (c-in-sws t fontified t face font-lock-string-face) 143 144 (c-in-sws t fontified t) 144 145 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 145 152 (c-in-sws t fontified t face font-lock-preprocessor-face) 152 153 (c-in-sws t fontified t) 153 178 (c-in-sws t fontified t face font-lock-string-face) 178 179 (c-in-sws t fontified t) 179 180 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 180 187 (c-in-sws t fontified t face font-lock-preprocessor-face) 187 188 (c-in-sws t fontified t) 188 214 (c-in-sws t fontified t face font-lock-string-face) 214 215 (c-in-sws t fontified t) 215 216 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 216 223 (c-in-sws t fontified t face font-lock-preprocessor-face) 223 224 (c-in-sws t fontified t) 224 255 (c-in-sws t fontified t face font-lock-string-face) 255 256 (c-in-sws t fontified t) 256 257 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 257 264 (c-in-sws t fontified t face font-lock-preprocessor-face) 264 265 (c-in-sws t fontified t) 265 293 (c-in-sws t fontified t face font-lock-string-face) 293 294 (c-in-sws t fontified t) 294 295 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 295 302 (c-in-sws t fontified t face font-lock-preprocessor-face) 302 303 (c-in-sws t fontified t) 303 328 (c-in-sws t fontified t face font-lock-string-face) 328 329 (fontified t c-in-sws t)) . -273) (undo-tree-id977 . -31) (undo-tree-id978 . -30) (undo-tree-id979 . -329) (undo-tree-id980 . -30) (undo-tree-id981 . -329) (undo-tree-id982 . -329) (undo-tree-id983 . -30) (undo-tree-id984 . -31) 602) nil (25665 31596 196715 445000) 0 nil])
([nil nil ((210 . 540) (#("
" 0 1 (fontified t c-in-sws t)) . -241) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (#("#include \"llvm/ADT/STLExtras.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/ErrorOr.h\"
#include \"llvm/Support/FileUtilities.h\"
#include \"llvm/Support/InitLLVM.h\"
#include \"llvm/Support/SourceMgr.h\"
#include \"llvm/Support/ToolOutputFile.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/InitLLVM.h\"
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 31 (c-in-sws t fontified t face font-lock-string-face) 31 32 (c-in-sws t fontified t) 32 33 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 33 40 (c-in-sws t fontified t face font-lock-preprocessor-face) 40 41 (c-in-sws t fontified t) 41 69 (c-in-sws t fontified t face font-lock-string-face) 69 70 (c-in-sws t fontified t) 70 71 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 71 78 (c-in-sws t fontified t face font-lock-preprocessor-face) 78 79 (c-in-sws t fontified t) 79 103 (c-in-sws t fontified t face font-lock-string-face) 103 104 (c-in-sws t fontified t) 104 105 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 105 112 (c-in-sws t fontified t face font-lock-preprocessor-face) 112 113 (c-in-sws t fontified t) 113 143 (c-in-sws t fontified t face font-lock-string-face) 143 144 (c-in-sws t fontified t) 144 145 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 145 152 (c-in-sws t fontified t face font-lock-preprocessor-face) 152 153 (c-in-sws t fontified t) 153 178 (c-in-sws t fontified t face font-lock-string-face) 178 179 (c-in-sws t fontified t) 179 180 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 180 187 (c-in-sws t fontified t face font-lock-preprocessor-face) 187 188 (c-in-sws t fontified t) 188 214 (c-in-sws t fontified t face font-lock-string-face) 214 215 (c-in-sws t fontified t) 215 216 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 216 223 (c-in-sws t fontified t face font-lock-preprocessor-face) 223 224 (c-in-sws t fontified t) 224 255 (c-in-sws t fontified t face font-lock-string-face) 255 256 (c-in-sws t fontified t) 256 257 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 257 264 (c-in-sws t fontified t face font-lock-preprocessor-face) 264 265 (c-in-sws t fontified t) 265 293 (c-in-sws t fontified t face font-lock-string-face) 293 294 (c-in-sws t fontified t) 294 295 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 295 302 (c-in-sws t fontified t face font-lock-preprocessor-face) 302 303 (c-in-sws t fontified t) 303 328 (c-in-sws t fontified t face font-lock-string-face) 328 329 (c-in-sws t fontified t)) . -242) (undo-tree-id961 . -31) (undo-tree-id962 . -30) (undo-tree-id963 . -329) (undo-tree-id964 . -30) (undo-tree-id965 . -329) (undo-tree-id966 . -329) (undo-tree-id967 . -30) (undo-tree-id968 . -31) 571) nil (25665 31596 196710 394000) 0 nil])
([nil nil ((177 . 507) (#("
" 0 1 (fontified t c-in-sws t)) . -209) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (#("#include \"llvm/ADT/STLExtras.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/ErrorOr.h\"
#include \"llvm/Support/FileUtilities.h\"
#include \"llvm/Support/InitLLVM.h\"
#include \"llvm/Support/SourceMgr.h\"
#include \"llvm/Support/ToolOutputFile.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/InitLLVM.h\"
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 31 (c-in-sws t fontified t face font-lock-string-face) 31 32 (c-in-sws t fontified t) 32 33 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 33 40 (c-in-sws t fontified t face font-lock-preprocessor-face) 40 41 (c-in-sws t fontified t) 41 69 (c-in-sws t fontified t face font-lock-string-face) 69 70 (c-in-sws t fontified t) 70 71 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 71 78 (c-in-sws t fontified t face font-lock-preprocessor-face) 78 79 (c-in-sws t fontified t) 79 103 (c-in-sws t fontified t face font-lock-string-face) 103 104 (c-in-sws t fontified t) 104 105 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 105 112 (c-in-sws t fontified t face font-lock-preprocessor-face) 112 113 (c-in-sws t fontified t) 113 143 (c-in-sws t fontified t face font-lock-string-face) 143 144 (c-in-sws t fontified t) 144 145 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 145 152 (c-in-sws t fontified t face font-lock-preprocessor-face) 152 153 (c-in-sws t fontified t) 153 178 (c-in-sws t fontified t face font-lock-string-face) 178 179 (c-in-sws t fontified t) 179 180 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 180 187 (c-in-sws t fontified t face font-lock-preprocessor-face) 187 188 (c-in-sws t fontified t) 188 214 (c-in-sws t fontified t face font-lock-string-face) 214 215 (c-in-sws t fontified t) 215 216 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 216 223 (c-in-sws t fontified t face font-lock-preprocessor-face) 223 224 (c-in-sws t fontified t) 224 255 (c-in-sws t fontified t face font-lock-string-face) 255 256 (c-in-sws t fontified t) 256 257 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 257 264 (c-in-sws t fontified t face font-lock-preprocessor-face) 264 265 (c-in-sws t fontified t) 265 293 (c-in-sws t fontified t face font-lock-string-face) 293 294 (c-in-sws t fontified t) 294 295 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 295 302 (c-in-sws t fontified t face font-lock-preprocessor-face) 302 303 (c-in-sws t fontified t) 303 328 (c-in-sws t fontified t face font-lock-string-face) 328 329 (fontified t c-in-sws t)) . -210) (undo-tree-id945 . -31) (undo-tree-id946 . -30) (undo-tree-id947 . -329) (undo-tree-id948 . -30) (undo-tree-id949 . -329) (undo-tree-id950 . -329) (undo-tree-id951 . -30) (undo-tree-id952 . -31) 539) nil (25665 31596 196705 780000) 0 nil])
([nil nil ((128 . 458) (#("
" 0 1 (fontified t c-in-sws t)) . -176) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (#("#include \"llvm/ADT/STLExtras.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/ErrorOr.h\"
#include \"llvm/Support/FileUtilities.h\"
#include \"llvm/Support/InitLLVM.h\"
#include \"llvm/Support/SourceMgr.h\"
#include \"llvm/Support/ToolOutputFile.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/InitLLVM.h\"
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 31 (c-in-sws t fontified t face font-lock-string-face) 31 32 (c-in-sws t fontified t) 32 33 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 33 40 (c-in-sws t fontified t face font-lock-preprocessor-face) 40 41 (c-in-sws t fontified t) 41 69 (c-in-sws t fontified t face font-lock-string-face) 69 70 (c-in-sws t fontified t) 70 71 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 71 78 (c-in-sws t fontified t face font-lock-preprocessor-face) 78 79 (c-in-sws t fontified t) 79 103 (c-in-sws t fontified t face font-lock-string-face) 103 104 (c-in-sws t fontified t) 104 105 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 105 112 (c-in-sws t fontified t face font-lock-preprocessor-face) 112 113 (c-in-sws t fontified t) 113 143 (c-in-sws t fontified t face font-lock-string-face) 143 144 (c-in-sws t fontified t) 144 145 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 145 152 (c-in-sws t fontified t face font-lock-preprocessor-face) 152 153 (c-in-sws t fontified t) 153 178 (c-in-sws t fontified t face font-lock-string-face) 178 179 (c-in-sws t fontified t) 179 180 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 180 187 (c-in-sws t fontified t face font-lock-preprocessor-face) 187 188 (c-in-sws t fontified t) 188 214 (c-in-sws t fontified t face font-lock-string-face) 214 215 (c-in-sws t fontified t) 215 216 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 216 223 (c-in-sws t fontified t face font-lock-preprocessor-face) 223 224 (c-in-sws t fontified t) 224 255 (c-in-sws t fontified t face font-lock-string-face) 255 256 (c-in-sws t fontified t) 256 257 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 257 264 (c-in-sws t fontified t face font-lock-preprocessor-face) 264 265 (c-in-sws t fontified t) 265 293 (c-in-sws t fontified t face font-lock-string-face) 293 294 (c-in-sws t fontified t) 294 295 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 295 302 (c-in-sws t fontified t face font-lock-preprocessor-face) 302 303 (c-in-sws t fontified t) 303 328 (c-in-sws t fontified t face font-lock-string-face) 328 329 (c-in-sws t fontified t)) . -177) (undo-tree-id930 . -31) (undo-tree-id931 . -30) (undo-tree-id932 . -329) (undo-tree-id933 . -30) (undo-tree-id934 . -329) (undo-tree-id935 . -329) (undo-tree-id936 . -30) (undo-tree-id937 . -31) 506) nil (25665 31596 196700 700000) 0 nil])
([nil nil ((86 . 416) (#("
" 0 1 (fontified t c-in-sws t)) . -127) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (#("#include \"llvm/ADT/STLExtras.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/ErrorOr.h\"
#include \"llvm/Support/FileUtilities.h\"
#include \"llvm/Support/InitLLVM.h\"
#include \"llvm/Support/SourceMgr.h\"
#include \"llvm/Support/ToolOutputFile.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/InitLLVM.h\"
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 31 (c-in-sws t fontified t face font-lock-string-face) 31 32 (c-in-sws t fontified t) 32 33 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 33 40 (c-in-sws t fontified t face font-lock-preprocessor-face) 40 41 (c-in-sws t fontified t) 41 69 (c-in-sws t fontified t face font-lock-string-face) 69 70 (c-in-sws t fontified t) 70 71 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 71 78 (c-in-sws t fontified t face font-lock-preprocessor-face) 78 79 (c-in-sws t fontified t) 79 103 (c-in-sws t fontified t face font-lock-string-face) 103 104 (c-in-sws t fontified t) 104 105 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 105 112 (c-in-sws t fontified t face font-lock-preprocessor-face) 112 113 (c-in-sws t fontified t) 113 143 (c-in-sws t fontified t face font-lock-string-face) 143 144 (c-in-sws t fontified t) 144 145 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 145 152 (c-in-sws t fontified t face font-lock-preprocessor-face) 152 153 (c-in-sws t fontified t) 153 178 (c-in-sws t fontified t face font-lock-string-face) 178 179 (c-in-sws t fontified t) 179 180 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 180 187 (c-in-sws t fontified t face font-lock-preprocessor-face) 187 188 (c-in-sws t fontified t) 188 214 (c-in-sws t fontified t face font-lock-string-face) 214 215 (c-in-sws t fontified t) 215 216 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 216 223 (c-in-sws t fontified t face font-lock-preprocessor-face) 223 224 (c-in-sws t fontified t) 224 255 (c-in-sws t fontified t face font-lock-string-face) 255 256 (c-in-sws t fontified t) 256 257 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 257 264 (c-in-sws t fontified t face font-lock-preprocessor-face) 264 265 (c-in-sws t fontified t) 265 293 (c-in-sws t fontified t face font-lock-string-face) 293 294 (c-in-sws t fontified t) 294 295 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 295 302 (c-in-sws t fontified t face font-lock-preprocessor-face) 302 303 (c-in-sws t fontified t) 303 328 (c-in-sws t fontified t face font-lock-string-face) 328 329 (fontified t c-in-sws t)) . -128) (undo-tree-id914 . -31) (undo-tree-id915 . -30) (undo-tree-id916 . -329) (undo-tree-id917 . -30) (undo-tree-id918 . -329) (undo-tree-id919 . -329) (undo-tree-id920 . -30) (undo-tree-id921 . -31) 457) nil (25665 31596 196695 477000) 0 nil])
([nil nil ((56 . 386) (#("
" 0 1 (fontified t c-in-sws t)) . -85) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (#("#include \"llvm/ADT/STLExtras.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/ErrorOr.h\"
#include \"llvm/Support/FileUtilities.h\"
#include \"llvm/Support/InitLLVM.h\"
#include \"llvm/Support/SourceMgr.h\"
#include \"llvm/Support/ToolOutputFile.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/InitLLVM.h\"
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 31 (c-in-sws t fontified t face font-lock-string-face) 31 32 (c-in-sws t fontified t) 32 33 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 33 40 (c-in-sws t fontified t face font-lock-preprocessor-face) 40 41 (c-in-sws t fontified t) 41 69 (c-in-sws t fontified t face font-lock-string-face) 69 70 (c-in-sws t fontified t) 70 71 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 71 78 (c-in-sws t fontified t face font-lock-preprocessor-face) 78 79 (c-in-sws t fontified t) 79 103 (c-in-sws t fontified t face font-lock-string-face) 103 104 (c-in-sws t fontified t) 104 105 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 105 112 (c-in-sws t fontified t face font-lock-preprocessor-face) 112 113 (c-in-sws t fontified t) 113 143 (c-in-sws t fontified t face font-lock-string-face) 143 144 (c-in-sws t fontified t) 144 145 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 145 152 (c-in-sws t fontified t face font-lock-preprocessor-face) 152 153 (c-in-sws t fontified t) 153 178 (c-in-sws t fontified t face font-lock-string-face) 178 179 (c-in-sws t fontified t) 179 180 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 180 187 (c-in-sws t fontified t face font-lock-preprocessor-face) 187 188 (c-in-sws t fontified t) 188 214 (c-in-sws t fontified t face font-lock-string-face) 214 215 (c-in-sws t fontified t) 215 216 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 216 223 (c-in-sws t fontified t face font-lock-preprocessor-face) 223 224 (c-in-sws t fontified t) 224 255 (c-in-sws t fontified t face font-lock-string-face) 255 256 (c-in-sws t fontified t) 256 257 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 257 264 (c-in-sws t fontified t face font-lock-preprocessor-face) 264 265 (c-in-sws t fontified t) 265 293 (c-in-sws t fontified t face font-lock-string-face) 293 294 (c-in-sws t fontified t) 294 295 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 295 302 (c-in-sws t fontified t face font-lock-preprocessor-face) 302 303 (c-in-sws t fontified t) 303 328 (c-in-sws t fontified t face font-lock-string-face) 328 329 (c-in-sws t fontified t)) . -86) (undo-tree-id899 . -31) (undo-tree-id900 . -30) (undo-tree-id901 . -329) (undo-tree-id902 . -30) (undo-tree-id903 . -329) (undo-tree-id904 . -329) (undo-tree-id905 . -30) (undo-tree-id906 . -31) 415) nil (25665 31596 196690 505000) 0 nil])
([nil nil ((29 . 359) (#("
" 0 1 (fontified t c-in-sws t)) . -55) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (#("#include \"llvm/ADT/STLExtras.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/ErrorOr.h\"
#include \"llvm/Support/FileUtilities.h\"
#include \"llvm/Support/InitLLVM.h\"
#include \"llvm/Support/SourceMgr.h\"
#include \"llvm/Support/ToolOutputFile.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/InitLLVM.h\"
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 31 (c-in-sws t fontified t face font-lock-string-face) 31 32 (c-in-sws t fontified t) 32 33 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 33 40 (c-in-sws t fontified t face font-lock-preprocessor-face) 40 41 (c-in-sws t fontified t) 41 69 (c-in-sws t fontified t face font-lock-string-face) 69 70 (c-in-sws t fontified t) 70 71 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 71 78 (c-in-sws t fontified t face font-lock-preprocessor-face) 78 79 (c-in-sws t fontified t) 79 103 (c-in-sws t fontified t face font-lock-string-face) 103 104 (c-in-sws t fontified t) 104 105 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 105 112 (c-in-sws t fontified t face font-lock-preprocessor-face) 112 113 (c-in-sws t fontified t) 113 143 (c-in-sws t fontified t face font-lock-string-face) 143 144 (c-in-sws t fontified t) 144 145 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 145 152 (c-in-sws t fontified t face font-lock-preprocessor-face) 152 153 (c-in-sws t fontified t) 153 178 (c-in-sws t fontified t face font-lock-string-face) 178 179 (c-in-sws t fontified t) 179 180 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 180 187 (c-in-sws t fontified t face font-lock-preprocessor-face) 187 188 (c-in-sws t fontified t) 188 214 (c-in-sws t fontified t face font-lock-string-face) 214 215 (c-in-sws t fontified t) 215 216 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 216 223 (c-in-sws t fontified t face font-lock-preprocessor-face) 223 224 (c-in-sws t fontified t) 224 255 (c-in-sws t fontified t face font-lock-string-face) 255 256 (c-in-sws t fontified t) 256 257 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 257 264 (c-in-sws t fontified t face font-lock-preprocessor-face) 264 265 (c-in-sws t fontified t) 265 293 (c-in-sws t fontified t face font-lock-string-face) 293 294 (c-in-sws t fontified t) 294 295 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 295 302 (c-in-sws t fontified t face font-lock-preprocessor-face) 302 303 (c-in-sws t fontified t) 303 328 (c-in-sws t fontified t face font-lock-string-face) 328 329 (fontified t c-in-sws t)) . -56) (undo-tree-id883 . -31) (undo-tree-id884 . -30) (undo-tree-id885 . -329) (undo-tree-id886 . -30) (undo-tree-id887 . -329) (undo-tree-id888 . -329) (undo-tree-id889 . -30) (undo-tree-id890 . -31) 385) nil (25665 31596 196562 585000) 0 nil])
([nil nil ((1 . 331) (#("
" 0 1 (fontified t c-in-sws t)) . -28) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (#("#include \"llvm/ADT/STLExtras.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/ErrorOr.h\"
#include \"llvm/Support/FileUtilities.h\"
#include \"llvm/Support/InitLLVM.h\"
#include \"llvm/Support/SourceMgr.h\"
#include \"llvm/Support/ToolOutputFile.h\"
#include \"llvm/Support/CommandLine.h\"
#include \"llvm/Support/InitLLVM.h\"
" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 31 (c-in-sws t fontified t face font-lock-string-face) 31 32 (c-in-sws t fontified t) 32 33 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 33 40 (c-in-sws t fontified t face font-lock-preprocessor-face) 40 41 (c-in-sws t fontified t) 41 69 (c-in-sws t fontified t face font-lock-string-face) 69 70 (c-in-sws t fontified t) 70 71 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 71 78 (c-in-sws t fontified t face font-lock-preprocessor-face) 78 79 (c-in-sws t fontified t) 79 103 (c-in-sws t fontified t face font-lock-string-face) 103 104 (c-in-sws t fontified t) 104 105 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 105 112 (c-in-sws t fontified t face font-lock-preprocessor-face) 112 113 (c-in-sws t fontified t) 113 143 (c-in-sws t fontified t face font-lock-string-face) 143 144 (c-in-sws t fontified t) 144 145 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 145 152 (c-in-sws t fontified t face font-lock-preprocessor-face) 152 153 (c-in-sws t fontified t) 153 178 (c-in-sws t fontified t face font-lock-string-face) 178 179 (c-in-sws t fontified t) 179 180 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 180 187 (c-in-sws t fontified t face font-lock-preprocessor-face) 187 188 (c-in-sws t fontified t) 188 214 (c-in-sws t fontified t face font-lock-string-face) 214 215 (c-in-sws t fontified t) 215 216 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 216 223 (c-in-sws t fontified t face font-lock-preprocessor-face) 223 224 (c-in-sws t fontified t) 224 255 (c-in-sws t fontified t face font-lock-string-face) 255 256 (c-in-sws t fontified t) 256 257 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 257 264 (c-in-sws t fontified t face font-lock-preprocessor-face) 264 265 (c-in-sws t fontified t) 265 293 (c-in-sws t fontified t face font-lock-string-face) 293 294 (c-in-sws t fontified t) 294 295 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 295 302 (c-in-sws t fontified t face font-lock-preprocessor-face) 302 303 (c-in-sws t fontified t) 303 328 (c-in-sws t fontified t face font-lock-string-face) 328 329 (c-in-sws t fontified t)) . -29) (undo-tree-id868 . -31) (undo-tree-id869 . -30) (undo-tree-id870 . -329) (undo-tree-id871 . -30) (undo-tree-id872 . -329) (undo-tree-id873 . -329) (undo-tree-id874 . -30) (undo-tree-id875 . -31) 358) nil (25665 31596 196556 963000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-in-sws t)) . -329) (undo-tree-id858 . -1) (undo-tree-id859 . -1) 330) nil (25665 31596 196549 364000) 0 nil])
([nil nil ((946 . 947)) nil (25665 31596 196535 61000) 0 nil])
([nil nil ((356 . 384) (#("
" 0 1 (fontified nil c-is-sws t)) . 330) (#("#include \"mlir/Pass/Pass.h\"" 0 1 (c-is-sws t fontified t face font-lock-preprocessor-face c-in-sws t) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 27 (c-in-sws t fontified t face font-lock-string-face)) . 330) (undo-tree-id1577 . -27) (undo-tree-id1578 . -18) 348 (t 25665 31596 205735 848000)) nil (25665 31645 372295 829000) 0 nil])
([nil nil ((386 . 414) (#("
" 0 1 (fontified nil c-is-sws t)) . 357) (#("#include \"mlir/Pass/Pass.h\"" 0 1 (c-is-sws t fontified t c-in-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 27 (fontified t c-in-sws t face font-lock-string-face)) . 357) (undo-tree-id1575 . -27) (undo-tree-id1576 . -18) 375) nil (25665 31645 372294 221000) 0 nil])
([nil nil ((428 . 456) (#("
" 0 1 (fontified nil c-is-sws t)) . 387) (#("#include \"mlir/Pass/Pass.h\"" 0 1 (c-is-sws t fontified t c-in-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 27 (fontified t c-in-sws t face font-lock-string-face)) . 387) (undo-tree-id1573 . -27) (undo-tree-id1574 . -18) 405) nil (25665 31645 372292 664000) 0 nil])
([nil nil ((477 . 505) (#("
" 0 1 (fontified nil c-is-sws t)) . 429) (#("#include \"mlir/Pass/Pass.h\"" 0 1 (c-is-sws t fontified t c-in-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 27 (fontified t c-in-sws t face font-lock-string-face)) . 429) (undo-tree-id1571 . -27) (undo-tree-id1572 . -18) 447) nil (25665 31645 372290 908000) 0 nil])
([nil nil ((510 . 538) (#("
" 0 1 (fontified nil c-is-sws t)) . 478) (#("#include \"mlir/Pass/Pass.h\"" 0 1 (c-is-sws t fontified t c-in-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 27 (fontified t c-in-sws t face font-lock-string-face)) . 478) (undo-tree-id1569 . -27) (undo-tree-id1570 . -18) 496) nil (25665 31645 372289 218000) 0 nil])
([nil nil ((542 . 570) (#("
" 0 1 (fontified nil c-is-sws t)) . 511) (#("#include \"mlir/Pass/Pass.h\"" 0 1 (c-is-sws t fontified t c-in-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 27 (fontified t c-in-sws t face font-lock-string-face)) . 511) (undo-tree-id1567 . -27) (undo-tree-id1568 . -18) 529) nil (25665 31645 372287 548000) 0 nil])
([nil nil ((573 . 601) (#("
" 0 1 (fontified nil c-is-sws t)) . 543) (#("#include \"mlir/Pass/Pass.h\"" 0 1 (c-is-sws t fontified t c-in-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 27 (fontified t c-in-sws t face font-lock-string-face)) . 543) (undo-tree-id1565 . -27) (undo-tree-id1566 . -18) 561) nil (25665 31645 372285 889000) 0 nil])
([nil nil ((357 . 448) (#("
" 0 1 (fontified t c-in-sws t)) . -386) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (#("#include \"mlir/Dialect/Func/IR/FuncOps.h\"
#include \"mlir/Dialect/Func/Transforms/Passes.h\"" 0 1 (fontified t c-is-sws t c-in-sws t face font-lock-preprocessor-face) 1 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 41 (fontified t c-in-sws t face font-lock-string-face) 41 42 (fontified t c-in-sws t) 42 43 (fontified t c-is-sws t c-in-sws t face font-lock-preprocessor-face) 43 50 (fontified t c-in-sws t face font-lock-preprocessor-face) 50 51 (fontified t c-in-sws t) 51 89 (fontified t c-in-sws t face font-lock-string-face) 89 90 (rear-nonsticky t fontified t c-in-sws t face font-lock-string-face)) . 387) (undo-tree-id1558 . -41) (undo-tree-id1559 . -18) (undo-tree-id1560 . -18) (undo-tree-id1561 . -60) (undo-tree-id1562 . -61) (undo-tree-id1563 . -18) (undo-tree-id1564 . -60) 405) nil (25665 31645 372284 196000) 0 nil])
([nil nil ((330 . 421) (#("
" 0 1 (fontified t c-in-sws t)) . -356) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (#("#include \"mlir/Dialect/Func/IR/FuncOps.h\"
#include \"mlir/Dialect/Func/Transforms/Passes.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 41 (c-in-sws t fontified t face font-lock-string-face) 41 42 (c-in-sws t fontified t) 42 43 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 43 50 (c-in-sws t fontified t face font-lock-preprocessor-face) 50 51 (c-in-sws t fontified t) 51 90 (c-in-sws t fontified t face font-lock-string-face)) . 357) (undo-tree-id1544 . -41) (undo-tree-id1545 . -18) (undo-tree-id1546 . -18) (undo-tree-id1547 . -18) (undo-tree-id1548 . -60) (undo-tree-id1549 . -60) (undo-tree-id1550 . -61) 375) nil (25665 31645 372276 321000) 0 nil])
([nil nil ((767 . 802) (#("
" 0 1 (c-in-sws t fontified t)) . -803) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (#("#include \"mlir/Pass/PassManager.h\"" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 34 (c-in-sws t fontified t face font-lock-string-face)) . 804) (undo-tree-id1534 . -34) (undo-tree-id1535 . -18) (undo-tree-id1536 . -34) 822) nil (25665 31645 372267 784000) 0 nil])
([nil nil ((722 . 757) (#("
" 0 1 (fontified t c-in-sws t)) . -766) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (#("#include \"mlir/Pass/PassManager.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 34 (c-in-sws t fontified t face font-lock-string-face)) . 767) (undo-tree-id1529 . -34) (undo-tree-id1530 . -18) 785) nil (25665 31645 372264 602000) 0 nil])
([nil nil ((682 . 717) (#("
" 0 1 (fontified t c-in-sws t)) . -721) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (#("#include \"mlir/Pass/PassManager.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 34 (c-in-sws t fontified t face font-lock-string-face)) . 722) (undo-tree-id1525 . -34) (undo-tree-id1526 . -18) 740) nil (25665 31645 372262 118000) 0 nil])
([nil nil ((642 . 677) (#("
" 0 1 (fontified t c-in-sws t)) . -681) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (#("#include \"mlir/Pass/PassManager.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 34 (c-in-sws t fontified t face font-lock-string-face)) . 682) (undo-tree-id1521 . -34) (undo-tree-id1522 . -18) 700) nil (25665 31645 372259 807000) 0 nil])
([nil nil ((602 . 637) (#("
" 0 1 (fontified t c-in-sws t)) . -641) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (#("#include \"mlir/Pass/PassManager.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 34 (c-in-sws t fontified t face font-lock-string-face)) . 642) (undo-tree-id1517 . -34) (undo-tree-id1518 . -18) 660) nil (25665 31645 372256 634000) 0 nil])
([nil nil ((757 . 794) (#("
" 0 1 (c-in-sws t fontified t)) . -801) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"" 0 1 (c-is-sws t fontified t face font-lock-preprocessor-face c-in-sws t) 1 8 (fontified t face font-lock-preprocessor-face c-in-sws t) 8 9 (fontified t c-in-sws t) 9 36 (fontified t face font-lock-string-face c-in-sws t)) . 802) (undo-tree-id1512 . -36) (undo-tree-id1513 . -18) (undo-tree-id1514 . -36) 820) nil (25665 31645 372254 569000) 0 nil])
([nil nil ((717 . 754) (#("
" 0 1 (fontified t c-in-sws t)) . -756) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 36 (c-in-sws t fontified t face font-lock-string-face)) . 757) (undo-tree-id1507 . -36) (undo-tree-id1508 . -18) 775) nil (25665 31645 372078 692000) 0 nil])
([nil nil ((677 . 714) (#("
" 0 1 (fontified t c-in-sws t)) . -716) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 36 (c-in-sws t fontified t face font-lock-string-face)) . 717) (undo-tree-id1503 . -36) (undo-tree-id1504 . -18) 735) nil (25665 31645 372076 741000) 0 nil])
([nil nil ((637 . 674) (#("
" 0 1 (fontified t c-in-sws t)) . -676) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 36 (c-in-sws t fontified t face font-lock-string-face)) . 677) (undo-tree-id1499 . -36) (undo-tree-id1500 . -18) 695) nil (25665 31645 372074 597000) 0 nil])
([nil nil ((602 . 639) (#("
" 0 1 (fontified t c-in-sws t)) . -636) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 36 (c-in-sws t fontified t face font-lock-string-face)) . 637) (undo-tree-id1495 . -36) (undo-tree-id1496 . -18) 655) nil (25665 31645 372071 839000) 0 nil])
([nil nil ((574 . 611) (#("
" 0 1 (fontified t c-in-sws t)) . -601) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 36 (c-in-sws t fontified t face font-lock-string-face)) . 602) (undo-tree-id1491 . -36) (undo-tree-id1492 . -18) 620) nil (25665 31645 372069 892000) 0 nil])
([nil nil ((543 . 580) (#("
" 0 1 (fontified t c-in-sws t)) . -573) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 36 (c-in-sws t fontified t face font-lock-string-face)) . 574) (undo-tree-id1487 . -36) (undo-tree-id1488 . -18) 592) nil (25665 31645 372067 576000) 0 nil])
([nil nil ((511 . 548) (#("
" 0 1 (fontified t c-in-sws t)) . -542) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 36 (c-in-sws t fontified t face font-lock-string-face)) . 543) (undo-tree-id1483 . -36) (undo-tree-id1484 . -18) 561) nil (25665 31645 372065 333000) 0 nil])
([nil nil ((478 . 515) (#("
" 0 1 (fontified t c-in-sws t)) . -510) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 36 (c-in-sws t fontified t face font-lock-string-face)) . 511) (undo-tree-id1479 . -36) (undo-tree-id1480 . -18) 529) nil (25665 31645 372063 329000) 0 nil])
([nil nil ((448 . 485) (#("
" 0 1 (fontified t c-in-sws t)) . -477) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 36 (c-in-sws t fontified t face font-lock-string-face)) . 478) (undo-tree-id1475 . -36) (undo-tree-id1476 . -18) 496) nil (25665 31645 372059 323000) 0 nil])
([nil nil ((421 . 458) (#("
" 0 1 (fontified t c-in-sws t)) . -447) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 36 (c-in-sws t fontified t face font-lock-string-face)) . 448) (undo-tree-id1471 . -36) (undo-tree-id1472 . -18) 466) nil (25665 31645 372057 330000) 0 nil])
([nil nil ((372 . 409) (#("
" 0 1 (fontified t c-in-sws t)) . -420) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 36 (c-in-sws t fontified t face font-lock-string-face)) . 421) (undo-tree-id1467 . -36) (undo-tree-id1468 . -18) 439) nil (25665 31645 372055 123000) 0 nil])
([nil nil ((420 . 457) (#("
" 0 1 (fontified nil c-is-sws t)) . 372) (#("#include \"mlir/Dialect/SCF/IR/SCF.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 18 (c-in-sws t fontified t face font-lock-string-face) 18 36 (c-in-sws t fontified t face font-lock-string-face)) . 372) (undo-tree-id1461 . -36) (undo-tree-id1462 . -18) (undo-tree-id1463 . -18) 390) nil (25665 31645 372052 225000) 0 nil])
([nil nil ((824 . 869) (#("
" 0 1 (fontified nil c-is-sws t)) . 794) (#("#include \"mlir/Tools/mlir-opt/MlirOptMain.h\"" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 1 8 (c-in-sws t fontified t face font-lock-preprocessor-face) 8 9 (c-in-sws t fontified t) 9 14 (c-in-sws t fontified t face font-lock-string-face) 14 15 (c-in-sws t fontified t face font-lock-string-face) 15 16 (c-in-sws t fontified t face font-lock-string-face) 16 17 (c-in-sws t fontified t face font-lock-string-face) 17 18 (c-in-sws t fontified t face font-lock-string-face) 18 19 (c-in-sws t fontified t face font-lock-string-face) 19 20 (c-in-sws t fontified t face font-lock-string-face) 20 21 (c-in-sws t fontified t face font-lock-string-face) 21 22 (c-in-sws t fontified t face font-lock-string-face) 22 23 (c-in-sws t fontified t face font-lock-string-face) 23 24 (c-in-sws t fontified t face font-lock-string-face) 24 25 (c-in-sws t fontified t face font-lock-string-face) 25 26 (c-in-sws t fontified t face font-lock-string-face) 26 27 (c-in-sws t fontified t face font-lock-string-face) 27 28 (c-in-sws t fontified t face font-lock-string-face) 28 29 (c-in-sws t fontified t face font-lock-string-face) 29 30 (c-in-sws t fontified t face font-lock-string-face) 30 44 (c-in-sws t fontified t face font-lock-string-face)) . 794) (undo-tree-id1454 . -44) (undo-tree-id1455 . 23) (undo-tree-id1456 . -25) (undo-tree-id1457 . 14) (undo-tree-id1458 . -41) (undo-tree-id1459 . -18) (undo-tree-id1460 . -44) 812) nil (25665 32175 270445 71000) 0 nil])
([nil nil ((apply 3 948 969 undo--wrap-and-run-primitive-undo 948 969 ((#("// " 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . -948))) (t 25665 31645 387616 905000)) nil (25665 32184 578895 820000) 0 nil] [nil nil ((#("
// using namespace mlir;

namespace {
struct InputAnalysisPass : public PassWrapper<InputAnalysisPass, mlir::func::FuncOp> {
    void runOnOperation() override {
        FuncOp f = getOperation();
    }
};
}

// void InputAnalysisPass::runOnOperation() {
//   auto module = getOperation();
//   module.walk([&](func::FuncOp func) {
//     for (auto &block : func) {
//       for (auto &op : block) {
//         if (op.getName().getStringRef() == \"scf.for\") {
//           auto forOp = dyn_cast<scf::ForOp>(op);
//           auto upperBound = forOp.getUpperBound();
//           if (mlir::isa<mlir::BlockArgument>(upperBound)) {
//             llvm::outs() << \"User input \" << upperBound << \" affects loop upper bound in function \" << func.getName() << \".\\n\";
//           }
//         }
//       }
//     }
//   });
// }

static PassRegistration<InputAnalysisPass> pass(\"input-analysis\", \"CSC766\");
" 0 1 (fontified t c-is-sws t) 1 2 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 2 4 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 4 5 (c-in-sws t fontified t face font-lock-comment-face) 5 9 (c-in-sws t fontified t face font-lock-comment-face) 9 10 (c-in-sws t fontified t face font-lock-comment-face) 10 19 (c-in-sws t fontified t face font-lock-comment-face) 19 20 (c-in-sws t fontified t face font-lock-comment-face) 20 24 (c-in-sws t fontified t face font-lock-comment-face) 24 25 (c-in-sws t fontified t face font-lock-comment-face) 25 26 (c-in-sws t fontified t face font-lock-comment-face) 26 27 (c-is-sws t fontified t) 27 28 (c-is-sws t fontified t face font-lock-keyword-face) 28 35 (fontified t face font-lock-keyword-face) 35 36 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 36 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-1-face)) 38 39 (fontified t) 39 44 (fontified t face font-lock-keyword-face) 44 45 (fontified t face font-lock-keyword-face c-type c-decl-type-start) 45 46 (fontified t) 46 63 (fontified t face font-lock-type-face) 63 66 (fontified t) 66 72 (fontified t face font-lock-keyword-face) 72 73 (fontified t) 73 84 (fontified t face font-lock-type-face) 84 85 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-2-face)) 85 102 (fontified t face font-lock-type-face) 102 103 (fontified t c-type c-<>-arg-sep) 103 104 (fontified t) 104 105 (fontified t face font-lock-constant-face) 105 106 (fontified t face font-lock-constant-face) 106 107 (fontified t face font-lock-constant-face) 107 108 (fontified t face font-lock-constant-face) 108 109 (fontified t) 109 110 (fontified t) 110 111 (fontified t face font-lock-constant-face) 111 112 (fontified t face font-lock-constant-face) 112 113 (fontified t face font-lock-constant-face) 113 114 (fontified t face font-lock-constant-face) 114 115 (fontified t) 115 116 (fontified t) 116 117 (fontified t face font-lock-type-face) 117 118 (fontified t face font-lock-type-face) 118 119 (fontified t face font-lock-type-face) 119 120 (fontified t face font-lock-type-face) 120 121 (fontified t face font-lock-type-face) 121 122 (fontified t face font-lock-type-face) 122 123 (syntax-table (5 . 60) fontified t face (rainbow-delimiters-depth-2-face)) 123 124 (fontified t) 124 125 (fontified t face (rainbow-delimiters-depth-2-face)) 125 126 (fontified t) 126 127 (fontified t) 127 128 (fontified t) 128 130 (fontified t) 130 133 (fontified t face font-lock-type-face) 133 134 (fontified t c-type c-decl-id-start face font-lock-type-face) 134 135 (fontified t) 135 149 (fontified t face font-lock-function-name-face) 149 150 (fontified t face (rainbow-delimiters-depth-3-face)) 150 151 (fontified t face (rainbow-delimiters-depth-3-face)) 151 152 (fontified t) 152 160 (fontified t face font-lock-keyword-face) 160 161 (fontified t) 161 162 (fontified t face (rainbow-delimiters-depth-3-face)) 162 163 (fontified t) 163 171 (fontified t) 171 172 (fontified t face font-lock-type-face) 172 173 (fontified t face font-lock-type-face) 173 174 (fontified t face font-lock-type-face) 174 175 (fontified t face font-lock-type-face) 175 176 (fontified t face font-lock-type-face) 176 177 (fontified t c-type c-decl-id-start face font-lock-type-face) 177 178 (fontified t) 178 179 (fontified t face font-lock-variable-name-face) 179 180 (fontified t) 180 181 (fontified t) 181 182 (fontified t) 182 183 (fontified t) 183 184 (fontified t) 184 185 (fontified t) 185 186 (fontified t) 186 187 (fontified t) 187 188 (fontified t) 188 189 (fontified t) 189 190 (fontified t) 190 191 (fontified t) 191 192 (fontified t) 192 193 (fontified t) 193 194 (fontified t) 194 195 (fontified t face (rainbow-delimiters-depth-4-face)) 195 196 (fontified t face (rainbow-delimiters-depth-4-face)) 196 197 (fontified t) 197 198 (fontified t) 198 202 (fontified t) 202 203 (fontified t face (rainbow-delimiters-depth-3-face)) 203 204 (fontified t) 204 205 (fontified t face (rainbow-delimiters-depth-2-face)) 205 207 (fontified t) 207 208 (fontified t face (rainbow-delimiters-depth-1-face)) 208 209 (fontified t) 209 210 (fontified t) 210 211 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 211 213 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 213 214 (c-in-sws t fontified t face font-lock-comment-face) 214 216 (c-in-sws t fontified t face font-lock-comment-face) 216 217 (c-in-sws t fontified t face font-lock-comment-face) 217 218 (c-in-sws t fontified t face font-lock-comment-face) 218 235 (c-in-sws t fontified t face font-lock-comment-face) 235 237 (c-in-sws t fontified t face font-lock-comment-face) 237 251 (c-in-sws t fontified t face font-lock-comment-face) 251 252 (c-in-sws t fontified t face font-lock-comment-face) 252 253 (c-in-sws t fontified t face font-lock-comment-face) 253 254 (c-in-sws t fontified t face font-lock-comment-face) 254 255 (c-in-sws t fontified t face font-lock-comment-face) 255 256 (c-in-sws t fontified t face font-lock-comment-face) 256 259 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 259 261 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 261 264 (c-in-sws t fontified t face font-lock-comment-face) 264 265 (c-in-sws t fontified t face font-lock-comment-face) 265 266 (c-in-sws t fontified t face font-lock-comment-face) 266 272 (c-in-sws t fontified t face font-lock-comment-face) 272 287 (c-in-sws t fontified t face font-lock-comment-face) 287 288 (c-in-sws t fontified t face font-lock-comment-face) 288 289 (c-in-sws t fontified t face font-lock-comment-face) 289 291 (c-in-sws t fontified t face font-lock-comment-face) 291 294 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 294 296 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 296 307 (c-in-sws t fontified t face font-lock-comment-face) 307 308 (c-in-sws t fontified t face font-lock-comment-face) 308 309 (c-in-sws t fontified t face font-lock-comment-face) 309 310 (c-in-sws t fontified t face font-lock-comment-face) 310 311 (c-in-sws t fontified t face font-lock-comment-face) 311 312 (c-in-sws t fontified t face font-lock-comment-face) 312 313 (c-in-sws t fontified t face font-lock-comment-face) 313 314 (c-in-sws t fontified t face font-lock-comment-face) 314 315 (c-in-sws t fontified t face font-lock-comment-face) 315 316 (c-in-sws t fontified t face font-lock-comment-face) 316 318 (c-in-sws t fontified t face font-lock-comment-face) 318 324 (c-in-sws t fontified t face font-lock-comment-face) 324 325 (c-in-sws t fontified t face font-lock-comment-face) 325 329 (c-in-sws t fontified t face font-lock-comment-face) 329 330 (c-in-sws t fontified t face font-lock-comment-face) 330 331 (c-in-sws t fontified t face font-lock-comment-face) 331 332 (c-in-sws t fontified t face font-lock-comment-face) 332 333 (c-in-sws t fontified t face font-lock-comment-face) 333 334 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 334 336 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 336 340 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 340 343 (c-in-sws t fontified t face font-lock-comment-face) 343 344 (c-in-sws t fontified t face font-lock-comment-face) 344 345 (c-in-sws t fontified t face font-lock-comment-face) 345 348 (c-in-sws t fontified t face font-lock-comment-face) 348 349 (c-in-sws t fontified t face font-lock-comment-face) 349 351 (c-in-sws t fontified t face font-lock-comment-face) 351 356 (c-in-sws t fontified t face font-lock-comment-face) 356 363 (c-in-sws t fontified t face font-lock-comment-face) 363 364 (c-in-sws t fontified t face font-lock-comment-face) 364 365 (c-in-sws t fontified t face font-lock-comment-face) 365 366 (c-in-sws t fontified t face font-lock-comment-face) 366 367 (c-in-sws t fontified t face font-lock-comment-face) 367 370 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 370 376 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 376 379 (c-in-sws t fontified t face font-lock-comment-face) 379 380 (c-in-sws t fontified t face font-lock-comment-face) 380 381 (c-in-sws t fontified t face font-lock-comment-face) 381 384 (c-in-sws t fontified t face font-lock-comment-face) 384 385 (c-in-sws t fontified t face font-lock-comment-face) 385 387 (c-in-sws t fontified t face font-lock-comment-face) 387 389 (c-in-sws t fontified t face font-lock-comment-face) 389 397 (c-in-sws t fontified t face font-lock-comment-face) 397 398 (c-in-sws t fontified t face font-lock-comment-face) 398 399 (c-in-sws t fontified t face font-lock-comment-face) 399 400 (c-in-sws t fontified t face font-lock-comment-face) 400 401 (c-in-sws t fontified t face font-lock-comment-face) 401 404 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 404 412 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 412 414 (c-in-sws t fontified t face font-lock-comment-face) 414 415 (c-in-sws t fontified t face font-lock-comment-face) 415 416 (c-in-sws t fontified t face font-lock-comment-face) 416 424 (c-in-sws t fontified t face font-lock-comment-face) 424 426 (c-in-sws t fontified t face font-lock-comment-face) 426 427 (c-in-sws t fontified t face font-lock-comment-face) 427 428 (c-in-sws t fontified t face font-lock-comment-face) 428 441 (c-in-sws t fontified t face font-lock-comment-face) 441 442 (c-in-sws t fontified t face font-lock-comment-face) 442 443 (c-in-sws t fontified t face font-lock-comment-face) 443 447 (c-in-sws t fontified t face font-lock-comment-face) 447 456 (c-in-sws t fontified t face font-lock-comment-face) 456 457 (c-in-sws t fontified t face font-lock-comment-face) 457 458 (c-in-sws t fontified t face font-lock-comment-face) 458 459 (c-in-sws t fontified t face font-lock-comment-face) 459 460 (c-in-sws t fontified t face font-lock-comment-face) 460 463 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 463 473 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 473 476 (c-in-sws t fontified t face font-lock-comment-face) 476 477 (c-in-sws t fontified t face font-lock-comment-face) 477 478 (c-in-sws t fontified t face font-lock-comment-face) 478 483 (c-in-sws t fontified t face font-lock-comment-face) 483 494 (c-in-sws t fontified t face font-lock-comment-face) 494 495 (c-in-sws t fontified t face font-lock-comment-face) 495 498 (c-in-sws t fontified t face font-lock-comment-face) 498 505 (c-in-sws t fontified t face font-lock-comment-face) 505 506 (c-in-sws t fontified t face font-lock-comment-face) 506 507 (c-in-sws t fontified t face font-lock-comment-face) 507 509 (c-in-sws t fontified t face font-lock-comment-face) 509 510 (c-in-sws t fontified t face font-lock-comment-face) 510 511 (c-in-sws t fontified t face font-lock-comment-face) 511 512 (c-in-sws t fontified t face font-lock-comment-face) 512 513 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 513 515 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 515 525 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 525 528 (c-in-sws t fontified t face font-lock-comment-face) 528 529 (c-in-sws t fontified t face font-lock-comment-face) 529 530 (c-in-sws t fontified t face font-lock-comment-face) 530 540 (c-in-sws t fontified t face font-lock-comment-face) 540 549 (c-in-sws t fontified t face font-lock-comment-face) 549 550 (c-in-sws t fontified t face font-lock-comment-face) 550 551 (c-in-sws t fontified t face font-lock-comment-face) 551 552 (c-in-sws t fontified t face font-lock-comment-face) 552 556 (c-in-sws t fontified t face font-lock-comment-face) 556 557 (c-in-sws t fontified t face font-lock-comment-face) 557 558 (c-in-sws t fontified t face font-lock-comment-face) 558 562 (c-in-sws t fontified t face font-lock-comment-face) 562 563 (c-in-sws t fontified t face font-lock-comment-face) 563 564 (c-in-sws t fontified t face font-lock-comment-face) 564 565 (c-in-sws t fontified t face font-lock-comment-face) 565 566 (c-in-sws t fontified t face font-lock-comment-face) 566 567 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 567 569 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 569 579 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 579 580 (c-in-sws t fontified t face font-lock-comment-face) 580 581 (c-in-sws t fontified t face font-lock-comment-face) 581 582 (c-in-sws t fontified t face font-lock-comment-face) 582 583 (c-in-sws t fontified t face font-lock-comment-face) 583 587 (c-in-sws t fontified t face font-lock-comment-face) 587 592 (c-in-sws t fontified t face font-lock-comment-face) 592 593 (c-in-sws t fontified t face font-lock-comment-face) 593 597 (c-in-sws t fontified t face font-lock-comment-face) 597 605 (c-in-sws t fontified t face font-lock-comment-face) 605 606 (c-in-sws t fontified t face font-lock-comment-face) 606 612 (c-in-sws t fontified t face font-lock-comment-face) 612 613 (c-in-sws t fontified t face font-lock-comment-face) 613 614 (c-in-sws t fontified t face font-lock-comment-face) 614 620 (c-in-sws t fontified t face font-lock-comment-face) 620 624 (c-in-sws t fontified t face font-lock-comment-face) 624 625 (rear-nonsticky t c-in-sws t fontified t face font-lock-comment-face) 625 626 (c-in-sws t fontified t face font-lock-comment-face) 626 627 (c-in-sws t fontified t face font-lock-comment-face) 627 628 (c-in-sws t fontified t face font-lock-comment-face) 628 629 (c-in-sws t fontified t face font-lock-comment-face) 629 632 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 632 644 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 644 645 (c-in-sws t fontified t face font-lock-comment-face) 645 648 (c-in-sws t fontified t face font-lock-comment-face) 648 654 (c-in-sws t fontified t face font-lock-comment-face) 654 655 (c-in-sws t fontified t face font-lock-comment-face) 655 656 (c-in-sws t fontified t face font-lock-comment-face) 656 660 (c-in-sws t fontified t face font-lock-comment-face) 660 673 (c-in-sws t fontified t face font-lock-comment-face) 673 678 (c-in-sws t fontified t face font-lock-comment-face) 678 679 (c-in-sws t fontified t face font-lock-comment-face) 679 680 (c-in-sws t fontified t face font-lock-comment-face) 680 681 (c-in-sws t fontified t face font-lock-comment-face) 681 682 (c-in-sws t fontified t face font-lock-comment-face) 682 683 (c-in-sws t fontified t face font-lock-comment-face) 683 684 (c-in-sws t fontified t face font-lock-comment-face) 684 685 (c-in-sws t fontified t face font-lock-comment-face) 685 686 (c-in-sws t fontified t face font-lock-comment-face) 686 687 (c-in-sws t fontified t face font-lock-comment-face) 687 691 (c-in-sws t fontified t face font-lock-comment-face) 691 692 (c-in-sws t fontified t face font-lock-comment-face) 692 717 (c-in-sws t fontified t face font-lock-comment-face) 717 731 (c-in-sws t fontified t face font-lock-comment-face) 731 732 (c-in-sws t fontified t face font-lock-comment-face) 732 747 (c-in-sws t fontified t face font-lock-comment-face) 747 748 (c-in-sws t fontified t face font-lock-comment-face) 748 749 (c-in-sws t fontified t face font-lock-comment-face) 749 753 (c-in-sws t fontified t face font-lock-comment-face) 753 758 (c-in-sws t fontified t face font-lock-comment-face) 758 760 (c-in-sws t fontified t face font-lock-comment-face) 760 763 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 763 773 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 773 774 (c-in-sws t fontified t face font-lock-comment-face) 774 775 (c-in-sws t fontified t face font-lock-comment-face) 775 778 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 778 786 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 786 787 (c-in-sws t fontified t face font-lock-comment-face) 787 788 (c-in-sws t fontified t face font-lock-comment-face) 788 791 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 791 797 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 797 798 (c-in-sws t fontified t face font-lock-comment-face) 798 799 (c-in-sws t fontified t face font-lock-comment-face) 799 802 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 802 806 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 806 807 (c-in-sws t fontified t face font-lock-comment-face) 807 808 (c-in-sws t fontified t face font-lock-comment-face) 808 811 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 811 813 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 813 814 (c-in-sws t fontified t face font-lock-comment-face) 814 815 (c-in-sws t fontified t face font-lock-comment-face) 815 817 (c-in-sws t fontified t face font-lock-comment-face) 817 820 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 820 821 (c-in-sws t fontified t face font-lock-comment-face) 821 822 (c-in-sws t fontified t face font-lock-comment-face) 822 823 (c-in-sws t fontified t) 823 824 (c-is-sws t fontified t face font-lock-keyword-face) 824 829 (fontified t face font-lock-keyword-face) 829 830 (fontified t) 830 846 (fontified t face font-lock-type-face) 846 847 (syntax-table (4 . 62) fontified t face (rainbow-delimiters-depth-1-face)) 847 863 (fontified t face font-lock-type-face) 863 864 (rear-nonsticky t fontified t face font-lock-type-face) 864 865 (syntax-table (5 . 60) fontified t c-type c-decl-id-start face (rainbow-delimiters-depth-1-face)) 865 866 (fontified t) 866 870 (fontified t face font-lock-variable-name-face) 870 871 (fontified t face (rainbow-delimiters-depth-1-face)) 871 873 (fontified t face font-lock-string-face) 873 874 (fontified t face font-lock-string-face) 874 875 (fontified t face font-lock-string-face) 875 876 (fontified t face font-lock-string-face) 876 877 (fontified t face font-lock-string-face) 877 878 (fontified t face font-lock-string-face) 878 879 (fontified t face font-lock-string-face) 879 880 (fontified t face font-lock-string-face) 880 881 (fontified t face font-lock-string-face) 881 882 (fontified t face font-lock-string-face) 882 883 (fontified t face font-lock-string-face) 883 884 (fontified t face font-lock-string-face) 884 885 (fontified t face font-lock-string-face) 885 886 (fontified t face font-lock-string-face) 886 887 (fontified t face font-lock-string-face) 887 889 (fontified t) 889 891 (fontified t face font-lock-string-face) 891 892 (fontified t face font-lock-string-face) 892 893 (fontified t face font-lock-string-face) 893 894 (fontified t face font-lock-string-face) 894 895 (fontified t face font-lock-string-face) 895 896 (fontified t face font-lock-string-face) 896 897 (fontified t face font-lock-string-face) 897 898 (fontified t face (rainbow-delimiters-depth-1-face)) 898 899 (rear-nonsticky t fontified t) 899 900 (fontified t)) . -947) (undo-tree-id1579 . -125) (undo-tree-id1580 . -822) (undo-tree-id1581 . -822) (undo-tree-id1582 . -160) (undo-tree-id1583 . -160) (undo-tree-id1584 . -209) (undo-tree-id1585 . -39) (undo-tree-id1586 . -39) (undo-tree-id1587 . -209) (undo-tree-id1588 . -565) (undo-tree-id1589 . -26) (undo-tree-id1590 . -63) (undo-tree-id1591 . -822) (undo-tree-id1592 . -847) (undo-tree-id1593 . -847) (undo-tree-id1594 . -209) (undo-tree-id1595 . -209) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -256) (undo-tree-id1599 . -900) (undo-tree-id1600 . -900) (undo-tree-id1601 . -1) (undo-tree-id1602 . -900) (t 25665 31645 387616 905000)) ((947 . 1847)) (25665 32174 166706 849000) 0 nil])
([nil nil ((969 . 991) 948) nil (25665 32184 578895 132000) 0 nil])
([nil nil ((947 . 948)) ((#("l" 0 1 (fontified t c-is-sws t)) . 947) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1)) (25665 32174 164931 358000) 0 nil])
([nil nil ((#("mlir" 0 4 (fontified t face font-lock-constant-face)) . 986) (undo-tree-id1605 . -4) (undo-tree-id1606 . -4) (undo-tree-id1607 . -4) 990) nil (25665 32184 578894 14000) 0 nil])
nil
([nil nil ((986 . 990)) nil (25665 32184 578874 791000) 0 nil])
([nil nil ((1 . 2) (t 25665 32184 591003 895000)) nil (25665 32298 562077 253000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1) (undo-tree-id1608 . -1) 2) nil (25665 32298 562072 132000) 0 nil])
([nil nil ((1 . 2) (t 25665 32298 570432 319000)) nil (25665 40867 895474 236000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1) (undo-tree-id1609 . -1) 2) nil (25665 40867 895470 351000) 0 nil])
([nil current ((apply 48 1175 1740 undo--wrap-and-run-primitive-undo 1175 1740 ((#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1738) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1732) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1726) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1718) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1708) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1696) (#("// " 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1568) (#("// " 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . -1508) (#("// " 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1457) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1408) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1352) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1321) (#("// " 0 1 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1290) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1251) (#("// " 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1219) (#("// " 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -1176) 1175)) (t 25665 40867 896375 612000)) nil (25665 41265 474116 338000) 0 nil])
nil
